
Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)

	СтрокаПредставления = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("Соревнование №%1 от %2 %3", Формат(
		Данные.Номер, "ЧГ=0;"), Формат(Данные.Дата, "ДФ=dd.MM.yyyy;"), Данные.НазваниеСоревнования);
	Представление = СтрокаПредставления;

КонецПроцедуры

Процедура ОбработкаПолученияПолейПредставления(Поля, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Поля.Добавить("НазваниеСоревнования");
	Поля.Добавить("Номер");
	Поля.Добавить("Дата");
КонецПроцедуры

//Таблица участников по жеребьевке  = ТаблицаЗначений
Функция ОпределитьКоличествоГрупп(Таблица, НомерТура, РежимТура) Экспорт

	ТЧУчастников =Таблица.Скопировать();   
	//получим какие группы завели
	КопияТЧУЧастниковДляГрупп = ТЧУчастников.Скопировать(Новый Структура("НомерТура,РежимТура", НомерТура, РежимТура));
	КопияТЧУЧастниковДляГрупп.Свернуть("НомерГруппы");
	Возврат КопияТЧУЧастниковДляГрупп.Количество();

КонецФункции

//ТаблицаДанных - это ДанныеФормыКоллекция, список участников в таблице значений с колонкой Участник
Функция РасчетМестНаСервере(СписокУчастников,ОбщаяТаблицаДокумента,НомерТура = Неопределено) Экспорт
		
	РасчетнаяТаблица = Новый ТаблицаЗначений;
	РасчетнаяТаблица.Колонки.Добавить("Участник",Новый ОписаниеТипов("СправочникСсылка.Участники"));
	РасчетнаяТаблица.Колонки.Добавить("Очки",Новый ОписаниеТипов("Число"));
	РасчетнаяТаблица.Колонки.Добавить("Место",Новый ОписаниеТипов("Число"));
	РасчетнаяТаблица.Колонки.Добавить("Соотношение",Новый ОписаниеТипов("Строка"));
	
	ОбщаяТаблицаОчков = ПоискРезультатИгрыДляГрупповогоЭтапаОбщая(НомерТура, ОбщаяТаблицаДокумента);
	
	Для каждого ТекСтр Из СписокУчастников Цикл
		НовСтрока = РасчетнаяТаблица.Добавить();
		НовСтрока.Участник = ТекСтр.Участник;
		Индекс = СписокУчастников.Индекс(ТекСтр);
		ТекНомер = 1;
		ВсегоОчков = 0;
		//@skip-warning
		Для Каждого ТекУч Из СписокУчастников Цикл
			ДанныеДляОтбора = Новый Структура;
			ДанныеДляОтбора.Вставить("Проигравший",СписокУчастников[Индекс].Участник);
			ДанныеДляОтбора.Вставить("Выигравший",СписокУчастников[ТекНомер-1].Участник);
			ДанныеДляОтбора.Вставить("НомерТура",НомерТура);
			
			ДанныеТаблицыПоОчкам = ОбщаяТаблицаОчков.НайтиСтроки(ДанныеДляОтбора);
			Если ДанныеТаблицыПоОчкам.Количество() = 0 Тогда
				
				//поменяем 
				ДанныеДляОтбора.Проигравший	=	СписокУчастников[ТекНомер-1].Участник;
				ДанныеДляОтбора.Выигравший	= СписокУчастников[Индекс].Участник;
				
				ДанныеТаблицыПоОчкам = ОбщаяТаблицаОчков.НайтиСтроки(ДанныеДляОтбора);
				
			КонецЕсли;             
			РезультатИгры = "";
			Если ДанныеТаблицыПоОчкам.Количество() > 0 Тогда
				//так как мы проверяем по первому игроку, то и ориентируемся по нему
				СтрокаТаблицы = ДанныеТаблицыПоОчкам[0];
 				Если ТекСтр.Участник = СтрокаТаблицы.Выигравший Тогда
					РезультатИгры = "2"; //выиграл
				Иначе
					Если СтрокаТаблицы.ТехническоеП Тогда
						РезультатИгры = "0";
					Иначе
						РезультатИгры = "1"; //проиграл
					КонецЕсли; 
				КонецЕсли;
			КонецЕсли;

			//РезультатИгры =  ПоискРезультатИгрыДляГрупповогоЭтапа(ДанныеДляОтбора,ОбщаяТаблицаДокумента);
			Если РезультатИгры <> "" Тогда
				ВсегоОчков = ВсегоОчков + Число(РезультатИгры);
			КонецЕсли;
			ТекНомер = ТекНомер + 1;
		КонецЦикла;
		НовСтрока["Очки"] = ВсегоОчков;
	КонецЦикла;
	//добавим расчет соотношений, по W/L (выигранных/проигранных партий)
	Для каждого ТекСтрТаблицаДанных Из РасчетнаяТаблица Цикл
		Если ТекСтрТаблицаДанных["Соотношение"] = "" Тогда
			//ищем соотношение партий
			перемТекУчастник = ТекСтрТаблицаДанных["Участник"]; 
			СоотношениеWL =  СформироватьОтношениеВыигранныхКПроиграннымПартиям(перемТекУчастник,ОбщаяТаблицаДокумента);
			ТекСтрТаблицаДанных["Соотношение"] = СоотношениеWL;
		КонецЕсли; 
	КонецЦикла; 
		
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = "ВЫБРАТЬ * ПОМЕСТИТЬ ТЗ ИЗ &Внеш КАК Внеш";
	Запрос.УстановитьПараметр("Внеш",РасчетнаяТаблица);
	Запрос.Выполнить();
	
	Запрос.Текст = "ВЫБРАТЬ * ПОМЕСТИТЬ ТЗОбщая ИЗ &Внеш КАК Внеш";
	Запрос.УстановитьПараметр("Внеш",ОбщаяТаблицаДокумента);
	Запрос.Выполнить();
	//будем считать что, очки уже посчитаны нужно распределить только места игроков
	
	//сформируем текст запроса
	Запрос.Текст = "ВЫБРАТЬ
	|	ТЗ.Участник,
	//|  ТЗ.НомерУчастника,
	|	ТЗ.Очки КАК Очки,
	|	ТЗ.Место
	|ИЗ
	|	ТЗ КАК ТЗ
	|
	|УПОРЯДОЧИТЬ ПО
	|	Очки УБЫВ";
	Результат = Запрос.Выполнить().Выгрузить();
	Сч = 1;
	Для Каждого ТекЗнач Из Результат Цикл
		ТекЗнач.Место = Сч;
		Искомый = РасчетнаяТаблица.НайтиСтроки(Новый Структура("Участник",ТекЗнач.Участник));
		Если Искомый.Количество() > 0 Тогда
			Искомый[0].Место = Сч;
		КонецЕсли;
		Сч = Сч + 1;
	КонецЦикла;
	
	//теперь есть таблица с приблизительными местами
	//необходимо проверить есть ли одинаковое количество очков у игроков
	
	//помещаем результат сразу в запрос для дальнейшего использования
	Запрос.Текст = "ВЫБРАТЬ * ПОМЕСТИТЬ ТЗ2 ИЗ &Внеш КАК Внеш";
	Запрос.УстановитьПараметр("Внеш",Результат);
	Запрос.Выполнить();
	
	Запрос.Текст = "ВЫБРАТЬ
	|	ТЗ.Очки КАК НомерОчков,
	|	КОЛИЧЕСТВО(ТЗ.Очки) КАК КолОчков
	|ИЗ
	|	ТЗ КАК ТЗ
	|
	|СГРУППИРОВАТЬ ПО
	|	ТЗ.Очки
	|
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(ТЗ.Очки) > 1
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТЗ.Очки УБЫВ";
	
	РезультатСпорных = Запрос.Выполнить().Выгрузить();
	Если РезультатСпорных.Количество() <> 0 Тогда //рассчитываем спорные
		Для Каждого ТекКолОчков Из РезультатСпорных Цикл
			КолОчковДляПоиска = ТекКолОчков.НомерОчков;
			Текст = "ВЫБРАТЬ
			|	ТЗ2.Участник КАК Игрок,
			|	ТЗ2.Очки
			|ИЗ
			|	ТЗ2 КАК ТЗ2
			|ГДЕ
			|	ТЗ2.Очки = &НомерКолОчков";
			Запрос.УстановитьПараметр("НомерКолОчков",КолОчковДляПоиска);
			Запрос.Текст = Текст;
			СпорныеИгрокиМассив = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Игрок");
			ТаблицаВозврата = Новый ТаблицаЗначений;
			ТаблицаВозврата.Колонки.Добавить("Игрок");
			ТаблицаВозврата.Колонки.Добавить("ВыигранныеМячи");
			ТаблицаВозврата.Колонки.Добавить("ПроигранныеМячи");
			ТаблицаВозврата.Колонки.Добавить("Отношение",Новый ОписаниеТипов("Число",,,Новый КвалификаторыЧисла(15,3)));
			Если СпорныеИгрокиМассив.Количество() = 2 Тогда
				//если спорные только 2 игрока, тогда просто узнаем кто кого из них выиграл
				Отбор = Новый Структура;
				Отбор.Вставить("НомерТура",НомерТура);
				Отбор.Вставить("Выигравший",СпорныеИгрокиМассив[0]);
				Отбор.Вставить("Проигравший",СпорныеИгрокиМассив[1]);
				Отбор.Вставить("РежимТура",Перечисления.РежимыТуровСоревнования.Групповой);
				МассивСтрок = ОбщаяТаблицаДокумента.НайтиСтроки(Отбор);
				Если МассивСтрок.Количество() = 0 Тогда //Не нашли
					Отбор = Новый Структура;
					Отбор.Вставить("НомерТура",НомерТура);
					Отбор.Вставить("Выигравший",СпорныеИгрокиМассив[1]);
					Отбор.Вставить("Проигравший",СпорныеИгрокиМассив[0]);
					Отбор.Вставить("РежимТура",Перечисления.РежимыТуровСоревнования.Групповой);
					МассивСтрок = ОбщаяТаблицаДокумента.НайтиСтроки(Отбор);//здесь должны быть записи по любому
					Если МассивСтрок.Количество() > 0 Тогда
						НовСтрока = ТаблицаВозврата.Добавить();
						НовСтрока.Игрок = МассивСтрок[0].Выигравший;
						НовСтрока.Отношение = 1;
						
						НовСтрока = ТаблицаВозврата.Добавить();
						НовСтрока.Игрок = МассивСтрок[0].Проигравший;
						НовСтрока.Отношение = 0;
					КонецЕсли;
				Иначе
					НовСтрока = ТаблицаВозврата.Добавить();
					НовСтрока.Игрок = МассивСтрок[0].Выигравший;
					НовСтрока.Отношение = 1;
					
					НовСтрока = ТаблицаВозврата.Добавить();
					НовСтрока.Игрок = МассивСтрок[0].Проигравший;
					НовСтрока.Отношение = 0;
				КонецЕсли;
			Иначе
				//значит спорных игроков 3 или больше
				ТаблицаМатчевыхОчков = ОпределитьМатчевыеОчки(СпорныеИгрокиМассив,ОбщаяТаблицаДокумента,НомерТура);
				//таблица уже отсортирована по возрастанию
				СчОтнош = 1;
				Для Каждого ТекСтрока Из ТаблицаМатчевыхОчков Цикл
					НовСтрока = ТаблицаВозврата.Добавить();
					ЗаполнитьЗначенияСвойств(НовСтрока,ТекСтрока);
					НовСтрока.Отношение = СчОтнош;
					СчОтнош = СчОтнош + 1;
				КонецЦикла;
				
				КопияТаблицаВозврата2 = ТаблицаВозврата.Скопировать(,"ВыигранныеМячи");
				КопияТаблицаВозврата2.Свернуть("ВыигранныеМячи");
				
				Если КопияТаблицаВозврата2.Количество() >= 1 Тогда
					ТаблицаВозврата.Очистить();
					//сначала посчитаем между ними партии, если это не решит вопрос места,
					//будем считать проигранные и выигранные очки
					Для Каждого ТекУчастник Из СпорныеИгрокиМассив Цикл
						//находим соотношение каждого участника
						СтрокаРезультата = ОпределитьВыигранныеИПроигранныеПартии(ТекУчастник,СпорныеИгрокиМассив,ОбщаяТаблицаДокумента,НомерТура);
						НовСтрока = ТаблицаВозврата.Добавить();
						ЗаполнитьЗначенияСвойств(НовСтрока,СтрокаРезультата);
					КонецЦикла;
					//проверим одинаковое отношение мало ли 
					КопияТаблицыВозврата = ТаблицаВозврата.Скопировать(,"Отношение");
					КопияТаблицыВозврата.Свернуть("Отношение");
					Если КопияТаблицыВозврата.Количество() = 1 Тогда //считаем по очкам
						//массив спорных мог измениться
						НовыеСпорныеИгроки = ТаблицаВозврата.Скопировать(Новый Структура("Отношение",КопияТаблицыВозврата[0].Отношение));
						СпорныеИгрокиМассив2 = НовыеСпорныеИгроки.ВыгрузитьКолонку("Игрок");
						Текст = "ВЫБРАТЬ
						|	*
						|ИЗ
						|	ТЗОбщая КАК ПроведениеСоревнованияОбщаяТаблицаДанных
						|ГДЕ
						|	ПроведениеСоревнованияОбщаяТаблицаДанных.Выигравший В(&Игроки)
						|	И ПроведениеСоревнованияОбщаяТаблицаДанных.Проигравший В(&Игроки)
						|	И ПроведениеСоревнованияОбщаяТаблицаДанных.НомерТура = &НомТура
						|	И ПроведениеСоревнованияОбщаяТаблицаДанных.РежимТура = ЗНАЧЕНИЕ(Перечисление.РежимыТуровСоревнования.Групповой)";
						Запрос.Текст = Текст;
						Запрос.УстановитьПараметр("Игроки",СпорныеИгрокиМассив2);
						Запрос.УстановитьПараметр("НомТура",НомерТура);
						ТаблицаСпорныхИгроков = Запрос.Выполнить().Выгрузить();
						//очистим таблицу возврата
						ТаблицаВозврата.Очистить();
						Для Каждого ТекИгрок Из СпорныеИгрокиМассив Цикл
							РезультатОдногоИгрока = ОпределитьВыигранныеИПроигранныеОчки(ТекИгрок.Ссылка,ТаблицаСпорныхИгроков,НомерТура);
							Если РезультатОдногоИгрока <> Неопределено Тогда
								НовСтрока = ТаблицаВозврата.Добавить();
								ЗаполнитьЗначенияСвойств(НовСтрока,РезультатОдногоИгрока);
							КонецЕсли;
						КонецЦикла;
					КонецЕсли;
				Иначе
				//	ТаблицаВозврата
				КонецЕсли; 
				
			КонецЕсли;
			ТаблицаВозврата.Сортировать("Отношение УБЫВ");
			
			//дальше смотрим какие номера нужно поставить
			//ищем места которые нужно распределить
			Запрос.Текст = "ВЫБРАТЬ
			|	МИНИМУМ(ТЗ.Место) КАК МаксМесто
			|ИЗ
			|	ТЗ2 КАК ТЗ
			|ГДЕ
			|	ТЗ.Участник В (&Игроки)";
			//|
			//|СГРУППИРОВАТЬ ПО
			//|	ТЗ."+КолонкаУчастник.Имя+"";
			Запрос.УстановитьПараметр("Игроки",СпорныеИгрокиМассив);
			МаксимальноеМесто = Запрос.Выполнить().Выгрузить();
			Если МаксимальноеМесто.Количество() > 0 Тогда
				перемМаксМесто = МаксимальноеМесто[0].МаксМесто;
			Иначе
				перемМаксМесто = 0;
			КонецЕсли;
			Для Каждого ТекСтр Из ТаблицаВозврата Цикл
				//ИскомаяСтрока = Результат.Найти(ТекСтр.Игрок);
				ИскомаяСтрока = РасчетнаяТаблица.Найти(ТекСтр.Игрок);
				Если ИскомаяСтрока <> Неопределено Тогда
					ИскомаяСтрока.Место = перемМаксМесто;
					перемМаксМесто = перемМаксМесто + 1;
				КонецЕсли;
			КонецЦикла;
			//Результат.Сортировать(""+КолонкаНомерУчас.Имя + " ВОЗР");
		КонецЦикла;
	КонецЕсли;
	
	Возврат РасчетнаяТаблица;
	
КонецФункции

Функция ОпределитьМатчевыеОчки(СпорныеИгроки,ОбщаяТаблица,НомерТура)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = "ВЫБРАТЬ * ПОМЕСТИТЬ втОбщаяТаблица Из &Внеш КАК Внеш";
	Запрос.УстановитьПараметр("Внеш",ОбщаяТаблица);
	Запрос.Выполнить();
	
	Запрос.УстановитьПараметр("НомерТура",НомерТура);
	Запрос.УстановитьПараметр("СписокУчастников",СпорныеИгроки);
	
	Текст = "ВЫБРАТЬ
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Выигравший КАК ТекУчастник,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Проигравший КАК Соперник,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.ОчкиВыигравшего,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.ОчкиПроигравшего,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.ТехническоеВ,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.ТехническоеП
	|ПОМЕСТИТЬ втТаблица
	|ИЗ
	|	втОбщаяТаблица КАК ПроведениеСоревнованияОбщаяТаблицаДанных
	|ГДЕ
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.НомерТура = &НомерТура
	|	И ПроведениеСоревнованияОбщаяТаблицаДанных.Выигравший В(&СписокУчастников)
	|	И ПроведениеСоревнованияОбщаяТаблицаДанных.Проигравший В(&СписокУчастников)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Проигравший,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Выигравший,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.ОчкиПроигравшего,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.ОчкиВыигравшего,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.ТехническоеП,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.ТехническоеВ
	|ИЗ
	|	втОбщаяТаблица КАК ПроведениеСоревнованияОбщаяТаблицаДанных
	|ГДЕ
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.НомерТура = &НомерТура
	|	И ПроведениеСоревнованияОбщаяТаблицаДанных.Выигравший В(&СписокУчастников)
	|	И ПроведениеСоревнованияОбщаяТаблицаДанных.Проигравший В(&СписокУчастников)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втТаблица.ТекУчастник,
	|	втТаблица.Соперник,
	|	СУММА(втТаблица.ОчкиВыигравшего) КАК ОчкиВыигравшего,
	|	СУММА(втТаблица.ОчкиПроигравшего) КАК ОчкиПроигравшего,
	|	втТаблица.ТехническоеВ,
	|	втТаблица.ТехническоеП
	|ПОМЕСТИТЬ втТаблицаСОчками
	|ИЗ
	|	втТаблица КАК втТаблица
	|
	|СГРУППИРОВАТЬ ПО
	|	втТаблица.ТекУчастник,
	|	втТаблица.Соперник,
	|	втТаблица.ТехническоеВ,
	|	втТаблица.ТехническоеП
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втТаблицаСОчками.ТекУчастник КАК Игрок,
	|	СУММА(ВЫБОР
	|			КОГДА втТаблицаСОчками.ТехническоеВ = ЛОЖЬ
	|				ТОГДА ВЫБОР
	|						КОГДА втТаблицаСОчками.ОчкиВыигравшего > втТаблицаСОчками.ОчкиПроигравшего
	|							ТОГДА 2
	|						ИНАЧЕ 1
	|					КОНЕЦ
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ВыигранныеМячи
	|ИЗ
	|	втТаблицаСОчками КАК втТаблицаСОчками
	|
	|СГРУППИРОВАТЬ ПО
	|	втТаблицаСОчками.ТекУчастник
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВыигранныеМячи";
	 Запрос.Текст = Текст;
	 Результат = Запрос.Выполнить().Выгрузить();
	 
	 Возврат Результат;
	 
КонецФункции

Функция ОпределитьВыигранныеИПроигранныеПартии(УчастникРасчета,СпорныеИгроки,ОбщаяТаблица,НомерТура)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = "ВЫБРАТЬ * ПОМЕСТИТЬ втОбщаяТаблица Из &Внеш КАК Внеш";
	Запрос.УстановитьПараметр("Внеш",ОбщаяТаблица);
	Запрос.Выполнить();
	
	Запрос.УстановитьПараметр("Ном",НомерТура);
	Запрос.УстановитьПараметр("Игрок",УчастникРасчета);
	Запрос.УстановитьПараметр("СписокИгроков2",СпорныеИгроки);
	
	Текст = "ВЫБРАТЬ
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.НомерТура,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.РежимТура,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.НомерГруппы,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Выигравший КАК Участник,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.ОчкиВыигравшего КАК WПартии,
	|	0 КАК LПартии
	|ПОМЕСТИТЬ втВыигравшиеПартии
	|ИЗ
	|	втОбщаяТаблица КАК ПроведениеСоревнованияОбщаяТаблицаДанных
	|ГДЕ
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.НомерТура = &Ном
	|	И ПроведениеСоревнованияОбщаяТаблицаДанных.Выигравший = &Игрок
	|	И ПроведениеСоревнованияОбщаяТаблицаДанных.Проигравший В(&СписокИгроков2)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.НомерТура,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.РежимТура,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.НомерГруппы,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Проигравший,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.ОчкиПроигравшего,
	|	0
	|ИЗ
	|	втОбщаяТаблица КАК ПроведениеСоревнованияОбщаяТаблицаДанных
	|ГДЕ
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.НомерТура = &Ном
	|	И ПроведениеСоревнованияОбщаяТаблицаДанных.Проигравший = &Игрок
	|	И ПроведениеСоревнованияОбщаяТаблицаДанных.Выигравший В(&СписокИгроков2)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втВыигравшиеПартии.НомерТура,
	|	втВыигравшиеПартии.РежимТура,
	|	втВыигравшиеПартии.НомерГруппы,
	|	втВыигравшиеПартии.Участник,
	|	СУММА(втВыигравшиеПартии.WПартии) КАК WПартии,
	|	СУММА(втВыигравшиеПартии.LПартии) КАК LПартии
	|ПОМЕСТИТЬ ИтоговаяВыиграшные
	|ИЗ
	|	втВыигравшиеПартии КАК втВыигравшиеПартии
	|
	|СГРУППИРОВАТЬ ПО
	|	втВыигравшиеПартии.НомерТура,
	|	втВыигравшиеПартии.РежимТура,
	|	втВыигравшиеПартии.НомерГруппы,
	|	втВыигравшиеПартии.Участник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.НомерТура,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.РежимТура,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.НомерГруппы,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Выигравший КАК Участник,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.ОчкиПроигравшего КАК LПартии,
	|	0 КАК WПартии
	|ПОМЕСТИТЬ втПроигранныеПартии
	|ИЗ
	|	втОбщаяТаблица КАК ПроведениеСоревнованияОбщаяТаблицаДанных
	|ГДЕ
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.НомерТура = &Ном
	|	И ПроведениеСоревнованияОбщаяТаблицаДанных.Выигравший = &Игрок
	|	И ПроведениеСоревнованияОбщаяТаблицаДанных.Проигравший В(&СписокИгроков2)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.НомерТура,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.РежимТура,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.НомерГруппы,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Проигравший,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.ОчкиВыигравшего,
	|	0
	|ИЗ
	|	втОбщаяТаблица КАК ПроведениеСоревнованияОбщаяТаблицаДанных
	|ГДЕ
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.НомерТура = &Ном
	|	И ПроведениеСоревнованияОбщаяТаблицаДанных.Проигравший = &Игрок
	|	И ПроведениеСоревнованияОбщаяТаблицаДанных.Выигравший В(&СписокИгроков2)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втПроигранныеПартии.НомерТура,
	|	втПроигранныеПартии.РежимТура,
	|	втПроигранныеПартии.НомерГруппы,
	|	втПроигранныеПартии.Участник,
	|	СУММА(втПроигранныеПартии.WПартии) КАК WПартии,
	|	СУММА(втПроигранныеПартии.LПартии) КАК LПартии
	|ПОМЕСТИТЬ ИтоговаяПроигранные
	|ИЗ
	|	втПроигранныеПартии КАК втПроигранныеПартии
	|
	|СГРУППИРОВАТЬ ПО
	|	втПроигранныеПартии.НомерТура,
	|	втПроигранныеПартии.РежимТура,
	|	втПроигранныеПартии.НомерГруппы,
	|	втПроигранныеПартии.Участник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИтоговаяВыиграшные.НомерТура КАК НомерТура,
	|	ИтоговаяВыиграшные.РежимТура КАК РежимТура,
	|	ИтоговаяВыиграшные.НомерГруппы КАК НомерГруппы,
	|	ИтоговаяВыиграшные.Участник КАК Участник,
	|	ИтоговаяВыиграшные.WПартии КАК WПартии,
	|	ИтоговаяВыиграшные.LПартии КАК LПартии
	|ПОМЕСТИТЬ втИтог
	|ИЗ
	|	ИтоговаяВыиграшные КАК ИтоговаяВыиграшные
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ИтоговаяПроигранные.НомерТура,
	|	ИтоговаяПроигранные.РежимТура,
	|	ИтоговаяПроигранные.НомерГруппы,
	|	ИтоговаяПроигранные.Участник,
	|	ИтоговаяПроигранные.WПартии,
	|	ИтоговаяПроигранные.LПартии
	|ИЗ
	|	ИтоговаяПроигранные КАК ИтоговаяПроигранные
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втИтог.НомерТура,
	|	втИтог.РежимТура,
	|	втИтог.НомерГруппы,
	|	втИтог.Участник,
	|	СУММА(втИтог.WПартии) КАК WПартии,
	|	СУММА(втИтог.LПартии) КАК LПартии
	|ПОМЕСТИТЬ втСвернутыйИтог
	|ИЗ
	|	втИтог КАК втИтог
	|
	|СГРУППИРОВАТЬ ПО
	|	втИтог.НомерТура,
	|	втИтог.РежимТура,
	|	втИтог.НомерГруппы,
	|	втИтог.Участник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втСвернутыйИтог.НомерТура,
	|	втСвернутыйИтог.РежимТура,
	|	втСвернутыйИтог.НомерГруппы,
	|	втСвернутыйИтог.Участник КАК Игрок,
	|	втСвернутыйИтог.WПартии КАК ВыигранныеМячи,
	|	втСвернутыйИтог.LПартии КАК ПроигранныеМячи,
	|	ВЫРАЗИТЬ(втСвернутыйИтог.WПартии / ВЫБОР
	|			КОГДА втСвернутыйИтог.LПартии = 0
	|				ТОГДА 1
	|			ИНАЧЕ втСвернутыйИтог.LПартии
	|		КОНЕЦ КАК ЧИСЛО(15, 3)) КАК Отношение
	|ИЗ
	|	втСвернутыйИтог КАК втСвернутыйИтог";
	 Запрос.Текст = Текст;
	 Результат = Запрос.Выполнить().Выгрузить();
	 Если Результат.Количество() > 0 Тогда
		 Возврат Результат[0];
	 Иначе
		 НовСтрока = Результат.Добавить();
		 Возврат НовСтрока; //возвратим пустую строку
	 КонецЕсли;
	 
КонецФункции

Функция ОпределитьВыигранныеИПроигранныеОчки(ТекУчастник,ОбщаяТаблицаДокумента,НомерТура = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Текст = "ВЫБРАТЬ
	|	*
	|ПОМЕСТИТЬ втДанные
	|ИЗ
	|	&Внеш КАК Внеш
	|ГДЕ
	|	Внеш.РежимТура = ЗНАЧЕНИЕ(Перечисление.РежимыТуровСоревнования.Групповой)";
	Если НомерТура <> Неопределено Тогда
		Текст = Текст + "
		| И Внеш.НомерТура = &НомерТура";
		Запрос.УстановитьПараметр("НомерТура",НомерТура);
	КонецЕсли;
	Запрос.Текст = Текст;
	Запрос.УстановитьПараметр("Внеш",ОбщаяТаблицаДокумента);
	Запрос.Выполнить();
	
	
	Текст = "ВЫБРАТЬ
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Выигравший КАК Участник,
	|	ВЫБОР
	|		КОГДА ПроведениеСоревнованияОбщаяТаблицаДанных.КолШаров <= 0
	|			ТОГДА -ПроведениеСоревнованияОбщаяТаблицаДанных.КолШаров
	|		КОГДА ПроведениеСоревнованияОбщаяТаблицаДанных.КолШаров >= 10
	|			ТОГДА ПроведениеСоревнованияОбщаяТаблицаДанных.КолШаров + 2
	|		ИНАЧЕ 11
	|	КОНЕЦ КАК КолШаров
	|ПОМЕСТИТЬ вт
	|ИЗ
	|	втДанные КАК ПроведениеСоревнованияОбщаяТаблицаДанных
	|ГДЕ
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Выигравший = &Участник
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Проигравший,
	|	ВЫБОР
	|		КОГДА ПроведениеСоревнованияОбщаяТаблицаДанных.КолШаров <= 0
	|				И ПроведениеСоревнованияОбщаяТаблицаДанных.КолШаров >= -9
	|			ТОГДА 11
	|		КОГДА ПроведениеСоревнованияОбщаяТаблицаДанных.КолШаров <= -10
	|			ТОГДА -ПроведениеСоревнованияОбщаяТаблицаДанных.КолШаров + 2
	|		ИНАЧЕ ПроведениеСоревнованияОбщаяТаблицаДанных.КолШаров
	|	КОНЕЦ
	|ИЗ
	|	втДанные КАК ПроведениеСоревнованияОбщаяТаблицаДанных
	|ГДЕ
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Проигравший = &Участник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	вт.Участник,
	|	СУММА(вт.КолШаров) КАК КолШаров
	|ПОМЕСТИТЬ ВыиграшныеОчки
	|ИЗ
	|	вт КАК вт
	|
	|СГРУППИРОВАТЬ ПО
	|	вт.Участник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Выигравший КАК Участник,
	|	ВЫБОР
	|		КОГДА ПроведениеСоревнованияОбщаяТаблицаДанных.КолШаров <= 0
	|				И ПроведениеСоревнованияОбщаяТаблицаДанных.КолШаров >= -9
	|			ТОГДА 11
	|		КОГДА ПроведениеСоревнованияОбщаяТаблицаДанных.КолШаров <= -10
	|			ТОГДА -ПроведениеСоревнованияОбщаяТаблицаДанных.КолШаров + 2
	|		ИНАЧЕ ПроведениеСоревнованияОбщаяТаблицаДанных.КолШаров
	|	КОНЕЦ КАК КолШаров
	|ПОМЕСТИТЬ вт2
	|ИЗ
	|	втДанные КАК ПроведениеСоревнованияОбщаяТаблицаДанных
	|ГДЕ
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Выигравший = &Участник
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Проигравший,
	|	ВЫБОР
	|		КОГДА ПроведениеСоревнованияОбщаяТаблицаДанных.КолШаров < 0
	|			ТОГДА -ПроведениеСоревнованияОбщаяТаблицаДанных.КолШаров
	|		КОГДА ПроведениеСоревнованияОбщаяТаблицаДанных.КолШаров >= 0
	|				И ПроведениеСоревнованияОбщаяТаблицаДанных.КолШаров <= 9
	|			ТОГДА 11
	|		ИНАЧЕ ПроведениеСоревнованияОбщаяТаблицаДанных.КолШаров + 2
	|	КОНЕЦ
	|ИЗ
	|	втДанные КАК ПроведениеСоревнованияОбщаяТаблицаДанных
	|ГДЕ
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Проигравший = &Участник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	вт2.Участник,
	|	СУММА(вт2.КолШаров) КАК КолШаров
	|ПОМЕСТИТЬ ПроигранныеОчки
	|ИЗ
	|	вт2 КАК вт2
	|
	|СГРУППИРОВАТЬ ПО
	|	вт2.Участник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВыиграшныеОчки.Участник КАК Участник,
	|	ВыиграшныеОчки.КолШаров КАК ВыигралОчков,
	|	0 КАК ПроигралОчков
	|ПОМЕСТИТЬ ПолнаяТаблица
	|ИЗ
	|	ВыиграшныеОчки КАК ВыиграшныеОчки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПроигранныеОчки.Участник,
	|	0,
	|	ПроигранныеОчки.КолШаров
	|ИЗ
	|	ПроигранныеОчки КАК ПроигранныеОчки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПолнаяТаблица.Участник,
	|	СУММА(ПолнаяТаблица.ВыигралОчков) КАК ВыигралОчков,
	|	СУММА(ПолнаяТаблица.ПроигралОчков) КАК ПроигралОчков
	|ПОМЕСТИТЬ ИтоговаяТЗ
	|ИЗ
	|	ПолнаяТаблица КАК ПолнаяТаблица
	|
	|СГРУППИРОВАТЬ ПО
	|	ПолнаяТаблица.Участник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИтоговаяТЗ.Участник КАК Игрок,
	|	ИтоговаяТЗ.ВыигралОчков КАК ВыигранныеМячи,
	|	ИтоговаяТЗ.ПроигралОчков КАК ПроигранныеМячи,
	|	ИтоговаяТЗ.ВыигралОчков / ИтоговаяТЗ.ПроигралОчков КАК Отношение
	|ИЗ
	|	ИтоговаяТЗ КАК ИтоговаяТЗ";	
	Запрос.УстановитьПараметр("Участник",ТекУчастник);
	Запрос.Текст = Текст;
	Результат = Запрос.Выполнить().Выгрузить();
	Если Результат.Количество() > 0 Тогда
		Возврат Результат[0];
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

Функция ПоискРезультатИгрыДляГрупповогоЭтапа(Данные,ОбщиеДанные) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = "ВЫБРАТЬ * ПОМЕСТИТЬ втТЗ ИЗ &Внеш КАК Внеш";
	Запрос.УстановитьПараметр("Внеш",ОбщиеДанные);
	Запрос.Выполнить();
	
	Запрос.Текст = "ВЫБРАТЬ
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.НомерТура,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Выигравший,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Проигравший,
	|	СУММА(ПроведениеСоревнованияОбщаяТаблицаДанных.ОчкиВыигравшего) КАК ОчкиВыигравшего,
	|	СУММА(ПроведениеСоревнованияОбщаяТаблицаДанных.ОчкиПроигравшего) КАК ОчкиПроигравшего,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.ТехническоеВ,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.ТехническоеП
	|ПОМЕСТИТЬ втТаблица
	|ИЗ
	|	втТЗ КАК ПроведениеСоревнованияОбщаяТаблицаДанных
	|ГДЕ
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.НомерТура = &НомерТура
	|	И ПроведениеСоревнованияОбщаяТаблицаДанных.Выигравший = &Первый
	|	И ПроведениеСоревнованияОбщаяТаблицаДанных.Проигравший = &Второй
	|
	|СГРУППИРОВАТЬ ПО
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.НомерТура,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Выигравший,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Проигравший,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.ТехническоеВ,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.ТехническоеП
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.НомерТура,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Выигравший,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Проигравший,
	|	СУММА(ПроведениеСоревнованияОбщаяТаблицаДанных.ОчкиВыигравшего),
	|	СУММА(ПроведениеСоревнованияОбщаяТаблицаДанных.ОчкиПроигравшего),
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.ТехническоеВ,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.ТехническоеП
	|ИЗ
	|	втТЗ КАК ПроведениеСоревнованияОбщаяТаблицаДанных
	|ГДЕ
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.НомерТура = &НомерТура
	|	И ПроведениеСоревнованияОбщаяТаблицаДанных.Выигравший = &Второй
	|	И ПроведениеСоревнованияОбщаяТаблицаДанных.Проигравший = &Первый
	|
	|СГРУППИРОВАТЬ ПО
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.НомерТура,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Выигравший,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Проигравший,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.ТехническоеВ,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.ТехническоеП
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втТаблица.НомерТура,
	|	втТаблица.Выигравший,
	|	втТаблица.Проигравший,
	|	втТаблица.ОчкиВыигравшего,
	|	втТаблица.ОчкиПроигравшего,
	|	втТаблица.ТехническоеВ,
	|	втТаблица.ТехническоеП
	|ИЗ
	|	втТаблица КАК втТаблица
	|
	|СГРУППИРОВАТЬ ПО
	|	втТаблица.Выигравший,
	|	втТаблица.Проигравший,
	|	втТаблица.НомерТура,
	|	втТаблица.ОчкиВыигравшего,
	|	втТаблица.ОчкиПроигравшего,
	|	втТаблица.ТехническоеВ,
	|	втТаблица.ТехническоеП";
	
	//делаем объдинение в запросе сразу, так как может быть только один вариант и он сразу будет в результате
	Запрос.УстановитьПараметр("НомерТура",Данные.НомерТура);
	Запрос.УстановитьПараметр("Первый",Данные.Первый);
	Запрос.УстановитьПараметр("Второй",Данные.Второй);
	Результат = Запрос.Выполнить().Выгрузить();
	
	Если Результат.Количество() > 0 Тогда
		//так как мы проверяем по первому игроку, то и ориентируемся по нему
		СтрокаТаблицы = Результат[0];
		Если СтрокаТаблицы.Выигравший = Данные.Первый Тогда
			Возврат "2"; //выиграл
		Иначе
			Если СтрокаТаблицы.ТехническоеП Тогда
				Возврат "0";
			Иначе
				Возврат "1"; //проиграл
			КонецЕсли; 
		КонецЕсли;
	Иначе
		Возврат "";
	КонецЕсли;
	
КонецФункции

Функция ПоискРезультатИгрыДляГрупповогоЭтапаОбщая(НомерТура, ОбщиеДанные) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = "ВЫБРАТЬ * ПОМЕСТИТЬ втТЗ ИЗ &Внеш КАК Внеш";
	Запрос.УстановитьПараметр("Внеш",ОбщиеДанные);
	Запрос.Выполнить();
	
	Запрос.Текст = "ВЫБРАТЬ
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.НомерТура,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Выигравший,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Проигравший,
	|	СУММА(ПроведениеСоревнованияОбщаяТаблицаДанных.ОчкиВыигравшего) КАК ОчкиВыигравшего,
	|	СУММА(ПроведениеСоревнованияОбщаяТаблицаДанных.ОчкиПроигравшего) КАК ОчкиПроигравшего,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.ТехническоеВ,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.ТехническоеП
	|ПОМЕСТИТЬ втТаблица
	|ИЗ
	|	втТЗ КАК ПроведениеСоревнованияОбщаяТаблицаДанных
	|ГДЕ
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.НомерТура = &НомерТура
	|
	|СГРУППИРОВАТЬ ПО
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.НомерТура,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Выигравший,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Проигравший,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.ТехническоеВ,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.ТехническоеП
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.НомерТура,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Выигравший,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Проигравший,
	|	СУММА(ПроведениеСоревнованияОбщаяТаблицаДанных.ОчкиВыигравшего),
	|	СУММА(ПроведениеСоревнованияОбщаяТаблицаДанных.ОчкиПроигравшего),
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.ТехническоеВ,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.ТехническоеП
	|ИЗ
	|	втТЗ КАК ПроведениеСоревнованияОбщаяТаблицаДанных
	|ГДЕ
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.НомерТура = &НомерТура
	|
	|СГРУППИРОВАТЬ ПО
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.НомерТура,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Выигравший,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Проигравший,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.ТехническоеВ,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.ТехническоеП
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втТаблица.НомерТура,
	|	втТаблица.Выигравший,
	|	втТаблица.Проигравший,
	|	втТаблица.ОчкиВыигравшего,
	|	втТаблица.ОчкиПроигравшего,
	|	втТаблица.ТехническоеВ,
	|	втТаблица.ТехническоеП
	|ИЗ
	|	втТаблица КАК втТаблица
	|
	|СГРУППИРОВАТЬ ПО
	|	втТаблица.Выигравший,
	|	втТаблица.Проигравший,
	|	втТаблица.НомерТура,
	|	втТаблица.ОчкиВыигравшего,
	|	втТаблица.ОчкиПроигравшего,
	|	втТаблица.ТехническоеВ,
	|	втТаблица.ТехническоеП";
	
	Запрос.УстановитьПараметр("НомерТура",НомерТура);
	Результат = Запрос.Выполнить().Выгрузить();
	
	Возврат Результат;
	
КонецФункции
  
Функция ПолучитьТаблицуИгрТура(КолУчастников) Экспорт
	
	Таблица = Новый ТаблицаЗначений;
	Таблица.Колонки.Добавить("НомерТура");
	Таблица.Колонки.Добавить("Первый");
	Таблица.Колонки.Добавить("Второй");
	Если КолУчастников <= 4  Тогда
		ДобавлениеСтрокВТаблицу(Таблица,1,1,4);
		ДобавлениеСтрокВТаблицу(Таблица,1,2,3);
		ДобавлениеСтрокВТаблицу(Таблица,2,3,1);
		ДобавлениеСтрокВТаблицу(Таблица,2,4,2);
		ДобавлениеСтрокВТаблицу(Таблица,3,1,2);
		ДобавлениеСтрокВТаблицу(Таблица,3,3,4);
	ИначеЕсли КолУчастников > 4 И КолУчастников <= 6 Тогда
		ДобавлениеСтрокВТаблицу(Таблица,1,1,6);
		ДобавлениеСтрокВТаблицу(Таблица,1,2,5);
		ДобавлениеСтрокВТаблицу(Таблица,1,3,4);
		ДобавлениеСтрокВТаблицу(Таблица,2,5,1);
		ДобавлениеСтрокВТаблицу(Таблица,2,6,4);
		ДобавлениеСтрокВТаблицу(Таблица,2,2,3);
		ДобавлениеСтрокВТаблицу(Таблица,3,1,4);
		ДобавлениеСтрокВТаблицу(Таблица,3,5,3);
		ДобавлениеСтрокВТаблицу(Таблица,3,6,2);
		ДобавлениеСтрокВТаблицу(Таблица,4,3,1);
		ДобавлениеСтрокВТаблицу(Таблица,4,4,2);
		ДобавлениеСтрокВТаблицу(Таблица,4,5,6);
		ДобавлениеСтрокВТаблицу(Таблица,5,1,2);
		ДобавлениеСтрокВТаблицу(Таблица,5,3,6);
		ДобавлениеСтрокВТаблицу(Таблица,5,4,5);
		//15
	ИначеЕсли КолУчастников > 6 И КолУчастников <= 8 Тогда
		ДобавлениеСтрокВТаблицу(Таблица,1,1,8);
		ДобавлениеСтрокВТаблицу(Таблица,1,2,7);
		ДобавлениеСтрокВТаблицу(Таблица,1,3,6);
		ДобавлениеСтрокВТаблицу(Таблица,1,4,5);
		ДобавлениеСтрокВТаблицу(Таблица,2,7,1);
		ДобавлениеСтрокВТаблицу(Таблица,2,8,6);
		ДобавлениеСтрокВТаблицу(Таблица,2,2,5);
		ДобавлениеСтрокВТаблицу(Таблица,2,3,4);
		ДобавлениеСтрокВТаблицу(Таблица,3,1,6);
		ДобавлениеСтрокВТаблицу(Таблица,3,7,5);
		ДобавлениеСтрокВТаблицу(Таблица,3,8,4);
		ДобавлениеСтрокВТаблицу(Таблица,3,2,3);
		ДобавлениеСтрокВТаблицу(Таблица,4,5,1);
		ДобавлениеСтрокВТаблицу(Таблица,4,6,4);
		ДобавлениеСтрокВТаблицу(Таблица,4,7,3);
		ДобавлениеСтрокВТаблицу(Таблица,4,8,2);
		ДобавлениеСтрокВТаблицу(Таблица,5,1,4);
		ДобавлениеСтрокВТаблицу(Таблица,5,5,3);
		ДобавлениеСтрокВТаблицу(Таблица,5,6,2);
		ДобавлениеСтрокВТаблицу(Таблица,5,7,8);
		ДобавлениеСтрокВТаблицу(Таблица,6,3,1);
		ДобавлениеСтрокВТаблицу(Таблица,6,4,2);
		ДобавлениеСтрокВТаблицу(Таблица,6,5,8);
		ДобавлениеСтрокВТаблицу(Таблица,6,6,7);
		ДобавлениеСтрокВТаблицу(Таблица,7,1,2);
		ДобавлениеСтрокВТаблицу(Таблица,7,3,8);
		ДобавлениеСтрокВТаблицу(Таблица,7,4,7);
		ДобавлениеСтрокВТаблицу(Таблица,7,5,6);
		//28
	ИначеЕсли КолУчастников > 8 И КолУчастников <= 10 Тогда
		ДобавлениеСтрокВТаблицу(Таблица,1,1,10);
		ДобавлениеСтрокВТаблицу(Таблица,1,2,9);
		ДобавлениеСтрокВТаблицу(Таблица,1,3,8);
		ДобавлениеСтрокВТаблицу(Таблица,1,4,7);
		ДобавлениеСтрокВТаблицу(Таблица,1,5,6);
		
		ДобавлениеСтрокВТаблицу(Таблица,2,9,1);
		ДобавлениеСтрокВТаблицу(Таблица,2,10,8);
		ДобавлениеСтрокВТаблицу(Таблица,2,2,7);
		ДобавлениеСтрокВТаблицу(Таблица,2,3,6);
		ДобавлениеСтрокВТаблицу(Таблица,2,4,5);
		
		ДобавлениеСтрокВТаблицу(Таблица,3,1,8);
		ДобавлениеСтрокВТаблицу(Таблица,3,9,7);
		ДобавлениеСтрокВТаблицу(Таблица,3,10,6);
		ДобавлениеСтрокВТаблицу(Таблица,3,2,5);
		ДобавлениеСтрокВТаблицу(Таблица,3,3,4);
		
		ДобавлениеСтрокВТаблицу(Таблица,4,7,1);
		ДобавлениеСтрокВТаблицу(Таблица,4,8,6);
		ДобавлениеСтрокВТаблицу(Таблица,4,9,5);
		ДобавлениеСтрокВТаблицу(Таблица,4,10,4);
		ДобавлениеСтрокВТаблицу(Таблица,4,2,3);
		
		ДобавлениеСтрокВТаблицу(Таблица,5,1,6);
		ДобавлениеСтрокВТаблицу(Таблица,5,7,5);
		ДобавлениеСтрокВТаблицу(Таблица,5,8,4);
		ДобавлениеСтрокВТаблицу(Таблица,5,9,3);
		ДобавлениеСтрокВТаблицу(Таблица,5,10,2);
		
		ДобавлениеСтрокВТаблицу(Таблица,6,5,1);
		ДобавлениеСтрокВТаблицу(Таблица,6,6,4);
		ДобавлениеСтрокВТаблицу(Таблица,6,7,3);
		ДобавлениеСтрокВТаблицу(Таблица,6,8,2);
		ДобавлениеСтрокВТаблицу(Таблица,6,9,10);
		
		ДобавлениеСтрокВТаблицу(Таблица,7,1,4);
		ДобавлениеСтрокВТаблицу(Таблица,7,5,3);
		ДобавлениеСтрокВТаблицу(Таблица,7,6,2);
		ДобавлениеСтрокВТаблицу(Таблица,7,7,10);
		ДобавлениеСтрокВТаблицу(Таблица,7,8,9);
		
		ДобавлениеСтрокВТаблицу(Таблица,8,3,1);
		ДобавлениеСтрокВТаблицу(Таблица,8,4,2);
		ДобавлениеСтрокВТаблицу(Таблица,8,5,10);
		ДобавлениеСтрокВТаблицу(Таблица,8,6,9);
		ДобавлениеСтрокВТаблицу(Таблица,8,7,8);
		
		ДобавлениеСтрокВТаблицу(Таблица,9,1,2);
		ДобавлениеСтрокВТаблицу(Таблица,9,3,10);
		ДобавлениеСтрокВТаблицу(Таблица,9,4,9);
		ДобавлениеСтрокВТаблицу(Таблица,9,5,8);
		ДобавлениеСтрокВТаблицу(Таблица,9,6,7);
		//45
	ИначеЕсли КолУчастников > 10 И КолУчастников <= 12 Тогда
		ДобавлениеСтрокВТаблицу(Таблица,1,1,12);
		ДобавлениеСтрокВТаблицу(Таблица,1,2,11);
		ДобавлениеСтрокВТаблицу(Таблица,1,3,10);
		ДобавлениеСтрокВТаблицу(Таблица,1,4,9);
		ДобавлениеСтрокВТаблицу(Таблица,1,5,8);
		ДобавлениеСтрокВТаблицу(Таблица,1,6,7);
		
		ДобавлениеСтрокВТаблицу(Таблица,2,11,1);
		ДобавлениеСтрокВТаблицу(Таблица,2,10,12);
		ДобавлениеСтрокВТаблицу(Таблица,2,2,9);
		ДобавлениеСтрокВТаблицу(Таблица,2,3,8);
		ДобавлениеСтрокВТаблицу(Таблица,2,4,7);
		ДобавлениеСтрокВТаблицу(Таблица,2,6,5);
		
		ДобавлениеСтрокВТаблицу(Таблица,3,1,10);
		ДобавлениеСтрокВТаблицу(Таблица,3,9,11);
		ДобавлениеСтрокВТаблицу(Таблица,3,12,8);
		ДобавлениеСтрокВТаблицу(Таблица,3,2,7);
		ДобавлениеСтрокВТаблицу(Таблица,3,3,6);
		ДобавлениеСтрокВТаблицу(Таблица,3,5,4);
		
		ДобавлениеСтрокВТаблицу(Таблица,4,9,1);
		ДобавлениеСтрокВТаблицу(Таблица,4,8,10);
		ДобавлениеСтрокВТаблицу(Таблица,4,7,11);
		ДобавлениеСтрокВТаблицу(Таблица,4,12,6);
		ДобавлениеСтрокВТаблицу(Таблица,4,2,5);
		ДобавлениеСтрокВТаблицу(Таблица,4,4,3);
		//5 		1-8 9-7 10-6 11-5 12-4 2-3
		ДобавлениеСтрокВТаблицу(Таблица,5,1,8);
		ДобавлениеСтрокВТаблицу(Таблица,5,7,9);
		ДобавлениеСтрокВТаблицу(Таблица,5,10,6);
		ДобавлениеСтрокВТаблицу(Таблица,5,11,5);
		ДобавлениеСтрокВТаблицу(Таблица,5,12,4);
		ДобавлениеСтрокВТаблицу(Таблица,5,2,3);
		//6 		7-1 8-6 9-5 10-4 11-3 12-2
		ДобавлениеСтрокВТаблицу(Таблица,6,7,1);
		ДобавлениеСтрокВТаблицу(Таблица,6,8,6);
		ДобавлениеСтрокВТаблицу(Таблица,6,9,5);
		ДобавлениеСтрокВТаблицу(Таблица,6,10,4);
		ДобавлениеСтрокВТаблицу(Таблица,6,11,3);
		ДобавлениеСтрокВТаблицу(Таблица,6,12,2);
		//7 		1-6 7-5 8-4 9-3 10-2 11-12
		ДобавлениеСтрокВТаблицу(Таблица,7,1,6);
		ДобавлениеСтрокВТаблицу(Таблица,7,7,5);
		ДобавлениеСтрокВТаблицу(Таблица,7,8,4);
		ДобавлениеСтрокВТаблицу(Таблица,7,9,3);
		ДобавлениеСтрокВТаблицу(Таблица,7,10,2);
		ДобавлениеСтрокВТаблицу(Таблица,7,11,12);
		//8 		5-1 6-4 7-3 8-2 9-12 10-11
		ДобавлениеСтрокВТаблицу(Таблица,8,5,1);
		ДобавлениеСтрокВТаблицу(Таблица,8,6,4);
		ДобавлениеСтрокВТаблицу(Таблица,8,7,3);
		ДобавлениеСтрокВТаблицу(Таблица,8,8,2);
		ДобавлениеСтрокВТаблицу(Таблица,8,9,12);
		ДобавлениеСтрокВТаблицу(Таблица,8,10,11);
		//9 		1-4 5-3 6-2 7-12 8-11 9-10
		ДобавлениеСтрокВТаблицу(Таблица,9,1,4);
		ДобавлениеСтрокВТаблицу(Таблица,9,3,5);
		ДобавлениеСтрокВТаблицу(Таблица,9,6,2);
		ДобавлениеСтрокВТаблицу(Таблица,9,7,12);
		ДобавлениеСтрокВТаблицу(Таблица,9,8,11);
		ДобавлениеСтрокВТаблицу(Таблица,9,9,10);
		//10 	3-1 4-2 5-12 6-11 7-10 8-9
		ДобавлениеСтрокВТаблицу(Таблица,10,1,3);
		ДобавлениеСтрокВТаблицу(Таблица,10,4,2);
		ДобавлениеСтрокВТаблицу(Таблица,10,5,12);
		ДобавлениеСтрокВТаблицу(Таблица,10,6,11);
		ДобавлениеСтрокВТаблицу(Таблица,10,7,10);
		ДобавлениеСтрокВТаблицу(Таблица,10,9,9);
		//11 	1-2 3-12 4-11 5-10 6-9 7-8	
		ДобавлениеСтрокВТаблицу(Таблица,11,1,2);
		ДобавлениеСтрокВТаблицу(Таблица,11,3,12);
		ДобавлениеСтрокВТаблицу(Таблица,11,4,11);
		ДобавлениеСтрокВТаблицу(Таблица,11,5,10);
		ДобавлениеСтрокВТаблицу(Таблица,11,6,9);
		ДобавлениеСтрокВТаблицу(Таблица,11,7,8);
	КонецЕсли;
	
	Возврат Таблица;
	
КонецФункции

Процедура ДобавлениеСтрокВТаблицу(Таблица,Тур,Первый,Второй)
	
	НовСтрока = Таблица.Добавить();
	НовСтрока.НомерТура 	= Тур;
	НовСтрока.Первый 		= Первый;
	НовСтрока.Второй			= Второй;
	
КонецПроцедуры

Функция РассчитатьСреднийРейтингВМодулеМенеджера(ТаблицаУчастникРейтинг) Экспорт
	
	КолУчастниковДляРасчета = Константы.СреднийРейтингЛучшихУчастников.Получить();
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = "ВЫБРАТЬ * ПОМЕСТИТЬ втТЗ ИЗ &Внеш КАК Внеш";
	Запрос.УстановитьПараметр("Внеш",ТаблицаУчастникРейтинг);
	Запрос.Выполнить();
	
	Если КолУчастниковДляРасчета = 0 Тогда
		ДопТекст = "";	
	Иначе
		ДопТекст = "ПЕРВЫЕ "+ Формат(КолУчастниковДляРасчета,"ЧГ=0");
	КонецЕсли;
	Запрос.Текст = "ВЫБРАТЬ "+ДопТекст+"
	|	ПроведениеСоревнованияСписокУчастников.Участник КАК Участник,
	|	ПроведениеСоревнованияСписокУчастников.ТекущийРейтинг КАК ТекущийРейтинг
	|ИЗ
	|	втТЗ КАК ПроведениеСоревнованияСписокУчастников
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТекущийРейтинг УБЫВ,
	|	Участник";
	Результат = Запрос.Выполнить().Выгрузить();
	Если Результат.Количество() > 0 Тогда
		Данные = Новый Структура;
		Данные.Вставить("СреднийРейтинг",Результат.Итог("ТекущийРейтинг") / Результат.Количество());
		Данные.Вставить("Первые",КолУчастниковДляРасчета);
		Данные.Вставить("ФорматСреднийРейтинг",Формат(Данные.СреднийРейтинг,"ЧЦ=15; ЧДЦ=2; ЧН=0"));
	Иначе
		Данные = Новый Структура;
		Данные.Вставить("СреднийРейтинг",0);
		Данные.Вставить("Первые",КолУчастниковДляРасчета);
		Данные.Вставить("ФорматСреднийРейтинг","0");
	КонецЕсли;
	
	Возврат Данные;	
	
КонецФункции
//------------------------------------------------------

//---------------------------------------------------------------------------------------
Процедура ЗаполнениеСоответствийИгр8(СоответствияИгр,РежимТура) Экспорт
	
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 1;
	НовСтрока.Расшифровка = "Игрок1#Игрок2";

	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 2;
	НовСтрока.Расшифровка = "Игрок3#Игрок4";

	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 3;
	НовСтрока.Расшифровка = "Игрок5#Игрок6";

	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 4;
	НовСтрока.Расшифровка = "Игрок7#Игрок8";

	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 5;
	НовСтрока.Расшифровка = "Игра1#Игра2";

	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 6;
	НовСтрока.Расшифровка = "Игра3#Игра4";

	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 7;
	НовСтрока.Расшифровка = "Игра5#Игра6";//1 и 2 места
	
	Если РежимТура = Перечисления.РежимыТуровСоревнования.Олимпийка Тогда
		Возврат;
	КонецЕсли;
	
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 8;
	НовСтрока.Расшифровка = "ИграМ1#ИграМ2";
	
	//дальше этапы по играм
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 9;
	НовСтрока.Расшифровка = "ИграМ3#ИграМ4";

	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 10;
	НовСтрока.Расшифровка = "ИграМ6#Игра8";

	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 11;
	НовСтрока.Расшифровка = "Игра9#ИграМ5";

	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 12;
	НовСтрока.Расшифровка = "Игра11#Игра10"; //3 и 4 места

	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 13;
	НовСтрока.Расшифровка = "ИграМ11#ИграМ10";//6 и 5 места

	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 14;
	НовСтрока.Расшифровка = "ИграМ8#ИграМ9"; //7 и 8 места

КонецПроцедуры

//заполняем соответствия игр, для выбора по блоку для -16
Процедура ЗаполнениеСоответствийИгр16(СоответствияИгр,РежимТура) Экспорт
	
	//для первого этапа 8 игр
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 1;
	НовСтрока.Расшифровка = "Игрок1#Игрок2";

	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 2;
	НовСтрока.Расшифровка = "Игрок3#Игрок4";

	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 3;
	НовСтрока.Расшифровка = "Игрок5#Игрок6";

	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 4;
	НовСтрока.Расшифровка = "Игрок7#Игрок8";

	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 5;
	НовСтрока.Расшифровка = "Игрок9#Игрок10";

	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 6;
	НовСтрока.Расшифровка = "Игрок11#Игрок12";

	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 7;
	НовСтрока.Расшифровка = "Игрок13#Игрок14";

	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 8;
	НовСтрока.Расшифровка = "Игрок15#Игрок16";
	
	ДобавитьСоответствиеИгр(0,9,15,,СоответствияИгр);
	//дальше этапы по играм
	//НовСтрока = СоответствияИгр.Добавить();
	//НовСтрока.Игра = 9;
	//НовСтрока.Расшифровка = "Игра1#Игра2";

	//НовСтрока = СоответствияИгр.Добавить();
	//НовСтрока.Игра = 10;
	//НовСтрока.Расшифровка = "Игра3#Игра4";

	//НовСтрока = СоответствияИгр.Добавить();
	//НовСтрока.Игра = 11;
	//НовСтрока.Расшифровка = "Игра5#Игра6";

	//НовСтрока = СоответствияИгр.Добавить();
	//НовСтрока.Игра = 12;
	//НовСтрока.Расшифровка = "Игра7#Игра8";

	//НовСтрока = СоответствияИгр.Добавить();
	//НовСтрока.Игра = 13;
	//НовСтрока.Расшифровка = "Игра9#Игра10";

	//НовСтрока = СоответствияИгр.Добавить();
	//НовСтрока.Игра = 14;
	//НовСтрока.Расшифровка = "Игра11#Игра12";

	//НовСтрока = СоответствияИгр.Добавить();
	//НовСтрока.Игра = 15;
	//НовСтрока.Расшифровка = "Игра13#Игра14";//1 и 2 места
    ///
	Если РежимТура = Перечисления.РежимыТуровСоревнования.Олимпийка Тогда
		Возврат;
	КонецЕсли;

	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 16;
	НовСтрока.Расшифровка = "ИграМ1#ИграМ2";

	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 17;
	НовСтрока.Расшифровка = "ИграМ3#ИграМ4";

	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 18;
	НовСтрока.Расшифровка = "ИграМ5#ИграМ6";

	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 19;
	НовСтрока.Расшифровка = "ИграМ7#ИграМ8";

	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 20;
	НовСтрока.Расшифровка = "ИграМ12#Игра16";

	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 21;
	НовСтрока.Расшифровка = "Игра17#ИграМ11";

	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 22;
	НовСтрока.Расшифровка = "ИграМ10#Игра18";

	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 23;
	НовСтрока.Расшифровка = "Игра19#ИграМ9";

	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 24;
	НовСтрока.Расшифровка = "Игра20#Игра21";

	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 25;
	НовСтрока.Расшифровка = "Игра22#Игра23";

	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 26;
	НовСтрока.Расшифровка = "ИграМ13#Игра24";

	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 27;
	НовСтрока.Расшифровка = "Игра25#ИграМ14";

	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 28;
	НовСтрока.Расшифровка = "Игра26#Игра27";//3 и 4 места

	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 29;
	НовСтрока.Расшифровка = "ИграМ26#ИграМ27";//5 и 6 места

	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 30;
	НовСтрока.Расшифровка = "ИграМ24#ИграМ25";//7 и 8 места

	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 31;
	НовСтрока.Расшифровка = "ИграМ20#ИграМ21";

	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 32;
	НовСтрока.Расшифровка = "ИграМ22#ИграМ23";

	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 33;
	НовСтрока.Расшифровка = "Игра31#Игра32";//9 и 10 места

	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 34;
	НовСтрока.Расшифровка = "ИграМ31#ИграМ32";//11 и 12 места

	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 35;
	НовСтрока.Расшифровка = "ИграМ16#ИграМ17";

	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 36;
	НовСтрока.Расшифровка = "ИграМ18#ИграМ19";

	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 37;
	НовСтрока.Расшифровка = "Игра35#Игра36";//13 и 14 места

	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 38;
	НовСтрока.Расшифровка = "ИграМ35#ИграМ36";

КонецПроцедуры

Процедура ЗаполнениеСоответствийИгр24(СоответствияИгр,РежимТура,Нумерация = Неопределено) Экспорт
	
	Если Нумерация = Неопределено Тогда
		Нумерация = Перечисления.НумерацияВСетке.ПоПорядку	
	КонецЕсли; 
	//для первого этапа 8 игр
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 1;
	НовСтрока.Расшифровка = "Игрок2#Игрок3";

	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 2;
	НовСтрока.Расшифровка = "Игрок4#Игрок5";

	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 3;
	НовСтрока.Расшифровка = "Игрок8#Игрок9";

	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 4;
	НовСтрока.Расшифровка = "Игрок10#Игрок11";

	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 5;
	НовСтрока.Расшифровка = "Игрок14#Игрок15";

	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 6;
	НовСтрока.Расшифровка = "Игрок16#Игрок17";

	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 7;
	НовСтрока.Расшифровка = "Игрок20#Игрок21";

	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 8;
	НовСтрока.Расшифровка = "Игрок22#Игрок23";
	
	Если Нумерация = Перечисления.НумерацияВСетке.ПервыйПоследний Тогда
		НовСтрока = СоответствияИгр.Добавить();
		НовСтрока.Игра = 9;
		НовСтрока.Расшифровка = "Игрок1#Игра1";
		
		НовСтрока = СоответствияИгр.Добавить();
		НовСтрока.Игра = 10;
		НовСтрока.Расшифровка = "Игра2#Игрок8";
		
		НовСтрока = СоответствияИгр.Добавить();
		НовСтрока.Игра = 11;
		НовСтрока.Расшифровка = "Игра3#Игрок5";
		
		НовСтрока = СоответствияИгр.Добавить();
		НовСтрока.Игра = 12;
		НовСтрока.Расшифровка = "Игра4#Игрок4";
		
		НовСтрока = СоответствияИгр.Добавить();
		НовСтрока.Игра = 13;
		НовСтрока.Расшифровка = "Игрок3#Игра5";
		
		НовСтрока = СоответствияИгр.Добавить();
		НовСтрока.Игра = 14;
		НовСтрока.Расшифровка = "Игрок6#Игра6";
		
		НовСтрока = СоответствияИгр.Добавить();
		НовСтрока.Игра = 15;
		НовСтрока.Расшифровка = "Игрок7#Игра7";
		
		НовСтрока = СоответствияИгр.Добавить();
		НовСтрока.Игра = 16;
		НовСтрока.Расшифровка = "Игра8#Игрок2";
	Иначе	//с 9 по 16 
		НовСтрока = СоответствияИгр.Добавить();
		НовСтрока.Игра = 9;
		НовСтрока.Расшифровка = "Игрок1#Игра1";
		
		НовСтрока = СоответствияИгр.Добавить();
		НовСтрока.Игра = 10;
		НовСтрока.Расшифровка = "Игра2#Игрок6";
		
		НовСтрока = СоответствияИгр.Добавить();
		НовСтрока.Игра = 11;
		НовСтрока.Расшифровка = "Игра3#Игрок7";
		
		НовСтрока = СоответствияИгр.Добавить();
		НовСтрока.Игра = 12;
		НовСтрока.Расшифровка = "Игра4#Игрок12";
		
		НовСтрока = СоответствияИгр.Добавить();
		НовСтрока.Игра = 13;
		НовСтрока.Расшифровка = "Игрок13#Игра5";
		
		НовСтрока = СоответствияИгр.Добавить();
		НовСтрока.Игра = 14;
		НовСтрока.Расшифровка = "Игрок18#Игра6";
		
		НовСтрока = СоответствияИгр.Добавить();
		НовСтрока.Игра = 15;
		НовСтрока.Расшифровка = "Игрок19#Игра7";
		
		НовСтрока = СоответствияИгр.Добавить();
		НовСтрока.Игра = 16;
		НовСтрока.Расшифровка = "Игра8#Игрок24";
	КонецЕсли; 
	//ИГРЫ с 17 по 23
	ДобавитьСоответствиеИгр(8,17,23,,СоответствияИгр);
		
	Если РежимТура = Перечисления.РежимыТуровСоревнования.Олимпийка Тогда
		Возврат;
	КонецЕсли;
    //с 24 - 31
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 24;
	НовСтрока.Расшифровка = "ИграМ16#ИграМ1";
	
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 25;
	НовСтрока.Расшифровка = "ИграМ15#ИграМ2";
	
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 26;
	НовСтрока.Расшифровка = "ИграМ14#ИграМ3";
	
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 27;
	НовСтрока.Расшифровка = "ИграМ13#ИграМ4";
	
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 28;
	НовСтрока.Расшифровка = "ИграМ12#ИграМ5";
	
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 29;
	НовСтрока.Расшифровка = "ИграМ11#ИграМ6";
	
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 30;
	НовСтрока.Расшифровка = "ИграМ10#ИграМ7";
	
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 31;
	НовСтрока.Расшифровка = "ИграМ9#ИграМ8";
	//32-35
	ДобавитьСоответствиеИгр(23,32,35,,СоответствияИгр);
	//36-39
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 36;
	НовСтрока.Расшифровка = "ИграМ18#Игра32";
	
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 37;
	НовСтрока.Расшифровка = "ИграМ17#Игра33";
	
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 38;
	НовСтрока.Расшифровка = "ИграМ20#Игра34";
	
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 39;
	НовСтрока.Расшифровка = "ИграМ19#Игра35";
	
	ДобавитьСоответствиеИгр(35,40,41,,СоответствияИгр);

	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 42;
	НовСтрока.Расшифровка = "ИграМ22#Игра40";
	
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 43;
	НовСтрока.Расшифровка = "ИграМ21#Игра41";
	
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 44;
	НовСтрока.Расшифровка = "Игра42#Игра43";
	
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 45;
	НовСтрока.Расшифровка = "ИграМ42#ИграМ43";
	
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 46;
	НовСтрока.Расшифровка = "ИграМ40#ИграМ41";
	
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 47;
	НовСтрока.Расшифровка = "ИграМ36#ИграМ37";
	
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 48;
	НовСтрока.Расшифровка = "ИграМ38#ИграМ39";
	
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 49;
	НовСтрока.Расшифровка = "Игра47#Игра48"; //9-10 место

	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 50;
	НовСтрока.Расшифровка = "ИграМ47#ИграМ48";
	
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 51;
	НовСтрока.Расшифровка = "ИграМ32#ИграМ33";
	
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 52;
	НовСтрока.Расшифровка = "ИграМ34#ИграМ35";
	
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 53;
	НовСтрока.Расшифровка = "Игра51#Игра52";
	
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 54;
	НовСтрока.Расшифровка = "ИграМ51#ИграМ52";
	
	ДобавитьСоответствиеИгр(23,55,58,"М",СоответствияИгр);	

	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 59;
	НовСтрока.Расшифровка = "Игра55#Игра56";
	
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 60;
	НовСтрока.Расшифровка = "Игра57#Игра58";
	
    НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 61;
	НовСтрока.Расшифровка = "Игра59#Игра60"; //17-18
	
   	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 62;
	НовСтрока.Расшифровка = "ИграМ59#ИграМ60";
	
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 63;
	НовСтрока.Расшифровка = "ИграМ55#ИграМ56";
	
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 64;
	НовСтрока.Расшифровка = "ИграМ57#ИграМ58";
	
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 65;
	НовСтрока.Расшифровка = "Игра63#Игра64";
	
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 66;
	НовСтрока.Расшифровка = "ИграМ63#ИграМ64";
	


КонецПроцедуры

Процедура ЗаполнениеСоответствийИгр32(СоответствияИгр,РежимТура) Экспорт
	
	//для первых 16 игроков заполнение  сделаем циклом
	Сч = 0;
	//ИГРОК с 1 по 32 
	Для Н = 1 По 16 Цикл
		НовСтрока = СоответствияИгр.Добавить();
		НовСтрока.Игра = Н;
		Сч = Сч + 1;
		ПерваяЧасть = "Игрок"+Сч;
		Сч = Сч + 1;
		ВтораяЧасть = "Игрок"+Сч;
		НовСтрока.Расшифровка = ПерваяЧасть+"#"+ВтораяЧасть;
	КонецЦикла;
	//ИГРЫ с 17 по 31
	ДобавитьСоответствиеИгр(0,17,31,,СоответствияИгр);
	
	Если РежимТура = Перечисления.РежимыТуровСоревнования.Олимпийка Тогда
		Возврат;
	КонецЕсли;

	//32-39
	ДобавитьСоответствиеИгр(0,32,39,"М",СоответствияИгр);
	//40-47
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 40;
	НовСтрока.Расшифровка = "Игра32#ИграМ24";

	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 41;
	НовСтрока.Расшифровка = "Игра33#ИграМ23";

	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 42;
	НовСтрока.Расшифровка = "Игра34#ИграМ22";

	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 43;
	НовСтрока.Расшифровка = "Игра35#ИграМ21";

	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 44;
	НовСтрока.Расшифровка = "Игра36#ИграМ20";

	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 45;
	НовСтрока.Расшифровка = "Игра37#ИграМ19";

	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 46;
	НовСтрока.Расшифровка = "Игра38#ИграМ18";

	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 47;
	НовСтрока.Расшифровка = "Игра39#ИграМ17";
	//48-51
	ДобавитьСоответствиеИгр(39,48,51,,СоответствияИгр);
	//52-55
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 52;
	НовСтрока.Расшифровка = "ИграМ26#Игра48";

	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 53;
	НовСтрока.Расшифровка = "ИграМ25#Игра49";

	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 54;
	НовСтрока.Расшифровка = "ИграМ28#Игра50";

	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 55;
	НовСтрока.Расшифровка = "ИграМ27#Игра51";
	//56-57
	ДобавитьСоответствиеИгр(51,56,57,,СоответствияИгр);
    //58-59
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 58;
	НовСтрока.Расшифровка = "Игра56#ИграМ30";
	
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 59;
	НовСтрока.Расшифровка = "Игра57#ИграМ29";
	
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 60;
	НовСтрока.Расшифровка = "Игра58#Игра59"; //3-4 место
	
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 61;
	НовСтрока.Расшифровка = "ИграМ58#ИграМ59"; //5-6 место
	
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 62;
	НовСтрока.Расшифровка = "ИграМ56#ИграМ57";//7-8 место
	
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 63;
	НовСтрока.Расшифровка = "ИграМ52#ИграМ53";
	
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 64;
	НовСтрока.Расшифровка = "ИграМ54#ИграМ55";
	
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 65;
	НовСтрока.Расшифровка = "Игра63#Игра64"; //9-10 место
	
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 66;
	НовСтрока.Расшифровка = "ИграМ63#ИграМ64";//11-12
	//67-68
	ДобавитьСоответствиеИгр(47,67,68,"М",СоответствияИгр);
	
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 69;
	НовСтрока.Расшифровка = "Игра67#Игра68";//13-14
	
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 70;
	НовСтрока.Расшифровка = "ИграМ67#ИграМ68";//15-16
	//71-74
	ДобавитьСоответствиеИгр(39,71,74,"М",СоответствияИгр);
	//75-77
	ДобавитьСоответствиеИгр(70,75,77,,СоответствияИгр);
	//
	//НовСтрока = СоответствияИгр.Добавить();
	//НовСтрока.Игра = 77;
	//НовСтрока.Расшифровка = "Игра75#Игра76";//17-18
	
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 78;
	НовСтрока.Расшифровка = "ИграМ75#ИграМ76";//19-20
	//79-80
	ДобавитьСоответствиеИгр(70,79,80,"М",СоответствияИгр);
	
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 81;
	НовСтрока.Расшифровка = "Игра79#Игра80";//21-22
	
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 82;
	НовСтрока.Расшифровка = "ИграМ79#ИграМ80";//23-24
	//83-86
	ДобавитьСоответствиеИгр(31,83,86,"М",СоответствияИгр);
	//87-89
	ДобавитьСоответствиеИгр(82,87,89,,СоответствияИгр);
	
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 90;
	НовСтрока.Расшифровка = "ИграМ87#ИграМ88";//27-28
	//91-92
	ДобавитьСоответствиеИгр(82,91,92,"М",СоответствияИгр);
	
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 93;
	НовСтрока.Расшифровка = "Игра91#Игра92";//29-30
	
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 94;
	НовСтрока.Расшифровка = "ИграМ91#ИграМ92";//31-32
		
КонецПроцедуры

Процедура ЗаполнениеСоответствийИгр32ПрямойСнос(СоответствияИгр,РежимТура) Экспорт
	
	//для первых 16 игроков заполнение  сделаем циклом
	Сч = 0;
	//ИГРОК с 1 по 32 
	Для Н = 1 По 16 Цикл
		НовСтрока = СоответствияИгр.Добавить();
		НовСтрока.Игра = Н;
		Сч = Сч + 1;
		ПерваяЧасть = "Игрок"+Сч;
		Сч = Сч + 1;
		ВтораяЧасть = "Игрок"+Сч;
		НовСтрока.Расшифровка = ПерваяЧасть+"#"+ВтораяЧасть;
	КонецЦикла;
	//ИГРЫ с 17 по 31
	ДобавитьСоответствиеИгр(0,17,31,,СоответствияИгр);
	
	Если РежимТура = Перечисления.РежимыТуровСоревнования.Олимпийка Тогда
		Возврат;
	КонецЕсли;

	//32-39
	ДобавитьСоответствиеИгр(0,32,39,"М",СоответствияИгр);
	//40-47
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 40;
	НовСтрока.Расшифровка = "Игра32#ИграМ24";

	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 41;
	НовСтрока.Расшифровка = "Игра33#ИграМ23";

	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 42;
	НовСтрока.Расшифровка = "Игра34#ИграМ22";

	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 43;
	НовСтрока.Расшифровка = "Игра35#ИграМ21";

	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 44;
	НовСтрока.Расшифровка = "Игра36#ИграМ20";

	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 45;
	НовСтрока.Расшифровка = "Игра37#ИграМ19";

	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 46;
	НовСтрока.Расшифровка = "Игра38#ИграМ18";

	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 47;
	НовСтрока.Расшифровка = "Игра39#ИграМ17";
	//48-51
	ДобавитьСоответствиеИгр(39,48,51,,СоответствияИгр);
	//52-55
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 52;
	НовСтрока.Расшифровка = "ИграМ25#Игра48";

	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 53;
	НовСтрока.Расшифровка = "ИграМ26#Игра49";

	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 54;
	НовСтрока.Расшифровка = "ИграМ27#Игра50";

	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 55;
	НовСтрока.Расшифровка = "ИграМ28#Игра51";
	//56-57
	ДобавитьСоответствиеИгр(51,56,57,,СоответствияИгр);
    //58-59
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 58;
	НовСтрока.Расшифровка = "Игра56#ИграМ30";
	
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 59;
	НовСтрока.Расшифровка = "Игра57#ИграМ29";
	
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 60;
	НовСтрока.Расшифровка = "Игра58#Игра59"; //3-4 место
	
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 61;
	НовСтрока.Расшифровка = "ИграМ58#ИграМ59"; //5-6 место
	
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 62;
	НовСтрока.Расшифровка = "ИграМ56#ИграМ57";//7-8 место
	
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 63;
	НовСтрока.Расшифровка = "ИграМ52#ИграМ53";
	
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 64;
	НовСтрока.Расшифровка = "ИграМ54#ИграМ55";
	
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 65;
	НовСтрока.Расшифровка = "Игра63#Игра64"; //9-10 место
	
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 66;
	НовСтрока.Расшифровка = "ИграМ63#ИграМ64";//11-12
	//67-68
	ДобавитьСоответствиеИгр(47,67,68,"М",СоответствияИгр);
	
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 69;
	НовСтрока.Расшифровка = "Игра67#Игра68";//13-14
	
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 70;
	НовСтрока.Расшифровка = "ИграМ67#ИграМ68";//15-16
	//71-74
	ДобавитьСоответствиеИгр(39,71,74,"М",СоответствияИгр);
	//75-77
	ДобавитьСоответствиеИгр(70,75,77,,СоответствияИгр);
	//
	//НовСтрока = СоответствияИгр.Добавить();
	//НовСтрока.Игра = 77;
	//НовСтрока.Расшифровка = "Игра75#Игра76";//17-18
	
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 78;
	НовСтрока.Расшифровка = "ИграМ75#ИграМ76";//19-20
	//79-80
	ДобавитьСоответствиеИгр(70,79,80,"М",СоответствияИгр);
	
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 81;
	НовСтрока.Расшифровка = "Игра79#Игра80";//21-22
	
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 82;
	НовСтрока.Расшифровка = "ИграМ79#ИграМ80";//23-24
	//83-86
	ДобавитьСоответствиеИгр(31,83,86,"М",СоответствияИгр);
	//87-89
	ДобавитьСоответствиеИгр(82,87,89,,СоответствияИгр);
	
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 90;
	НовСтрока.Расшифровка = "ИграМ87#ИграМ88";//27-28
	//91-92
	ДобавитьСоответствиеИгр(82,91,92,"М",СоответствияИгр);
	
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 93;
	НовСтрока.Расшифровка = "Игра91#Игра92";//29-30
	
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 94;
	НовСтрока.Расшифровка = "ИграМ91#ИграМ92";//31-32
		
КонецПроцедуры

Процедура ЗаполнениеСоответствийИгр48(СоответствияИгр,РежимТура,Нумерация = Неопределено) Экспорт
	
	Если Нумерация = Неопределено Тогда
		Нумерация = Перечисления.НумерацияВСетке.ПоПорядку	
	КонецЕсли; 
	//для первого этапа 8 игр
	ДобавитьИгруВСоответствие(1,"Игрок2#Игрок3",СоответствияИгр);
	ДобавитьИгруВСоответствие(2,"Игрок4#Игрок5",СоответствияИгр);
	ДобавитьИгруВСоответствие(3,"Игрок8#Игрок9",СоответствияИгр);
	ДобавитьИгруВСоответствие(4,"Игрок10#Игрок11",СоответствияИгр);
	ДобавитьИгруВСоответствие(5,"Игрок14#Игрок15",СоответствияИгр);
	ДобавитьИгруВСоответствие(6,"Игрок16#Игрок17",СоответствияИгр);
	ДобавитьИгруВСоответствие(7,"Игрок20#Игрок21",СоответствияИгр);
	ДобавитьИгруВСоответствие(8,"Игрок22#Игрок23",СоответствияИгр);
	ДобавитьИгруВСоответствие(9,"Игрок26#Игрок27",СоответствияИгр);
	ДобавитьИгруВСоответствие(10,"Игрок28#Игрок29",СоответствияИгр);
	ДобавитьИгруВСоответствие(11,"Игрок32#Игрок33",СоответствияИгр);
	ДобавитьИгруВСоответствие(12,"Игрок34#Игрок35",СоответствияИгр);
	ДобавитьИгруВСоответствие(13,"Игрок38#Игрок39",СоответствияИгр);
	ДобавитьИгруВСоответствие(14,"Игрок40#Игрок41",СоответствияИгр);
	ДобавитьИгруВСоответствие(15,"Игрок44#Игрок45",СоответствияИгр);
	ДобавитьИгруВСоответствие(16,"Игрок46#Игрок47",СоответствияИгр);
	
	//Если Нумерация = Перечисления.НумерацияВСетке.ПервыйПоследний Тогда
		//НовСтрока = СоответствияИгр.Добавить();
		//НовСтрока.Игра = 9;
		//НовСтрока.Расшифровка = "Игрок1#Игра1";
		//
		//НовСтрока = СоответствияИгр.Добавить();
		//НовСтрока.Игра = 10;
		//НовСтрока.Расшифровка = "Игра2#Игрок8";
		//
		//НовСтрока = СоответствияИгр.Добавить();
		//НовСтрока.Игра = 11;
		//НовСтрока.Расшифровка = "Игра3#Игрок5";
		//
		//НовСтрока = СоответствияИгр.Добавить();
		//НовСтрока.Игра = 12;
		//НовСтрока.Расшифровка = "Игра4#Игрок4";
		//
		//НовСтрока = СоответствияИгр.Добавить();
		//НовСтрока.Игра = 13;
		//НовСтрока.Расшифровка = "Игрок3#Игра5";
		//
		//НовСтрока = СоответствияИгр.Добавить();
		//НовСтрока.Игра = 14;
		//НовСтрока.Расшифровка = "Игрок6#Игра6";
		//
		//НовСтрока = СоответствияИгр.Добавить();
		//НовСтрока.Игра = 15;
		//НовСтрока.Расшифровка = "Игрок7#Игра7";
		//
		//НовСтрока = СоответствияИгр.Добавить();
		//НовСтрока.Игра = 16;
		//НовСтрока.Расшифровка = "Игра8#Игрок2";
	//Иначе	//с 9 по 16 
	ДобавитьИгруВСоответствие(17,"Игрок1#Игра1",СоответствияИгр);
	ДобавитьИгруВСоответствие(18,"Игра2#Игрок6",СоответствияИгр);
	ДобавитьИгруВСоответствие(19,"Игра3#Игрок7",СоответствияИгр);
	ДобавитьИгруВСоответствие(20,"Игра4#Игрок12",СоответствияИгр);
	ДобавитьИгруВСоответствие(21,"Игрок13#Игра5",СоответствияИгр);
	ДобавитьИгруВСоответствие(22,"Игрок18#Игра6",СоответствияИгр);
	ДобавитьИгруВСоответствие(23,"Игрок19#Игра7",СоответствияИгр);
	ДобавитьИгруВСоответствие(24,"Игра8#Игрок24",СоответствияИгр);
	
	ДобавитьИгруВСоответствие(25,"Игра9#Игрок25",СоответствияИгр);
	ДобавитьИгруВСоответствие(26,"Игра10#Игрок30",СоответствияИгр);
	ДобавитьИгруВСоответствие(27,"Игра11#Игрок31",СоответствияИгр);
	ДобавитьИгруВСоответствие(28,"Игра12#Игрок36",СоответствияИгр);
	ДобавитьИгруВСоответствие(29,"Игра13#Игрок37",СоответствияИгр);
	ДобавитьИгруВСоответствие(30,"Игра14#Игрок42",СоответствияИгр);
	ДобавитьИгруВСоответствие(31,"Игра15#Игрок43",СоответствияИгр);
	ДобавитьИгруВСоответствие(32,"Игра16#Игрок48",СоответствияИгр);
			
	//КонецЕсли; 
	//ИГРЫ с 33 по 47
	ДобавитьСоответствиеИгр(16,33,47,,СоответствияИгр);
		
	Если РежимТура = Перечисления.РежимыТуровСоревнования.Олимпийка Тогда
		Возврат;
	КонецЕсли;
	
	ДобавитьИгруВСоответствие(48,"ИграМ32#ИграМ1",СоответствияИгр);
	ДобавитьИгруВСоответствие(49,"ИграМ31#ИграМ2",СоответствияИгр);
	ДобавитьИгруВСоответствие(50,"ИграМ30#ИграМ3",СоответствияИгр);
	ДобавитьИгруВСоответствие(51,"ИграМ29#ИграМ4",СоответствияИгр);
	ДобавитьИгруВСоответствие(52,"ИграМ28#ИграМ5",СоответствияИгр);
	ДобавитьИгруВСоответствие(53,"ИграМ27#ИграМ6",СоответствияИгр);
	ДобавитьИгруВСоответствие(54,"ИграМ26#ИграМ7",СоответствияИгр);
	ДобавитьИгруВСоответствие(55,"ИграМ25#ИграМ8",СоответствияИгр);
	ДобавитьИгруВСоответствие(56,"ИграМ24#ИграМ9",СоответствияИгр);
	ДобавитьИгруВСоответствие(57,"ИграМ23#ИграМ10",СоответствияИгр);
	ДобавитьИгруВСоответствие(58,"ИграМ22#ИграМ11",СоответствияИгр);
	ДобавитьИгруВСоответствие(59,"ИграМ21#ИграМ12",СоответствияИгр);
	ДобавитьИгруВСоответствие(60,"ИграМ20#ИграМ13",СоответствияИгр);
	ДобавитьИгруВСоответствие(61,"ИграМ19#ИграМ14",СоответствияИгр);
	ДобавитьИгруВСоответствие(62,"ИграМ18#ИграМ15",СоответствияИгр);
	ДобавитьИгруВСоответствие(63,"ИграМ17#ИграМ16",СоответствияИгр);
	
	//64-71
	ДобавитьСоответствиеИгр(47,64,71,,СоответствияИгр);
	
	ДобавитьИгруВСоответствие(72,"ИграМ36#Игра64",СоответствияИгр);
	ДобавитьИгруВСоответствие(73,"ИграМ35#Игра65",СоответствияИгр);
	ДобавитьИгруВСоответствие(74,"ИграМ34#Игра66",СоответствияИгр);
	ДобавитьИгруВСоответствие(75,"ИграМ33#Игра67",СоответствияИгр);
	ДобавитьИгруВСоответствие(76,"ИграМ40#Игра68",СоответствияИгр);
	ДобавитьИгруВСоответствие(77,"ИграМ39#Игра69",СоответствияИгр);
	ДобавитьИгруВСоответствие(78,"ИграМ38#Игра70",СоответствияИгр);
	ДобавитьИгруВСоответствие(79,"ИграМ37#Игра71",СоответствияИгр);
	
	//80-83
	ДобавитьСоответствиеИгр(71,80,83,,СоответствияИгр);
	
	ДобавитьИгруВСоответствие(84,"ИграМ43#Игра80",СоответствияИгр);
	ДобавитьИгруВСоответствие(85,"ИграМ44#Игра81",СоответствияИгр);
	ДобавитьИгруВСоответствие(86,"ИграМ41#Игра82",СоответствияИгр);
	ДобавитьИгруВСоответствие(87,"ИграМ42#Игра83",СоответствияИгр);
	ДобавитьИгруВСоответствие(88,"Игра84#Игра85",СоответствияИгр);
	ДобавитьИгруВСоответствие(89,"Игра86#Игра87",СоответствияИгр);
	ДобавитьИгруВСоответствие(90,"Игра88#ИграМ45",СоответствияИгр);
	ДобавитьИгруВСоответствие(91,"Игра89#ИграМ46",СоответствияИгр);
	ДобавитьИгруВСоответствие(92,"Игра90#Игра91",СоответствияИгр);
	
	ДобавитьИгруВСоответствие(93,"ИграМ90#ИграМ91",СоответствияИгр);
	ДобавитьИгруВСоответствие(94,"ИграМ88#ИграМ89",СоответствияИгр);
	
	ДобавитьИгруВСоответствие(95,"ИграМ84#ИграМ85",СоответствияИгр);
	ДобавитьИгруВСоответствие(96,"ИграМ86#ИграМ87",СоответствияИгр);
	ДобавитьИгруВСоответствие(97,"Игра95#Игра96",СоответствияИгр);
	
	ДобавитьИгруВСоответствие(98,"ИграМ95#ИграМ96",СоответствияИгр);
	
	ДобавитьИгруВСоответствие(99,"ИграМ80#ИграМ81",СоответствияИгр);
	ДобавитьИгруВСоответствие(100,"ИграМ82#ИграМ83",СоответствияИгр);
	ДобавитьИгруВСоответствие(101,"Игра99#Игра100",СоответствияИгр);
	
	ДобавитьИгруВСоответствие(102,"ИграМ99#ИграМ100",СоответствияИгр);
	//103-106
	ДобавитьСоответствиеИгр(71,103,106,"М",СоответствияИгр);
	
	ДобавитьИгруВСоответствие(107,"Игра103#Игра104",СоответствияИгр);
	ДобавитьИгруВСоответствие(108,"Игра105#Игра106",СоответствияИгр);
	ДобавитьИгруВСоответствие(109,"Игра107#Игра108",СоответствияИгр);
	ДобавитьИгруВСоответствие(110,"ИграМ107#ИграМ108",СоответствияИгр);
	
	ДобавитьИгруВСоответствие(111,"ИграМ103#ИграМ104",СоответствияИгр);
	ДобавитьИгруВСоответствие(112,"ИграМ105#ИграМ106",СоответствияИгр);
	ДобавитьИгруВСоответствие(113,"Игра111#Игра112",СоответствияИгр);
	ДобавитьИгруВСоответствие(114,"ИграМ111#ИграМ112",СоответствияИгр);
	//115-118
	ДобавитьСоответствиеИгр(63,115,118,"М",СоответствияИгр);
	
	ДобавитьИгруВСоответствие(119,"Игра115#Игра116",СоответствияИгр);
	ДобавитьИгруВСоответствие(120,"Игра117#Игра118",СоответствияИгр);
	ДобавитьИгруВСоответствие(121,"Игра119#Игра120",СоответствияИгр);
	
	ДобавитьИгруВСоответствие(122,"ИграМ119#ИграМ120",СоответствияИгр);
	
	ДобавитьИгруВСоответствие(123,"ИграМ115#ИграМ116",СоответствияИгр);
	ДобавитьИгруВСоответствие(124,"ИграМ117#ИграМ118",СоответствияИгр);
	ДобавитьИгруВСоответствие(125,"Игра123#Игра124",СоответствияИгр);
	
	ДобавитьИгруВСоответствие(126,"ИграМ123#ИграМ124",СоответствияИгр);
	//127-134
	ДобавитьСоответствиеИгр(47,127,134,"М",СоответствияИгр);
	//135-141
	ДобавитьСоответствиеИгр(126,135,141,,СоответствияИгр);
	
	ДобавитьИгруВСоответствие(142,"ИграМ139#ИграМ140",СоответствияИгр);
	
	ДобавитьИгруВСоответствие(143,"ИграМ135#ИграМ136",СоответствияИгр);
	ДобавитьИгруВСоответствие(144,"ИграМ137#ИграМ138",СоответствияИгр);
	ДобавитьИгруВСоответствие(145,"Игра143#Игра144",СоответствияИгр);
	ДобавитьИгруВСоответствие(146,"ИграМ143#ИграМ144",СоответствияИгр);
	//147-150
	ДобавитьСоответствиеИгр(126,147,150,"М",СоответствияИгр);
	ДобавитьИгруВСоответствие(151,"Игра147#Игра148",СоответствияИгр);
	ДобавитьИгруВСоответствие(152,"Игра149#Игра150",СоответствияИгр);
	ДобавитьИгруВСоответствие(153,"Игра151#Игра152",СоответствияИгр);
	ДобавитьИгруВСоответствие(154,"ИграМ151#ИграМ152",СоответствияИгр);
	
	ДобавитьИгруВСоответствие(155,"ИграМ147#ИграМ148",СоответствияИгр);
	ДобавитьИгруВСоответствие(156,"ИграМ149#ИграМ150",СоответствияИгр);
	ДобавитьИгруВСоответствие(157,"Игра155#Игра156",СоответствияИгр);
	ДобавитьИгруВСоответствие(158,"ИграМ155#ИграМ156",СоответствияИгр);
	
КонецПроцедуры

Процедура ЗаполнениеСоответствийИгр64(СоответствияИгр,РежимТура) Экспорт
	
	//для первых 32 игроков заполнение  сделаем циклом
	Сч = 0;
	//ИГРОК с 1 по 32 
	Для Н = 1 По 32 Цикл
		НовСтрока = СоответствияИгр.Добавить();
		НовСтрока.Игра = Н;
		Сч = Сч + 1;
		ПерваяЧасть = "Игрок"+Сч;
		Сч = Сч + 1;
		ВтораяЧасть = "Игрок"+Сч;
		НовСтрока.Расшифровка = ПерваяЧасть+"#"+ВтораяЧасть;
	КонецЦикла;
	//ИГРЫ с 17 по 31
	ДобавитьСоответствиеИгр(0,33,63,,СоответствияИгр);
	Если РежимТура = Перечисления.РежимыТуровСоревнования.Олимпийка Тогда
		Возврат;
	КонецЕсли;
	//с 64 - 79
	ДобавитьСоответствиеИгр(0,64,79,"М",СоответствияИгр);
	//80-95 простым способом
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 80;
	НовСтрока.Расшифровка = "Игра64#ИграМ48";
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 81;
	НовСтрока.Расшифровка = "Игра65#ИграМ47";
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 82;
	НовСтрока.Расшифровка = "Игра66#ИграМ46";
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 83;
	НовСтрока.Расшифровка = "Игра67#ИграМ45";
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 84;
	НовСтрока.Расшифровка = "Игра68#ИграМ44";
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 85;
	НовСтрока.Расшифровка = "Игра69#ИграМ43";
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 86;
	НовСтрока.Расшифровка = "Игра70#ИграМ42";
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 87;
	НовСтрока.Расшифровка = "Игра71#ИграМ41";
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 88;
	НовСтрока.Расшифровка = "Игра72#ИграМ40";
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 89;
	НовСтрока.Расшифровка = "Игра73#ИграМ39";
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 90;
	НовСтрока.Расшифровка = "Игра74#ИграМ38";
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 91;
	НовСтрока.Расшифровка = "Игра75#ИграМ37";
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 92;
	НовСтрока.Расшифровка = "Игра76#ИграМ36";
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 93;
	НовСтрока.Расшифровка = "Игра77#ИграМ35";
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 94;
	НовСтрока.Расшифровка = "Игра78#ИграМ34";
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 95;
	НовСтрока.Расшифровка = "Игра79#ИграМ33";
	//с 96 - 103
	ДобавитьСоответствиеИгр(79,96,103,,СоответствияИгр);
	//104-111
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 104;
	НовСтрока.Расшифровка = "ИграМ49#Игра96";
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 105;
	НовСтрока.Расшифровка = "ИграМ50#Игра97";
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 106;
	НовСтрока.Расшифровка = "ИграМ51#Игра98";
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 107;
	НовСтрока.Расшифровка = "ИграМ52#Игра99";
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 108;
	НовСтрока.Расшифровка = "ИграМ53#Игра100";
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 109;
	НовСтрока.Расшифровка = "ИграМ54#Игра101";
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 110;
	НовСтрока.Расшифровка = "ИграМ55#Игра102";
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 111;
	НовСтрока.Расшифровка = "ИграМ56#Игра103";
	//с 112 - 115
	ДобавитьСоответствиеИгр(103,112,115,,СоответствияИгр);
	//116-119
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 116;
	НовСтрока.Расшифровка = "Игра112#ИграМ60";
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 117;
	НовСтрока.Расшифровка = "Игра113#ИграМ59";
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 118;
	НовСтрока.Расшифровка = "Игра114#ИграМ58";
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 119;
	НовСтрока.Расшифровка = "Игра115#ИграМ57";
	//120-121
	ДобавитьСоответствиеИгр(115,120,121,,СоответствияИгр);
	
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 122;
	НовСтрока.Расшифровка = "ИграМ61#Игра120";
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 123;
	НовСтрока.Расшифровка = "ИграМ62#Игра121";
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 124;
	НовСтрока.Расшифровка = "Игра122#Игра123";
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 125;
	НовСтрока.Расшифровка = "ИграМ122#ИграМ123";
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 126;
	НовСтрока.Расшифровка = "ИграМ120#ИграМ121";
	//127-128
	ДобавитьСоответствиеИгр(115,127,128,"М",СоответствияИгр);
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 129;
	НовСтрока.Расшифровка = "Игра127#Игра128";
	
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 130;
	НовСтрока.Расшифровка = "ИграМ127#ИграМ128";
	ДобавитьСоответствиеИгр(111,131,132,"М",СоответствияИгр);
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 133;
	НовСтрока.Расшифровка = "Игра131#Игра132";
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 134;
	НовСтрока.Расшифровка = "ИграМ131#ИграМ132";
	//135-138
	ДобавитьСоответствиеИгр(103,135,138,"М",СоответствияИгр);
	//139-140
	ДобавитьСоответствиеИгр(134,139,140,,СоответствияИгр);
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 141;
	НовСтрока.Расшифровка = "Игра139#Игра140";
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 142;
	НовСтрока.Расшифровка = "ИграМ139#ИграМ140";
	ДобавитьСоответствиеИгр(134,143,144,"М",СоответствияИгр);
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 145;
	НовСтрока.Расшифровка = "Игра143#Игра144";
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 146;
	НовСтрока.Расшифровка = "ИграМ143#ИграМ144";
	//147-150
	ДобавитьСоответствиеИгр(95,147,150,"М",СоответствияИгр);
	ДобавитьСоответствиеИгр(146,151,153,,СоответствияИгр);
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 154;
	НовСтрока.Расшифровка = "ИграМ151#ИграМ152";
	
	ДобавитьСоответствиеИгр(146,155,156,"М",СоответствияИгр);
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 157;
	НовСтрока.Расшифровка = "Игра155#Игра156";
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 158;
	НовСтрока.Расшифровка = "ИграМ155#ИграМ156";
	//159-166
	ДобавитьСоответствиеИгр(79,159,166,"М",СоответствияИгр);
	//167-173
	ДобавитьСоответствиеИгр(158,167,173,,СоответствияИгр);
	
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 174;
	НовСтрока.Расшифровка = "ИграМ171#ИграМ172";
	ДобавитьСоответствиеИгр(166,175,176,"М",СоответствияИгр);
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 177;
	НовСтрока.Расшифровка = "Игра175#Игра176";
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 178;
	НовСтрока.Расшифровка = "ИграМ175#ИграМ176";
	//179-182
	ДобавитьСоответствиеИгр(158,179,182,"М",СоответствияИгр);
	ДобавитьСоответствиеИгр(178,183,185,,СоответствияИгр);
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 186;
	НовСтрока.Расшифровка = "ИграМ183#ИграМ184";
	
	ДобавитьСоответствиеИгр(178,187,188,"М",СоответствияИгр);
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 189;
	НовСтрока.Расшифровка = "Игра187#Игра188";
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 190;
	НовСтрока.Расшифровка = "ИграМ187#ИграМ188";
	//191-198
	ДобавитьСоответствиеИгр(63,191,198,"М",СоответствияИгр);
	//199-205
	ДобавитьСоответствиеИгр(190,199,205,,СоответствияИгр);
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 206;
	НовСтрока.Расшифровка = "ИграМ203#ИграМ204";
	
	ДобавитьСоответствиеИгр(198,207,208,"М",СоответствияИгр);
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 209;
	НовСтрока.Расшифровка = "Игра207#Игра208";
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 210;
	НовСтрока.Расшифровка = "ИграМ207#ИграМ208";
	//211-214
	ДобавитьСоответствиеИгр(190,211,214,"М",СоответствияИгр);
	//215-217
	ДобавитьСоответствиеИгр(210,215,217,,СоответствияИгр);
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 218;
	НовСтрока.Расшифровка = "ИграМ215#ИграМ216";
	ДобавитьСоответствиеИгр(210,219,220,"М",СоответствияИгр);
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 221;
	НовСтрока.Расшифровка = "Игра219#Игра220";
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 222;
	НовСтрока.Расшифровка = "ИграМ219#ИграМ220";
	
КонецПроцедуры

Процедура ДобавитьСоответствиеИгр(парСч,Сномера,ПоНомер,МинусИгра = "",СоответствияИгр)
	
	Сч = парСч;
	Для Н = Сномера По ПоНомер Цикл
		НовСтрока = СоответствияИгр.Добавить();
		НовСтрока.Игра = Н;
		Сч = Сч + 1;
		ПерваяЧасть = "Игра"+МинусИгра+""+Сч;
		Сч = Сч + 1;                  
		ВтораяЧасть = "Игра"+МинусИгра+""+Сч;
		НовСтрока.Расшифровка = ПерваяЧасть+"#"+ВтораяЧасть;
	КонецЦикла;
	
КонецПроцедуры

Процедура ДобавитьИгруВСоответствие(мНомерИгры,мРасшифровка,СоответствияИгр)
	
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = мНомерИгры;
	НовСтрока.Расшифровка = мРасшифровка;
	
КонецПроцедуры
 
//для прогрессивки
Процедура ЗаполнениеСоответствийИгр8ПрогрессивнаяСетка(СоответствияИгр,РежимТура) Экспорт
	
	//для первого этапа 8 игр
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 1;
	НовСтрока.Расшифровка = "Игрок1#Игрок2";

	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 2;
	НовСтрока.Расшифровка = "Игрок3#Игрок4";

	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 3;
	НовСтрока.Расшифровка = "Игрок5#Игрок6";

	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 4;
	НовСтрока.Расшифровка = "Игрок7#Игрок8";

	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 5;
	НовСтрока.Расшифровка = "Игра1#Игра2";

	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 6;
	НовСтрока.Расшифровка = "Игра3#Игра4";
	
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 7;
	НовСтрока.Расшифровка = "Игра5#Игра6";//финальная

	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 8;
	НовСтрока.Расшифровка = "ИграМ1#ИграМ2";
	
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 9;
	НовСтрока.Расшифровка = "ИграМ3#ИграМ4";

	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 10;
	НовСтрока.Расшифровка = "Игра8#Игра9";
	
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 11;
	НовСтрока.Расшифровка = "ИграМ5#ИграМ6";

	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 12;
	НовСтрока.Расшифровка = "ИграМ8#ИграМ9";

КонецПроцедуры

Процедура ЗаполнениеСоответствийИгр16ПрогрессивнаяСетка(СоответствияИгр,РежимТура) Экспорт
	
	//для первого этапа 8 игр
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 1;
	НовСтрока.Расшифровка = "Игрок1#Игрок2";

	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 2;
	НовСтрока.Расшифровка = "Игрок3#Игрок4";

	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 3;
	НовСтрока.Расшифровка = "Игрок5#Игрок6";

	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 4;
	НовСтрока.Расшифровка = "Игрок7#Игрок8";

	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 5;
	НовСтрока.Расшифровка = "Игрок9#Игрок10";

	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 6;
	НовСтрока.Расшифровка = "Игрок11#Игрок12";

	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 7;
	НовСтрока.Расшифровка = "Игрок13#Игрок14";

	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 8;
	НовСтрока.Расшифровка = "Игрок15#Игрок16";
	
	ДобавитьСоответствиеИгр(0,9,15,,СоответствияИгр);
	
	Если РежимТура = Перечисления.РежимыТуровСоревнования.Олимпийка Тогда
		Возврат;
	КонецЕсли;

	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 16;
	НовСтрока.Расшифровка = "ИграМ1#ИграМ2";

	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 17;
	НовСтрока.Расшифровка = "ИграМ3#ИграМ4";

	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 18;
	НовСтрока.Расшифровка = "ИграМ5#ИграМ6";

	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 19;
	НовСтрока.Расшифровка = "ИграМ7#ИграМ8";

	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 20;
	НовСтрока.Расшифровка = "ИграМ9#ИграМ10";

	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 21;
	НовСтрока.Расшифровка = "ИграМ11#ИграМ12";

	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 22;
	НовСтрока.Расшифровка = "Игра16#Игра17";

	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 23;
	НовСтрока.Расшифровка = "Игра18#Игра19";

	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 24;
	НовСтрока.Расшифровка = "ИграМ16#ИграМ17";

	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 25;
	НовСтрока.Расшифровка = "ИграМ18#ИграМ19";

	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 26;
	НовСтрока.Расшифровка = "ИграМ13#ИграМ14"; //3 и 4 

	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 27;
	НовСтрока.Расшифровка = "Игра20#Игра21";//5 и 6 

	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 28;
	НовСтрока.Расшифровка = "ИграМ20#ИграМ21";

	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 29;
	НовСтрока.Расшифровка = "Игра22#Игра23";

	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 30;
	НовСтрока.Расшифровка = "ИграМ22#ИграМ23";

	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 31;
	НовСтрока.Расшифровка = "Игра24#Игра25";

	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 32;
	НовСтрока.Расшифровка = "ИграМ24#ИграМ25";

КонецПроцедуры

Процедура ЗаполнениеСоответствийИгр24ПрогрессивнаяСетка(СоответствияИгр,РежимТура) Экспорт
	
	//для первого этапа 8 игр
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 1;
	НовСтрока.Расшифровка = "Игрок2#Игрок3";
	
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 2;
	НовСтрока.Расшифровка = "Игрок4#Игрок5";
	
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 3;
	НовСтрока.Расшифровка = "Игрок8#Игрок9";
	
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 4;
	НовСтрока.Расшифровка = "Игрок10#Игрок11";
	
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 5;
	НовСтрока.Расшифровка = "Игрок14#Игрок15";
	
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 6;
	НовСтрока.Расшифровка = "Игрок16#Игрок17";
	
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 7;
	НовСтрока.Расшифровка = "Игрок20#Игрок21";
	
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 8;
	НовСтрока.Расшифровка = "Игрок22#Игрок23";
	
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 9;
	НовСтрока.Расшифровка = "Игрок1#Игра1";
	
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 10;
	НовСтрока.Расшифровка = "Игра2#Игрок6";
	
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 11;
	НовСтрока.Расшифровка = "Игра3#Игрок7";
	
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 12;
	НовСтрока.Расшифровка = "Игра4#Игрок12";
	
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 13;
	НовСтрока.Расшифровка = "Игрок13#Игра5";
	
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 14;
	НовСтрока.Расшифровка = "Игрок18#Игра6";
	
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 15;
	НовСтрока.Расшифровка = "Игрок19#Игра7";
	
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 16;
	НовСтрока.Расшифровка = "Игра8#Игрок24";
	
	//ИГРЫ с 17 по 23
	ДобавитьСоответствиеИгр(8,17,23,,СоответствияИгр);
	
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 24;
	НовСтрока.Расшифровка = "ИграМ21#ИграМ22";
	
	ДобавитьСоответствиеИгр(16,25,26,"М",СоответствияИгр);
	
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 27;
	НовСтрока.Расшифровка = "Игра25#Игра26";
	
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 28;
	НовСтрока.Расшифровка = "ИграМ25#ИграМ26";
	
	ДобавитьСоответствиеИгр(8,29,32,"М",СоответствияИгр);
	
	ДобавитьСоответствиеИгр(28,33,35,,СоответствияИгр);
	
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 36;
	НовСтрока.Расшифровка = "ИграМ33#ИграМ34";
	
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 37;
	НовСтрока.Расшифровка = "ИграМ29#ИграМ30";
	
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 38;
	НовСтрока.Расшифровка = "ИграМ31#ИграМ32";
	
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 39;
	НовСтрока.Расшифровка = "Игра37#Игра38";
	
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 40;
	НовСтрока.Расшифровка = "ИграМ37#ИграМ38";
	
	ДобавитьСоответствиеИгр(0,41,44,"М",СоответствияИгр);
	
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 45;
	НовСтрока.Расшифровка = "Игра41#Игра42";
	
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 46;
	НовСтрока.Расшифровка = "Игра43#Игра44";
	
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 47;
	НовСтрока.Расшифровка = "Игра45#Игра46";
	
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 48;
	НовСтрока.Расшифровка = "ИграМ45#ИграМ46";
	
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 49;
	НовСтрока.Расшифровка = "ИграМ41#ИграМ42"; 
	
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 50;
	НовСтрока.Расшифровка = "ИграМ43#ИграМ44";
	
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 51;
	НовСтрока.Расшифровка = "Игра49#Игра50";
	
	НовСтрока = СоответствияИгр.Добавить();
	НовСтрока.Игра = 52;
	НовСтрока.Расшифровка = "ИграМ49#ИграМ50";
	
КонецПроцедуры

Процедура ЗаполнениеСоответствийИгр32ПрогрессивнаяСетка(СоответствияИгр,РежимТура) Экспорт
	
	//для первых 16 игроков заполнение  сделаем циклом
	Сч = 0;
	//ИГРОК с 1 по 32 
	Для Н = 1 По 16 Цикл
		НовСтрока = СоответствияИгр.Добавить();
		НовСтрока.Игра = Н;
		Сч = Сч + 1;
		ПерваяЧасть = "Игрок"+Сч;
		Сч = Сч + 1;
		ВтораяЧасть = "Игрок"+Сч;
		НовСтрока.Расшифровка = ПерваяЧасть+"#"+ВтораяЧасть;
	КонецЦикла;
	//мРасшифровка,СоответствияИгр)
	ДобавитьИгруВСоответствие(17,"Игра1#Игра2",СоответствияИгр);
	ДобавитьИгруВСоответствие(18,"Игра3#Игра4",СоответствияИгр);
	ДобавитьИгруВСоответствие(19,"Игра5#Игра6",СоответствияИгр);
	ДобавитьИгруВСоответствие(20,"Игра7#Игра8",СоответствияИгр);
	ДобавитьИгруВСоответствие(21,"Игра9#Игра10",СоответствияИгр);
	ДобавитьИгруВСоответствие(22,"Игра11#Игра12",СоответствияИгр);
	ДобавитьИгруВСоответствие(23,"Игра13#Игра14",СоответствияИгр);
	ДобавитьИгруВСоответствие(24,"Игра15#Игра16",СоответствияИгр);
	ДобавитьИгруВСоответствие(25,"Игра17#Игра18",СоответствияИгр);
	ДобавитьИгруВСоответствие(26,"Игра19#Игра20",СоответствияИгр);
	ДобавитьИгруВСоответствие(27,"Игра21#Игра22",СоответствияИгр);
	ДобавитьИгруВСоответствие(28,"Игра23#Игра24",СоответствияИгр);
	ДобавитьИгруВСоответствие(29,"Игра25#Игра26",СоответствияИгр);
	ДобавитьИгруВСоответствие(30,"Игра27#Игра28",СоответствияИгр);
	ДобавитьИгруВСоответствие(31,"Игра29#Игра30",СоответствияИгр);
	
	ДобавитьИгруВСоответствие(32,"ИграМ29#ИграМ30",СоответствияИгр);
	ДобавитьИгруВСоответствие(33,"ИграМ25#ИграМ26",СоответствияИгр);
	ДобавитьИгруВСоответствие(34,"ИграМ27#ИграМ28",СоответствияИгр);
	ДобавитьИгруВСоответствие(35,"Игра33#Игра34",СоответствияИгр);
	ДобавитьИгруВСоответствие(36,"ИграМ33#ИграМ34",СоответствияИгр);
	ДобавитьИгруВСоответствие(37,"ИграМ17#ИграМ18",СоответствияИгр);
	ДобавитьИгруВСоответствие(38,"ИграМ19#ИграМ20",СоответствияИгр);
	ДобавитьИгруВСоответствие(39,"ИграМ21#ИграМ22",СоответствияИгр);
	ДобавитьИгруВСоответствие(40,"ИграМ23#ИграМ24",СоответствияИгр);
	
	ДобавитьИгруВСоответствие(41,"Игра37#Игра38",СоответствияИгр);
	ДобавитьИгруВСоответствие(42,"Игра39#Игра40",СоответствияИгр);
	ДобавитьИгруВСоответствие(43,"Игра41#Игра42",СоответствияИгр);
	
	ДобавитьИгруВСоответствие(44,"ИграМ41#ИграМ42",СоответствияИгр);
	
	ДобавитьИгруВСоответствие(45,"ИграМ37#ИграМ38",СоответствияИгр);
	ДобавитьИгруВСоответствие(46,"ИграМ39#ИграМ40",СоответствияИгр);
	
	ДобавитьИгруВСоответствие(47,"Игра45#Игра46",СоответствияИгр);
	ДобавитьИгруВСоответствие(48,"ИграМ45#ИграМ46",СоответствияИгр);
	
	ДобавитьИгруВСоответствие(49,"ИграМ1#ИграМ2",СоответствияИгр);
	ДобавитьИгруВСоответствие(50,"ИграМ3#ИграМ4",СоответствияИгр);
	ДобавитьИгруВСоответствие(51,"ИграМ5#ИграМ6",СоответствияИгр);
	ДобавитьИгруВСоответствие(52,"ИграМ7#ИграМ8",СоответствияИгр);
	ДобавитьИгруВСоответствие(53,"ИграМ9#ИграМ10",СоответствияИгр);
	ДобавитьИгруВСоответствие(54,"ИграМ11#ИграМ12",СоответствияИгр);
	ДобавитьИгруВСоответствие(55,"ИграМ13#ИграМ14",СоответствияИгр);
	ДобавитьИгруВСоответствие(56,"ИграМ15#ИграМ16",СоответствияИгр);
	
	ДобавитьИгруВСоответствие(57,"Игра49#Игра50",СоответствияИгр);
	ДобавитьИгруВСоответствие(58,"Игра51#Игра52",СоответствияИгр);
	ДобавитьИгруВСоответствие(59,"Игра53#Игра54",СоответствияИгр);
	ДобавитьИгруВСоответствие(60,"Игра55#Игра56",СоответствияИгр);
	ДобавитьИгруВСоответствие(61,"Игра57#Игра58",СоответствияИгр);
	ДобавитьИгруВСоответствие(62,"Игра59#Игра60",СоответствияИгр);
	ДобавитьИгруВСоответствие(63,"Игра61#Игра62",СоответствияИгр);
	
	ДобавитьИгруВСоответствие(64,"ИграМ61#ИграМ62",СоответствияИгр);
	ДобавитьИгруВСоответствие(65,"ИграМ57#ИграМ58",СоответствияИгр);
	ДобавитьИгруВСоответствие(66,"ИграМ59#ИграМ60",СоответствияИгр);
	
	ДобавитьИгруВСоответствие(67,"Игра65#Игра66",СоответствияИгр);
	ДобавитьИгруВСоответствие(68,"ИграМ65#ИграМ66",СоответствияИгр);
	
	ДобавитьИгруВСоответствие(69,"ИграМ49#ИграМ50",СоответствияИгр);
	ДобавитьИгруВСоответствие(70,"ИграМ51#ИграМ52",СоответствияИгр);
	ДобавитьИгруВСоответствие(71,"ИграМ53#ИграМ54",СоответствияИгр);
	ДобавитьИгруВСоответствие(72,"ИграМ55#ИграМ56",СоответствияИгр);
	
	ДобавитьИгруВСоответствие(73,"Игра69#Игра70",СоответствияИгр);
	ДобавитьИгруВСоответствие(74,"Игра71#Игра72",СоответствияИгр);
	ДобавитьИгруВСоответствие(75,"Игра73#Игра74",СоответствияИгр);

	ДобавитьИгруВСоответствие(76,"ИграМ73#ИграМ74",СоответствияИгр);
	ДобавитьИгруВСоответствие(77,"ИграМ69#ИграМ70",СоответствияИгр);
	ДобавитьИгруВСоответствие(78,"ИграМ71#ИграМ72",СоответствияИгр);
	ДобавитьИгруВСоответствие(79,"Игра77#Игра78",СоответствияИгр);
	ДобавитьИгруВСоответствие(80,"ИграМ77#ИграМ78",СоответствияИгр);

КонецПроцедуры

Функция ПолучитьОбластьЗаголовка(ПарЗаголовок = "",ДопИнфа = "") Экспорт
	
	МакетЗаголовкаИПодвала = Документы.ПроведениеСоревнования.ПолучитьМакет("ТаблицаГрупп");
	ОбластьЗаголовка = МакетЗаголовкаИПодвала.ПолучитьОбласть("ЗаголовокГрупп");
	ОбластьЗаголовка.Параметры.Заголовок = ПарЗаголовок;
	Если ЗначениеЗаполнено(ДопИнфа) Тогда
		ОбластьЗаголовка.Параметры.ДопИнфа = ДопИнфа;
	КонецЕсли;
	Возврат ОбластьЗаголовка;
	
КонецФункции

// Для минусовки, и прогрессивной систем

Процедура ТаблицаМестКонечныхИгр(ТаблицаМестИгр,РежимТура,КолУчастников) Экспорт
	
	Если РежимТура = Перечисления.РежимыТуровСоревнования.МинусДва Тогда
		Если КолУчастников = 8 Тогда
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,7);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,12);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,13);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,14);
		ИначеЕсли КолУчастников = 16 Тогда
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,15);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,28);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,29);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,30);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,33);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,34);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,37);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,38);
		ИначеЕсли КолУчастников = 24 Тогда
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,23);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,44);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,45);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,46);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,49);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,50);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,53);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,54);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,61);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,62);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,65);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,66);
		ИначеЕсли КолУчастников = 32 Тогда
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,31);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,60);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,61);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,62);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,65);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,66);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,69);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,70);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,77);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,78);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,81);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,82);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,89);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,90);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,93);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,94);
		ИначеЕсли КолУчастников = 48 Тогда
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,47);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,92);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,93);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,94);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,97);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,98);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,101);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,102);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,109);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,110);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,113);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,114);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,121);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,122);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,125);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,126);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,141);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,142);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,145);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,146);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,153);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,154);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,157);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,158);
		ИначеЕсли КолУчастников = 64 Тогда
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,63);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,124);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,125);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,126);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,129);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,130);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,133);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,134);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,141);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,142);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,145);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,146);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,153);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,154);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,157);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,158);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,173);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,174);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,177);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,178);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,185);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,186);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,189);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,190);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,205);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,206);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,209);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,210);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,217);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,218);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,221);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,222);
		КонецЕсли;
	ИначеЕсли РежимТура = Перечисления.РежимыТуровСоревнования.Олимпийка Тогда
		Если КолУчастников = 8 Тогда
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,7);
		ИначеЕсли КолУчастников = 16 Тогда
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,15);
		ИначеЕсли КолУчастников = 24 Тогда
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,23);
		ИначеЕсли КолУчастников = 32 Тогда
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,31);
		ИначеЕсли КолУчастников = 48 Тогда
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,47);
		ИначеЕсли КолУчастников = 64 Тогда
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,63);
		КонецЕсли;
	ИначеЕсли РежимТура = Перечисления.РежимыТуровСоревнования.Прогрессивная Тогда
		Если КолУчастников = 8 Тогда
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,7);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,11);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,10);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,12);
		ИначеЕсли КолУчастников = 16 Тогда
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,15);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,26);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,27);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,28);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,29);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,30);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,31);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,32);
		ИначеЕсли КолУчастников = 24 Тогда
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,23);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,24);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,27);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,28);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,35);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,36);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,39);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,40);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,47);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,48);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,51);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,52);
		ИначеЕсли КолУчастников = 32 Тогда
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,31);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,32);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,35);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,36);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,43);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,44);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,47);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,48);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,63);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,64);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,67);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,68);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,75);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,76);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,79);
			ДобавитьНомерМестаИгры(ТаблицаМестИгр,80);
		КонецЕсли; 
	КонецЕсли;
	
КонецПроцедуры

// вспомогательная процедура для ТаблицаМестКонечныхИгр
Процедура ДобавитьНомерМестаИгры(ТаблицаМест,Номер)
	НовСтрока = ТаблицаМест.Добавить();
	НовСтрока.НомерИгры = Номер;
КонецПроцедуры

// ПЕЧАТЬ ТАБЛИЦ ПО ГРУППОВОМУ ЭТАПУ
Функция ФормированиеТаблицГрупп(ТекСтр,СИграми = Ложь,ДокОбъект, ВыводитьПолноеФИО = Ложь) Экспорт
	
	НомерТура = ТекСтр.НомерСтроки;
	мОбщаяТаблицаПоТуру = ДокОбъект.ОбщаяТаблицаДанных.Выгрузить(Новый Структура("НомерТура", НомерТура));
	глТабДок 	= Новый ТабличныйДокумент;
	КоличествоГруппПоТуру = ОпределитьКоличествоГрупп(ДокОбъект.УчастникиПоЖеребьевке.Выгрузить(), НомерТура,
		Перечисления.РежимыТуровСоревнования.Групповой);
	Макет  = Документы.ПроведениеСоревнования.ПолучитьМакет("ТаблицаГрупп");
	глВыводСоотношенийПартий = Константы.ВыводитьСоотношениеПартий.Получить();

	мДопИнфа = "от " + Формат(ДокОбъект.Дата, "ДЛФ=DD") + " " + ТекСтр.Комментарий + " " + ДокОбъект.ДопИнф;
	ОбластьЗаголовокТабДока = ПолучитьОбластьЗаголовка(ДокОбъект.НазваниеСоревнования, мДопИнфа);
	глТабДок.Вывести(ОбластьЗаголовокТабДока);

	мВыводГорода 			= Константы.ВыводКолонкиГород.Получить();
	мНазваниеКолонкиГород 	= Константы.НаименованиеКолонкиГорода.Получить();
	мВыводКлуба				= Константы.ВыводКолонкиКлуба.Получить();
	мНазваниеКолонкиКлуба	= Константы.НаименованиеКолонкиКлуба.Получить();
	мЗаголовокШапкиКолонки = "";
	Если мВыводГорода И мВыводКлуба Тогда
		мЗаголовокШапкиКолонки = ?(ЗначениеЗаполнено(мНазваниеКолонкиГород),мНазваниеКолонкиГород,"Город")+"/"+
			?(ЗначениеЗаполнено(мНазваниеКолонкиКлуба),мНазваниеКолонкиКлуба,"Клуб");
	ИначеЕсли мВыводГорода и Не мВыводКлуба Тогда 
		мЗаголовокШапкиКолонки = ?(ЗначениеЗаполнено(мНазваниеКолонкиГород),мНазваниеКолонкиГород,"Город");
	ИначеЕсли Не мВыводГорода и мВыводКлуба Тогда
		мЗаголовокШапкиКолонки = ?(ЗначениеЗаполнено(мНазваниеКолонкиКлуба),мНазваниеКолонкиКлуба,"Клуб");
	КонецЕсли; 
	
	Если ТипЗнч(ТекСтр) = Тип("Структура") Тогда
		Если ТекСтр.Свойство("ПромежуточныеПротоколы") 
			И ТекСтр.Свойство("НастройкиМест") 
			И ТекСтр.ПромежуточныеПротоколы 
			И ЗначениеЗаполнено(ТекСтр.НастройкиМест) Тогда
			НастройкиМест = КоннекторHTTP.JSONВЗначение(ТекСтр.НастройкиМест);
			ТаблицаСоответствийМест = Новый ТаблицаЗначений();
			ТаблицаСоответствийМест.Колонки.Добавить("НомерГруппы");
			ТаблицаСоответствийМест.Колонки.Добавить("МестоВГруппе");
			ТаблицаСоответствийМест.Колонки.Добавить("МестоПоОчереди");
			Для Каждого ТекНастройкамест Из НастройкиМест Цикл
				Сч = 0;
				Для индекс = ТекНастройкамест.МестоС По ТекНастройкамест.МестоПо Цикл
					Сч = Сч + 1;
					НовСтрока = ТаблицаСоответствийМест.Добавить();
					НовСтрока.НомерГруппы 		= ТекНастройкамест.НомерГруппы;
					НовСтрока.МестоВГруппе		= Сч;
					НовСтрока.МестоПоОчереди	= индекс; 
				КонецЦикла;
				
			КонецЦикла;
		Иначе
			ТаблицаСоответствийМест = Неопределено;
		КонецЕсли;
	Иначе
		ТаблицаСоответствийМест = Неопределено;
	КонецЕсли;
	
	Для Н = 1 По КоличествоГруппПоТуру Цикл
		ТабДок = Новый ТабличныйДокумент;
		Если СИграми Тогда
			ДанныеПоМестамУчастников = Новый ТаблицаЗначений;
			ДанныеПоМестамУчастников.Колонки.Добавить("Участник",Новый ОписаниеТипов("СправочникСсылка.Участники"));
			ДанныеПоМестамУчастников.Колонки.Добавить("Очки",Новый ОписаниеТипов("Число"));
			ДанныеПоМестамУчастников.Колонки.Добавить("Место",Новый ОписаниеТипов("Число"));
			ДанныеПоМестамУчастников.Колонки.Добавить("Соотношение",Новый ОписаниеТипов("Строка"));
		КонецЕсли;
		//заголовок группы
		ОбластьЗаголовок = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
		ОбластьЗаголовок.Параметры.НазваниеГруппы = "Группа №" + Н;
		ТабДок.Вывести(ОбластьЗаголовок);
		//шапка таблицы
		ОбластьШапка = Макет.ПолучитьОбласть("ШапкаТаблицы | ВертикальШапка");
		ОбластьШапка.Параметры.ФИО = "ФИО участника";
		ТабДок.Вывести(ОбластьШапка);
		Если мВыводГорода Или мВыводКлуба Тогда
			ОбластьГородКлуб = Макет.ПолучитьОбласть("ШапкаТаблицы | ОбластьГородКлуб");
			ОбластьГородКлуб.Параметры.ЗаголовокГородКлуб = мЗаголовокШапкиКолонки;
			ТабДок.Присоединить(ОбластьГородКлуб);
		КонецЕсли; 
		КоличествоУчастников = ДокОбъект.УчастникиПоЖеребьевке.НайтиСтроки(Новый Структура("НомерГруппы,НомерТура,РежимТура",Н,НомерТура,Перечисления.РежимыТуровСоревнования.Групповой));
		ОбластьШапкиКолонки = Макет.ПолучитьОбласть("ШапкаТаблицы | ВертикальКолонка");
		Ном = 1;
		Для К = 0 По КоличествоУчастников.ВГраница() Цикл
			ОбластьШапкиКолонки.Параметры.НомерКолонки = Ном;
			ТабДок.Присоединить(ОбластьШапкиКолонки);
			Ном = Ном + 1;
		КонецЦикла;
		//и еще добавим 3 колонки очки,мячи,место
		ОбластьШапкиКолонки.Параметры.НомерКолонки = "Очки";
		ТабДок.Присоединить(ОбластьШапкиКолонки);
		Если глВыводСоотношенийПартий Тогда
			ОбластьШапкиКолонки.Параметры.НомерКолонки = "Соотн.";
			ТабДок.Присоединить(ОбластьШапкиКолонки);
		КонецЕсли; 
		ОбластьШапкиКолонки.Параметры.НомерКолонки = "Место";
		ТабДок.Присоединить(ОбластьШапкиКолонки);
		//начинаем выводить строки таблицы
		ОбластьСтроки 	     = Макет.ПолучитьОбласть("СтрокаТаблицы | ВертикальШапка");
		ОбластьКолонкиСтроки = Макет.ПолучитьОбласть("СтрокаТаблицы | ВертикальКолонка");
		ЗакрашеннаяОбласть = Макет.ПолучитьОбласть("СтрокаТаблицы|Закрашенная");
		ОбластьДляОчков = Макет.ПолучитьОбласть("СтрокаТаблицы|ПоОчкам");
		
		ОбластьЗначенияКолонкиГородКлуб = Макет.ПолучитьОбласть("СтрокаТаблицы | ОбластьГородКлуб");
		Ном = 1;
		//заполним таблицу с местами
		Если СИграми Тогда
			Для Мест = 0 По КоличествоУчастников.ВГраница() Цикл
				НовСтрокаДанных = ДанныеПоМестамУчастников.Добавить();
				НовСтрокаДанных["Участник"] = КоличествоУчастников[Мест].Участник; 
			КонецЦикла;
			ТаблицаСМестами = РасчетМестНаСервере(ДанныеПоМестамУчастников.Скопировать(,"Участник"),мОбщаяТаблицаПоТуру,НомерТура);
			Для каждого ТекСтрРасчета Из ТаблицаСМестами Цикл
				ИскомаяСтрока = ДанныеПоМестамУчастников.Найти(ТекСтрРасчета.Участник,"Участник");
				Если ИскомаяСтрока <> Неопределено Тогда
					ЗаполнитьЗначенияСвойств(ИскомаяСтрока,ТекСтрРасчета);
				КонецЕсли; 
			КонецЦикла;  
		КонецЕсли;
				
		ОбщаяТаблицаОчков = ПоискРезультатИгрыДляГрупповогоЭтапаОбщая(НомерТура, мОбщаяТаблицаПоТуру);
		
		Для К = 0 По КоличествоУчастников.ВГраница() Цикл
			ОбластьСтроки.Параметры.НомерПоПорядку = Ном;
			ОбластьСтроки.Параметры.Участник	   	= ОбщийКлиентСервер.СформироватьИмяИгрока(КоличествоУчастников[К].Участник, ВыводитьПолноеФИО) +
				" (" + Формат(КоличествоУчастников[К].ТекущийРейтинг, "ЧН=0; ЧГ=0;") + ")";			
			ТабДок.Вывести(ОбластьСтроки);
			Если мВыводГорода И мВыводКлуба Тогда
				мЗначениеГородаКлуба = ""+КоличествоУчастников[К].Участник.Город+"/"+КоличествоУчастников[К].Участник.Клуб;
			ИначеЕсли мВыводГорода и Не мВыводКлуба Тогда 
				мЗначениеГородаКлуба = ""+КоличествоУчастников[К].Участник.Город;
			ИначеЕсли Не мВыводГорода и мВыводКлуба Тогда
				мЗначениеГородаКлуба = ""+КоличествоУчастников[К].Участник.Клуб;
			КонецЕсли;
			Если мВыводГорода Или мВыводКлуба Тогда
				ОбластьЗначенияКолонкиГородКлуб.Параметры.ЗначениеГородКлуб = мЗначениеГородаКлуба;
				ТабДок.Присоединить(ОбластьЗначенияКолонкиГородКлуб);
			КонецЕсли;
			
			// теперь добьем строку клетками для записей партий
			ТекНомер = 1;
			ВсегоОчков = 0;
						
			//@skip-warning
			Для Каждого ТекУч Из КоличествоУчастников Цикл
				Если ТекНомер = Ном Тогда
					ТабДок.Присоединить(ЗакрашеннаяОбласть);
				Иначе
					Если СИграми Тогда
						ДанныеДляОтбора = Новый Структура;
						ДанныеДляОтбора.Вставить("Проигравший",КоличествоУчастников[К].Участник);
						ДанныеДляОтбора.Вставить("Выигравший",КоличествоУчастников[ТекНомер-1].Участник);
						ДанныеДляОтбора.Вставить("НомерТура",НомерТура);
						
						ДанныеТаблицыПоОчкам = ОбщаяТаблицаОчков.НайтиСтроки(ДанныеДляОтбора);
						Если ДанныеТаблицыПоОчкам.Количество() = 0 Тогда
							//поменяем 
							ДанныеДляОтбора.Проигравший	=	КоличествоУчастников[ТекНомер-1].Участник;
							ДанныеДляОтбора.Выигравший	= КоличествоУчастников[К].Участник;
							
							ДанныеТаблицыПоОчкам = ОбщаяТаблицаОчков.НайтиСтроки(ДанныеДляОтбора);
						КонецЕсли;             
						РезультатИгры = "";
						Если ДанныеТаблицыПоОчкам.Количество() > 0 Тогда
							//так как мы проверяем по первому игроку, то и ориентируемся по нему
							СтрокаТаблицы = ДанныеТаблицыПоОчкам[0];
							Если КоличествоУчастников[К].Участник = СтрокаТаблицы.Выигравший Тогда
								РезультатИгры = "2"; //выиграл
							Иначе
								Если СтрокаТаблицы.ТехническоеП Тогда
									РезультатИгры = "0";
								Иначе
									РезультатИгры = "1"; //проиграл
								КонецЕсли; 
							КонецЕсли;
						КонецЕсли;
						
						//РезультатИгры =  ПоискРезультатИгрыДляГрупповогоЭтапа(ДанныеДляОтбора,мОбщаяТаблицаПоТуру);
						Если РезультатИгры = "" Тогда
							ОбластьКолонкиСтроки.Параметры.ЗначениеКолонки = "";
							ОбластьДляВывода = ОбластьКолонкиСтроки;
						Иначе						
							ДанныеДляОтбора = Новый Структура;
							ДанныеДляОтбора.Вставить("Первый",КоличествоУчастников[К].Участник);
							ДанныеДляОтбора.Вставить("Второй",КоличествоУчастников[ТекНомер-1].Участник);
							ДанныеДляОтбора.Вставить("НомерТура",НомерТура);
							
							ПараметрыДетализации = ПолучитьДетализациюПоИгре(ДанныеДляОтбора,мОбщаяТаблицаПоТуру);
							Если ПараметрыДетализации.Количество() > 0 Тогда
								СтрокаДетализации = ПараметрыДетализации[0];
							Иначе
								СтрокаДетализации = Неопределено
							КонецЕсли; 
							Если РезультатИгры = "2" Тогда //выводим счет по очкам
								ОбластьДляОчков.Параметры.ЗначениеКолонки = РезультатИгры;
								Если Найти(СтрокаДетализации.Мячики,"Техн.") > 0 Тогда
									ОбластьДляОчков.Параметры.СтрокаОчков = ""+СтрокаДетализации.ОчкиВыигравшего+" : "+СтрокаДетализации.ОчкиПроигравшего;	
								Иначе
									ОбластьДляОчков.Параметры.СтрокаОчков = СтрокаДетализации.Мячики;								
								КонецЕсли; 
							ИначеЕсли РезультатИгры = "1" Или РезультатИгры = "0" Тогда  //выводим просто партии
								Если Найти(СтрокаДетализации.Мячики,"Техн.") > 0 Тогда
									РезультатИгры = "0";
									ОбластьДляОчков.Параметры.СтрокаОчков = СтрокаДетализации.Мячики;
								Иначе
									//ОбластьДляОчков.Параметры.ЗначениеКолонки = РезультатИгры;
									ОбластьДляОчков.Параметры.СтрокаОчков = ""+ПараметрыДетализации[0].ОчкиПроигравшего+" : "+ПараметрыДетализации[0].ОчкиВыигравшего;
								КонецЕсли; 
								ОбластьДляОчков.Параметры.ЗначениеКолонки = РезультатИгры;
								//ОбластьДляОчков.Параметры.СтрокаОчков = СтрокаДетализации.Мячики;
							КонецЕсли;
							ВсегоОчков = ВсегоОчков + Число(РезультатИгры);
							ОбластьДляВывода = ОбластьДляОчков;
						КонецЕсли;
					Иначе
						ОбластьКолонкиСтроки.Параметры.ЗначениеКолонки = "";
						ОбластьДляВывода = ОбластьКолонкиСтроки;
					КонецЕсли;
					ТабДок.Присоединить(ОбластьДляВывода);
				КонецЕсли;
				ТекНомер = ТекНомер + 1;
			КонецЦикла;
			//теперь определяем места
			Ном = Ном + 1;
			Если СИграми Тогда
				//заполняем очки мячи и место
				ОбластьКолонкиСтроки.Параметры.ЗначениеКолонки = ВсегоОчков;
				ТабДок.Присоединить(ОбластьКолонкиСтроки);
				
				ДанныеПоУчастнику = ДанныеПоМестамУчастников.Найти(КоличествоУчастников[К].Участник);
				Если глВыводСоотношенийПартий Тогда
					Если ДанныеПоУчастнику <> Неопределено Тогда
						WL =  ДанныеПоУчастнику["Соотношение"];
					Иначе
						WL = "";
					КонецЕсли;
					ОбластьКолонкиСтроки.Параметры.ЗначениеКолонки = WL;
					ТабДок.Присоединить(ОбластьКолонкиСтроки);
				КонецЕсли; 
				
				СтрокаСМестом = ДанныеПоУчастнику;
				Если СтрокаСМестом <> Неопределено Тогда
					МестоУчастника = СтрокаСМестом["Место"];
				Иначе
					МестоУчастника = Неопределено;
				КонецЕсли;
				Если ТаблицаСоответствийМест <> Неопределено И МестоУчастника <> Неопределено Тогда
					ИскомоеМесто = ТаблицаСоответствийМест.НайтиСтроки(Новый Структура("НомерГруппы, МестоВГруппе", Н,
						МестоУчастника));
					Если ИскомоеМесто.Количество() > 0 Тогда
						МестоУчастника = ИскомоеМесто[0].МестоПоОчереди;
					КонецЕсли;
				КонецЕсли;
				ОбластьКолонкиСтроки.Параметры.ЗначениеКолонки = МестоУчастника;
				ТабДок.Присоединить(ОбластьКолонкиСтроки);
			Иначе
				//3 пустышки
				Для а = 1 По 2 + ?(глВыводСоотношенийПартий,1,0) Цикл
					ОбластьКолонкиСтроки.Параметры.ЗначениеКолонки = "";
					ТабДок.Присоединить(ОбластьКолонкиСтроки);
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;
		Если Не глТабДок.ПроверитьВывод(ТабДок) Тогда
			глТабДок.ВывестиГоризонтальныйРазделительСтраниц();	
		КонецЕсли;
		Если К <>  КоличествоУчастников.Количество() Тогда
			ОбластьПробела = Макет.ПолучитьОбласть("ПробелМеждуТаблиц");
			ТабДок.Вывести(ОбластьПробела);
		КонецЕсли;
		глТабДок.Вывести(ТабДок);
	КонецЦикла;
	
	Если ЗначениеЗаполнено(ДокОбъект.ГлавныйСудья) Или ЗначениеЗаполнено(ДокОбъект.Секретарь) Тогда
		Подвал = Макет.ПолучитьОбласть("Подвал");
		Если ЗначениеЗаполнено(ДокОбъект.ГлавныйСудья) Тогда
			Подвал.Параметры.глСудья =  ОбщийКлиентСервер.СформироватьИмяИгрока(ДокОбъект.ГлавныйСудья);
		КонецЕсли;
		Если ЗначениеЗаполнено(ДокОбъект.Секретарь) Тогда
			Подвал.Параметры.Секретарь =  ОбщийКлиентСервер.СформироватьИмяИгрока(ДокОбъект.Секретарь);
		КонецЕсли;
		глТабДок.Вывести(Подвал);
	КонецЕсли;
	
	глТабДок.АвтоМасштаб = Истина;
	глТабДок.ПолеСверху = 5;
	глТабДок.ПолеСнизу = 5;
	глТабДок.ПолеСлева = 5;
	глТабДок.ПолеСправа = 5;
	
	Возврат глТабДок;
	
КонецФункции

Функция СформироватьОтношениеВыигранныхКПроиграннымПартиям(мУчастник, ТаблицаИгр)

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = "ВЫБРАТЬ * ПОМЕСТИТЬ втТЗ ИЗ &Внеш КАК Внеш";
	Запрос.УстановитьПараметр("Внеш",ТаблицаИгр);
	Запрос.Выполнить();
	Запрос.Текст = "ВЫБРАТЬ
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Выигравший КАК Участник,
	|	СУММА(ПроведениеСоревнованияОбщаяТаблицаДанных.ОчкиВыигравшего) КАК ВыигралПартий,
	|	СУММА(ПроведениеСоревнованияОбщаяТаблицаДанных.ОчкиПроигравшего) КАК ПроигралПартий
	|ПОМЕСТИТЬ втДанные
	|ИЗ
	|	втТЗ КАК ПроведениеСоревнованияОбщаяТаблицаДанных
	|ГДЕ
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Выигравший = &Участник
	|
	|СГРУППИРОВАТЬ ПО
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Выигравший
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Проигравший,
	|	СУММА(ПроведениеСоревнованияОбщаяТаблицаДанных.ОчкиПроигравшего),
	|	СУММА(ПроведениеСоревнованияОбщаяТаблицаДанных.ОчкиВыигравшего)
	|ИЗ
	|	втТЗ КАК ПроведениеСоревнованияОбщаяТаблицаДанных
	|ГДЕ
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Проигравший = &Участник
	|
	|СГРУППИРОВАТЬ ПО
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Проигравший
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втДанные.Участник,
	|	СУММА(втДанные.ВыигралПартий) КАК ВыигралПартий,
	|	СУММА(втДанные.ПроигралПартий) КАК ПроигралПартий
	|ИЗ
	|	втДанные КАК втДанные
	|
	|СГРУППИРОВАТЬ ПО
	|	втДанные.Участник";
	
	Запрос.УстановитьПараметр("Участник",мУчастник);
	Результат = Запрос.Выполнить().Выгрузить();
	Если Результат.Количество() > 0 Тогда
		ЗначениеВозврата = ""+Результат[0].ВыигралПартий+" - "+Результат[0].ПроигралПартий;
		Возврат ЗначениеВозврата;
	Иначе
		Возврат "";
	КонецЕсли; 
	
КонецФункции
 
Функция ПолучитьДетализациюПоИгре(Данные,Таблица) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = "ВЫБРАТЬ * ПОМЕСТИТЬ втТЗ ИЗ &Внеш КАК Внеш";
	Запрос.УстановитьПараметр("Внеш",Таблица);
	Запрос.Выполнить();
	
	Запрос.Текст = "ВЫБРАТЬ
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.НомерТура,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Выигравший,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Проигравший,
	|	СУММА(ПроведениеСоревнованияОбщаяТаблицаДанных.ОчкиВыигравшего) КАК ОчкиВыигравшего,
	|	СУММА(ПроведениеСоревнованияОбщаяТаблицаДанных.ОчкиПроигравшего) КАК ОчкиПроигравшего
	|ПОМЕСТИТЬ втТаблица
	|ИЗ
	|	втТЗ КАК ПроведениеСоревнованияОбщаяТаблицаДанных
	|ГДЕ
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.НомерТура = &НомерТура
	|	И ПроведениеСоревнованияОбщаяТаблицаДанных.Выигравший = &Первый
	|	И ПроведениеСоревнованияОбщаяТаблицаДанных.Проигравший = &Второй
	|
	|СГРУППИРОВАТЬ ПО
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.НомерТура,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Выигравший,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Проигравший
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.НомерТура,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Выигравший,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Проигравший,
	|	СУММА(ПроведениеСоревнованияОбщаяТаблицаДанных.ОчкиВыигравшего),
	|	СУММА(ПроведениеСоревнованияОбщаяТаблицаДанных.ОчкиПроигравшего)
	|ИЗ
	|	втТЗ КАК ПроведениеСоревнованияОбщаяТаблицаДанных
	|ГДЕ
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.НомерТура = &НомерТура
	|	И ПроведениеСоревнованияОбщаяТаблицаДанных.Выигравший = &Второй
	|	И ПроведениеСоревнованияОбщаяТаблицаДанных.Проигравший = &Первый
	|
	|СГРУППИРОВАТЬ ПО
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.НомерТура,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Выигравший,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Проигравший
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втТаблица.НомерТура,
	|	втТаблица.Выигравший,
	|	втТаблица.Проигравший,
	|	втТаблица.ОчкиВыигравшего,
	|	втТаблица.ОчкиПроигравшего
	|ИЗ
	|	втТаблица КАК втТаблица
	|
	|СГРУППИРОВАТЬ ПО
	|	втТаблица.Выигравший,
	|	втТаблица.Проигравший,
	|	втТаблица.НомерТура,
	|	втТаблица.ОчкиВыигравшего,
	|	втТаблица.ОчкиПроигравшего";
	//делаем объдинение в запросе сразу, так как может быть только один вариант и он сразу будет в результате
	Запрос.УстановитьПараметр("НомерТура",Данные.НомерТура);
	Запрос.УстановитьПараметр("Первый",Данные.Первый);
	Запрос.УстановитьПараметр("Второй",Данные.Второй);
	Результат = Запрос.Выполнить().Выгрузить();
	Результат.Колонки.Добавить("Мячики");
	Если Результат.Количество() > 0 Тогда
		СтрТаблицы = Результат[0];
		ПеремСтрМячиков = "";
		ОтборДляТаблицы = Новый Структура;
		ОтборДляТаблицы.Вставить("Выигравший",СтрТаблицы.Выигравший);
		ОтборДляТаблицы.Вставить("Проигравший",СтрТаблицы.Проигравший);
		ОтборДляТаблицы.Вставить("НомерТура",Данные.НомерТура);
		МассивСтрок = Таблица.НайтиСтроки(ОтборДляТаблицы);
		Если МассивСтрок.Количество() = 1 Тогда //скорей всего это техническое
			//проверим дополнительно
			СтрМассива = МассивСтрок[0];
			Если СтрМассива.ТехническоеП Тогда //действительно техническое
				ПеремСтрМячиков = "(Техн.)";//специально добавим последний знак
			Иначе //вводили по партиям
				Если Данные.Первый = СтрТаблицы.Выигравший Тогда
					ПеремСтрМячиков = ""+СтрТаблицы.ОчкиВыигравшего+" : "+СтрТаблицы.ОчкиПроигравшего;
				Иначе
					ПеремСтрМячиков = ""+СтрТаблицы.ОчкиПроигравшего+" : "+СтрТаблицы.ОчкиВыигравшего;
				КонецЕсли;
			КонецЕсли;
		Иначе
			Для Каждого ТекСтрока Из МассивСтрок Цикл
				ПеремСтрМячиков = ПеремСтрМячиков + Строка(ТекСтрока.КолШаров)+";";
			КонецЦикла;
			ПеремСтрМячиков = Лев(ПеремСтрМячиков,СтрДлина(ПеремСтрМячиков)-1);
		КонецЕсли;
		СтрТаблицы.Мячики = ПеремСтрМячиков;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

//-------------ПЕЧАТЬ ПРЕДВАРИТЕЛЬНОГО РЕЙТИНГА
//

Функция ТабличныйДокументРейтинг(ДокСсылка, ВыводитьПолноеФИО = Ложь) Экспорт
	
	ДокОбъект = ДокСсылка.ПолучитьОбъект();
	Если ДокСсылка.ОбщийРежимСоревнования = 1 Тогда
		ТаблицаРасчета = ДокОбъект.ПолучитьРасчетнуюТаблицуДляБыстрогоРежима();
	ИначеЕсли ДокСсылка.ОбщийРежимСоревнования = 0 Тогда 
		ТаблицаРасчета = ДокОбъект.ПолучитьРасчетнуюТаблицуРейтинга();
	ИначеЕсли ДокСсылка.ОбщийРежимСоревнования = 2 Тогда //команды
		ТаблицаРасчета = ДокОбъект.ПолучитьРасчетнуюТаблицуРейтингаПоКоманднымСоревнованиям();
	КонецЕсли; 
	ЕстьБонусы = ДокСсылка.Бонусы.Количество() > 0;
	
	ТабДок = Новый ТабличныйДокумент;
	Макет = Документы.ПроведениеСоревнования.ПолучитьМакет("ПредварительныйРейтинг");
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьЗаголовок.Параметры.Заголовок = ДокСсылка.НазваниеСоревнования;	
	ОбластьЗаголовок.Параметры.ДатаДок = "от "+Формат(ДокСсылка.Дата,"ДЛФ=DD");
	ТабДок.Вывести(ОбластьЗаголовок);
	
	ШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы | ДоБонуса");
	ТабДок.Вывести(ШапкаТаблицы);
	Если ЕстьБонусы Тогда
		ТабДок.Присоединить(Макет.ПолучитьОбласть("ШапкаТаблицы | ОбластьБонуса")); 
	КонецЕсли; 
	ТабДок.Присоединить(Макет.ПолучитьОбласть("ШапкаТаблицы | ОбластьНовыйРейтинг")); 
	
	СтрокаТаблицы = Макет.ПолучитьОбласть("СтрокаТаблицы | ДоБонуса");
	Сч = 1;
	Для Каждого ТекСтрока Из ТаблицаРасчета Цикл
		Если ТекСтрока.Участник.НеВыводитьВОтчетах Тогда
			Продолжить;	
		КонецЕсли; 
		СтрокаТаблицы.Параметры.Заполнить(ТекСтрока);
		СтрокаТаблицы.Параметры.Участник = ОбщийКлиентСервер.СформироватьИмяИгрока(ТекСтрока.Участник, ВыводитьПолноеФИО);
		СтрокаТаблицы.Параметры.Ном = Сч;
		ТабДок.Вывести(СтрокаТаблицы);
		Если ЕстьБонусы Тогда
			ОбластьСтрокиДоБонуса = Макет.ПолучитьОбласть("СтрокаТаблицы | ОбластьБонуса");
			ОбластьСтрокиДоБонуса.Параметры.Бонус = ТекСтрока.Бонус;
			ТабДок.Присоединить(ОбластьСтрокиДоБонуса);
		КонецЕсли; 
		Сч = Сч + 1;
		ОбластьНовогоРейтинга = Макет.ПолучитьОбласть("СтрокаТаблицы | ОбластьНовыйРейтинг");
		ОбластьНовогоРейтинга.Параметры.НовыйРейтинг = ТекСтрока.НовыйРейтинг;
		ТабДок.Присоединить(ОбластьНовогоРейтинга);
	КонецЦикла;
	мВыводитьСреднийРейтинг = Константы.ВыводитьСреднийРейтингВПредварительном.Получить();
	Если мВыводитьСреднийРейтинг Тогда
		ОбластьСреднегоРейтинга = Макет.ПолучитьОбласть("СтрокаСреднегоРейтинга");
		КопияТаблицы = Новый ТаблицаЗначений;
		КопияТаблицы.Колонки.Добавить("Участник",Новый ОписаниеТипов("СправочникСсылка.Участники"));
		КопияТаблицы.Колонки.Добавить("ТекущийРейтинг",Новый ОписаниеТипов("Число",,,Новый КвалификаторыЧисла(15,2)));
		Для Каждого Стр Из ТаблицаРасчета Цикл
			ЗаполнитьЗначенияСвойств(КопияТаблицы.Добавить(),Стр);	
		КонецЦикла;
		
		ДанныеДляСреднегоРейтинга = Документы.ПроведениеСоревнования.РассчитатьСреднийРейтингВМодулеМенеджера(КопияТаблицы);
		ОбластьСреднегоРейтинга.Параметры.ИтогСреднийРейтинг = ДанныеДляСреднегоРейтинга.ФорматСреднийРейтинг;
		ТабДок.Вывести(ОбластьСреднегоРейтинга);
	КонецЕсли; 
	
	Возврат ТабДок;
КонецФункции	

//--------------ПЕЧАТЬ ПРОТОКОЛА КОМАНД СОРЕВНОВАНИЯ
//

Функция ТабличныйДокументСписокКоманд(ДокСсылка) Экспорт
	
	ТабДок = Новый ТабличныйДокумент;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка",ДокСсылка);
	Запрос.Текст = "ВЫБРАТЬ
	|	ПроведениеСоревнованияТаблицаКоманд.НазваниеКоманды КАК НазваниеКоманды,
	|	ПроведениеСоревнованияТаблицаКоманд.Участник КАК ФИО,
	|	ПроведениеСоревнованияТаблицаКоманд.ТекущийРейтинг КАК Рейтинг,
	|	ПроведениеСоревнованияТаблицаКоманд.Участник.ДатаРождения КАК ДатаРождения,
	|	ПроведениеСоревнованияТаблицаКоманд.Участник.Ссылка КАК РасшФИО,
	|	ПроведениеСоревнованияТаблицаКоманд.НомерУчастника
	|ИЗ
	|	Документ.ПроведениеСоревнования.ТаблицаКоманд КАК ПроведениеСоревнованияТаблицаКоманд
	|ГДЕ
	|	ПроведениеСоревнованияТаблицаКоманд.Ссылка = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	НазваниеКоманды,
	|	Рейтинг УБЫВ
	|ИТОГИ
	|	СУММА(Рейтинг)
	|ПО
	|	НазваниеКоманды";
	ДанныеПоКомандам = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Макет = Документы.ПроведениеСоревнования.ПолучитьМакет("ПротоколКомандных");
	ОбластьЗаголовка = Макет.ПолучитьОбласть("Заголовок");
	ОбластьЗаголовка.Параметры.НазваниеСоревнования	= ДокСсылка.НазваниеСоревнования;
	ОбластьЗаголовка.Параметры.ДопИнформация				= ДокСсылка.ДопИнф;
	ТабДок.Вывести(ОбластьЗаголовка);
	
	ШапкаСписка = Макет.ПолучитьОбласть("ШапкаСписка");
	ТабДок.Вывести(ШапкаСписка);
	
	СтрСписка = Макет.ПолучитьОбласть("СтрокаСписка");
	
	СчКоманд = 1;
	Для каждого ТекСтр Из ДанныеПоКомандам.Строки Цикл
		Сч = 1;
		Для каждого ТекУчастник Из ТекСтр.Строки Цикл
			СтрСписка.Параметры.Заполнить(ТекУчастник);
			СтрСписка.Параметры.Номер = СчКоманд;
			СтрСписка.Параметры.СуммарныйРейтинг = ТекСтр.Рейтинг;
			ТабДок.Вывести(СтрСписка);
			ИскомаяОбласть = ТабДок.НайтиТекст(ТекСтр.НазваниеКоманды);
			ИскомаяОбласть.Текст = "";
			Если Сч = 1 Тогда
				мИмяНач = ИскомаяОбласть.Имя;
			ИначеЕсли Сч = ТекСтр.Строки.Количество() Тогда
				мИмяКон = ИскомаяОбласть.Имя;
			КонецЕсли; 
			Сч = Сч + 1;
		КонецЦикла;
		мНижняяГраница = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная,1);
		//объединяем счетчик команд С1
		мНачСтрока = Сред(мИмяНач,1,Найти(мИмяНач,"C")-1);
		мКонСтрока = Сред(мИмяКон,1,Найти(мИмяКон,"C")-1);
		мОбластьСчетчика = ТабДок.Область(мНачСтрока+"C1:"+мКонСтрока+"C1");
		мОбластьСчетчика.Объединить();
		мОбластьСчетчика.Текст = СчКоманд;
		мОбластьСчетчика.ГраницаСнизу = мНижняяГраница;
		
		//объединим названия команд С2-С5 колонки
		ИмяОбластьДляНазвания = мНачСтрока+"C2:"+мКонСтрока+"C5";
		мОбластьНазванияКоманды = ТабДок.Область(ИмяОбластьДляНазвания);
		мОбластьНазванияКоманды.Объединить();
		мОбластьНазванияКоманды.Текст = ТекСтр.НазваниеКоманды;
		мОбластьНазванияКоманды.ГраницаСнизу = мНижняяГраница;
		////для границы номер
		//ИмяОбластиНомера = ТабДок.Область(мКонСтрока+"C6");
		//ИмяОбластиНомера.ГраницаСнизу = мНижняяГраница;
		////для границы ФИО С7-С10
		//ИмяОбластиФИО = ТабДок.Область(мКонСтрока+"C7:"+мКонСтрока+"C10");
		//ИмяОбластиФИО.ГраницаСнизу = мНижняяГраница;
		////общая граница
		ИмяОбластиДляГраницы = ТабДок.Область(мКонСтрока+"C6:"+мКонСтрока+"C14");
		ИмяОбластиДляГраницы.ГраницаСнизу = мНижняяГраница;
		//объединим общий рейтинг С15-С16
		ИмяОбластьДляОбщРейтинга = мНачСтрока+"C15:"+мКонСтрока+"C16";
		мОбластьОбщРейтинга = ТабДок.Область(ИмяОбластьДляОбщРейтинга);
		мОбластьОбщРейтинга.Объединить();
		мОбластьОбщРейтинга.Текст = ТекСтр.Рейтинг;
		мОбластьОбщРейтинга.ГраницаСнизу = мНижняяГраница;
		мОбластьОбщРейтинга.ГраницаСправа = мНижняяГраница;
		
		СчКоманд = СчКоманд + 1;
	КонецЦикла; 
	
	МакетЗаголовкаИПодвала = Документы.ПроведениеСоревнования.ПолучитьМакет("ТаблицаГрупп");
	//подвал
	ОбластьПодвал = МакетЗаголовкаИПодвала.ПолучитьОбласть("Подвал");
	Если ЗначениеЗаполнено(ДокСсылка.ГлавныйСудья) Тогда
		ОбластьПодвал.Параметры.глСудья = ОбщийКлиентСервер.СформироватьИмяИгрока(ДокСсылка.ГлавныйСудья);
	КонецЕсли;
	Если ЗначениеЗаполнено(ДокСсылка.Секретарь) Тогда
		ОбластьПодвал.Параметры.Секретарь = ОбщийКлиентСервер.СформироватьИмяИгрока(ДокСсылка.Секретарь);
	КонецЕсли;
	ТабДок.Вывести(ОбластьПодвал);
	ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
	//протоколы игр команд
    ТабДок.Вывести(СформироватьПротоколКомандныхИгр(ДокСсылка));
	ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
	
	Возврат ТабДок;
	
КонецФункции

Функция СформироватьПротоколКомандныхИгр(ДокСсылка) Экспорт
	
	ТабДок = Новый ТабличныйДокумент;
	Макет = Документы.ПроведениеСоревнования.ПолучитьМакет("ПротоколКомандных");
		
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Ссылка,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.НомерСтроки,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.НомерТура КАК НомерТура,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.РежимТура,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Команда1,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Участник1,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Расстановка1 КАК Расстановка1,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Команда2,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Участник2,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Расстановка2,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.НомерГруппы КАК НомерГруппы,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.НомерСета КАК НомерСета,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.КолШаров,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.ОчкиВыигравшего,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.ОчкиПроигравшего,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.ТехническоеВ,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.ТехническоеП
	|ПОМЕСТИТЬ втОбщиеДанные
	|ИЗ
	|	Документ.ПроведениеСоревнования.ОбщаяТаблицаДанныхПоКомандам КАК ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам
	|ГДЕ
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Ссылка = &Ссылка
	|	И (ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.ОчкиВыигравшего <> 0
	|			ИЛИ ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.ОчкиПроигравшего <> 0)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	втОбщиеДанные.НомерТура,
	|	втОбщиеДанные.РежимТура,
	|	втОбщиеДанные.НомерГруппы,
	|	втОбщиеДанные.Команда1,
	|	втОбщиеДанные.Команда2
	|ПОМЕСТИТЬ втОбщиеСыгранныеИгры
	|ИЗ
	|	втОбщиеДанные КАК втОбщиеДанные
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПроведениеСоревнованияКомандыПоЖеребьевке.НомерТура,
	|	ПроведениеСоревнованияКомандыПоЖеребьевке.НомерГруппы,
	|	ПроведениеСоревнованияКомандыПоЖеребьевке.РежимТура,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ПроведениеСоревнованияКомандыПоЖеребьевке.НазваниеКоманды) КАК КоличествоУчастников
	|ПОМЕСТИТЬ втТаблицаГруппПоКомандам
	|ИЗ
	|	Документ.ПроведениеСоревнования.КомандыПоЖеребьевке КАК ПроведениеСоревнованияКомандыПоЖеребьевке
	|ГДЕ
	|	ПроведениеСоревнованияКомандыПоЖеребьевке.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ПроведениеСоревнованияКомандыПоЖеребьевке.НомерТура,
	|	ПроведениеСоревнованияКомандыПоЖеребьевке.НомерГруппы,
	|	ПроведениеСоревнованияКомандыПоЖеребьевке.РежимТура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втОбщиеДанные.Ссылка,
	|	втОбщиеДанные.НомерСтроки,
	|	втОбщиеДанные.НомерТура КАК НомерТура,
	|	втОбщиеДанные.РежимТура,
	|	втОбщиеДанные.Команда1,
	|	втОбщиеДанные.Участник1,
	|	втОбщиеДанные.Расстановка1,
	|	втОбщиеДанные.Команда2,
	|	втОбщиеДанные.Участник2,
	|	втОбщиеДанные.Расстановка2,
	|	втОбщиеДанные.НомерГруппы КАК НомерГруппы,
	|	втОбщиеДанные.НомерСета КАК НомерСета,
	|	втОбщиеДанные.КолШаров,
	|	втОбщиеДанные.ОчкиВыигравшего,
	|	втОбщиеДанные.ОчкиПроигравшего,
	|	втОбщиеДанные.ТехническоеВ,
	|	втОбщиеДанные.ТехническоеП,
	|	0 КАК ПорядковыйНомерИгры,
	|	0 КАК НомерКоманды1,
	|	0 КАК НомерКоманды2
	|ИЗ
	|	втОбщиеДанные КАК втОбщиеДанные
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерТура,
	|	НомерГруппы,
	|	НомерСета";
	Запрос.УстановитьПараметр("Ссылка",ДокСсылка);
	Результат = Запрос.Выполнить().Выгрузить();
	Запрос.Текст = "ВЫБРАТЬ * ИЗ втТаблицаГруппПоКомандам КАК втТаблицаГруппПоКомандам";
	втТаблицаГруппПоКомандам = Запрос.Выполнить().Выгрузить();
	Запрос.Текст = "ВЫБРАТЬ * ИЗ втОбщиеСыгранныеИгры КАК втОбщиеСыгранныеИгры";
	втОбщиеСыгранныеИгры = Запрос.Выполнить().Выгрузить();
	
	Для Каждого ТекТур Из ДокСсылка.ХодСоревнованияКоманды Цикл
		ТаблицаПорядкаИгрЖеребьевки = ТекТур.Жеребьевка.ПорядокВстреч.Выгрузить();
		ТаблицаПорядкаИгрЖеребьевки.Сортировать("НомерСтроки ВОЗВ");
		
		ТаблицаКомандПоТуру = втТаблицаГруппПоКомандам.Скопировать(Новый Структура("НомерТура",ТекТур.НомерСтроки));
		Для каждого ТекГруппаВывода Из ТаблицаКомандПоТуру Цикл
			Отбор = Новый Структура;
			Отбор.Вставить("НомерТура",ТекГруппаВывода.НомерТура);
			Отбор.Вставить("РежимТура",ТекГруппаВывода.РежимТура);
			Если ТекГруппаВывода.РежимТура = Перечисления.РежимыТуровСоревнования.Групповой Тогда
				Отбор.Вставить("НомерГруппы",ТекГруппаВывода.НомерГруппы);
			КонецЕсли; 
			//копируем по отбору общие данные
			ОбщиеДанные = Результат.Скопировать(Отбор);
			Если ТекГруппаВывода.РежимТура = Перечисления.РежимыТуровСоревнования.Групповой Тогда
				//получаем номера туров по количеству участников
				ТаблицаИгрТура = ПолучитьТаблицуИгрТура(ТекГруппаВывода.КоличествоУчастников);
				//формируем порядковые номера команд, как в базе
				КомандыПоПорядку = ДокСсылка.КомандыПоЖеребьевке.Выгрузить(Отбор);
				КомандыПоПорядку.Сортировать("НомерСтроки ВОЗР");
				КомандыПоПорядку.Колонки.Добавить("НомерПоПорядку");
				Сч = 1;
				Для каждого ТекСтр Из КомандыПоПорядку Цикл
					ТекСтр.НомерПоПорядку = Сч;
					Сч = Сч + 1;
				КонецЦикла;
				//теперь проставим в общем списке все добавленные поля
				Для каждого ТекСтр Из ОбщиеДанные Цикл
					ИскомыйНомер1 = КомандыПоПорядку.Найти(ТекСтр.Команда1,"НазваниеКоманды");
					Если ИскомыйНомер1 <> Неопределено Тогда
						ТекСтр.НомерКоманды1 = ИскомыйНомер1.НомерПоПорядку;
					КонецЕсли; 
					ИскомыйНомер2 = КомандыПоПорядку.Найти(ТекСтр.Команда2,"НазваниеКоманды");
					Если ИскомыйНомер2 <> Неопределено Тогда
						ТекСтр.НомерКоманды2 = ИскомыйНомер2.НомерПоПорядку;
					КонецЕсли;
					ОтборДляИгры = Новый Структура;
					ОтборДляИгры.Вставить("Первый",ТекСтр.НомерКоманды1);
					ОтборДляИгры.Вставить("Второй",ТекСтр.НомерКоманды2);
					МассивСтроки = ТаблицаИгрТура.НайтиСтроки(ОтборДляИгры);
					Если МассивСтроки.Количество() > 0 Тогда
						ТекСтр.ПорядковыйНомерИгры = МассивСтроки[0].НомерТура;
					Иначе //пробуем найти по другому
						ОтборДляИгры = Новый Структура;
						ОтборДляИгры.Вставить("Первый",ТекСтр.НомерКоманды2);
						ОтборДляИгры.Вставить("Второй",ТекСтр.НомерКоманды1);
						МассивСтроки = ТаблицаИгрТура.НайтиСтроки(ОтборДляИгры);
						Если МассивСтроки.Количество() > 0 Тогда
							ТекСтр.ПорядковыйНомерИгры = МассивСтроки[0].НомерТура;
						КонецЕсли; 
					КонецЕсли; 
				КонецЦикла;
			КонецЕсли;
			ОбщиеДанные.Сортировать("ПорядковыйНомерИгры ВОЗР,НомерСета ВОЗР");
			втМассивОбластей = Новый Массив;
			Если ОбщиеДанные.Количество() > 0 Тогда
				ОбластьПробел = Макет.ПолучитьОбласть("Пробел");
				ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
				ОбластьЗаголовок.Параметры.НазваниеСоревнования = ДокСсылка.НазваниеСоревнования;
				Если ТекГруппаВывода.РежимТура = Перечисления.РежимыТуровСоревнования.Групповой Тогда
					ОбластьЗаголовок.Параметры.ДопИнформация = ДокСсылка.ДопИнф+" "+ТекТур.НомерСтроки+" тур, Группа № "+ТекГруппаВывода.НомерГруппы;
				Иначе
					ОбластьЗаголовок.Параметры.ДопИнформация = ДокСсылка.ДопИнф+" "+ТекТур.НомерСтроки+" тур";
				КонецЕсли;
				ТабДок.Вывести(ОбластьЗаголовок);
				ТабДок.Вывести(ОбластьПробел);
				СчИгрДляГрупп = 1;
				втОбщиеСыгранныеИгрыПоГруппе = втОбщиеСыгранныеИгры.Скопировать(Отбор); 
				
				Для Каждого ТекСтрИгр Из втОбщиеСыгранныеИгрыПоГруппе Цикл //вывод табличек игр
					глВсегоПартийДляПобеды = ОбщийКлиентСервер.ОпределитьКолПартий(ТекТур.КолПартий);
					ШапкаОбластиТаблицы = Макет.ПолучитьОбласть("ШапкаПротокола"+ТекТур.КолПартий);
					ИтогиОбластиТаблицы	 = Макет.ПолучитьОбласть("ОбластьИтоговТаблицы"+ТекТур.КолПартий);
					//выводим шапку
					ШапкаОбластиТаблицы.Параметры.Команда1 = ТекСтрИгр.Команда1;
					ШапкаОбластиТаблицы.Параметры.Команда2 = ТекСтрИгр.Команда2;
					Если ТекТур.РежимТура = Перечисления.РежимыТуровСоревнования.Групповой Тогда
						ШапкаОбластиТаблицы.Параметры.ИграНомер = "Игра № "+СчИгрДляГрупп;
						СчИгрДляГрупп = СчИгрДляГрупп + 1;
					Иначе
						ШапкаОбластиТаблицы.Параметры.ИграНомер = "Игра № "+ТекСтрИгр.НомерГруппы;					
					КонецЕсли; 
					втМассивОбластей.Добавить(ШапкаОбластиТаблицы);
					Отбор = Новый Структура;
					Отбор.Вставить("НомерТура",ТекСтрИгр.НомерТура);
					Отбор.Вставить("РежимТура",ТекСтрИгр.РежимТура);
					Отбор.Вставить("Команда1",ТекСтрИгр.Команда1);
					Отбор.Вставить("Команда2",ТекСтрИгр.Команда2);
					Отбор.Вставить("НомерГруппы",ТекСтрИгр.НомерГруппы);
					ТЗСтрокИгр = ОбщиеДанные.Скопировать(Отбор);
					//будем выводить по порядку игр, так как они заполнены в справочнике
					КомандныйСчет1 = 0;
					КомандныйСчет2 = 0;
					Для Каждого ТекНомерИгры Из ТаблицаПорядкаИгрЖеребьевки Цикл
						ОтборДляИгры = Новый Структура;
						ОтборДляИгры.Вставить("Расстановка1",ТекНомерИгры.ВариантABC);
						ОтборДляИгры.Вставить("Расстановка2",ТекНомерИгры.ВариантXYZ);
						МассивИгр = ТЗСтрокИгр.Скопировать(ОтборДляИгры);
						Очки1 = 0;
						Очки2 = 0;
						СтрокаТаблицы = Макет.ПолучитьОбласть("СтрокаПротокола"+ТекТур.КолПартий);
						Если ТекНомерИгры.ВариантABC = Перечисления.ВариантыРасстановки.Пара И
							ТекНомерИгры.ВариантXYZ = Перечисления.ВариантыРасстановки.Пара Тогда
							УчастникиПар = МассивИгр.Скопировать(,"Участник1,Участник2");
							УчастникиПар.Свернуть("Участник1,Участник2");
							ИгрыПары = МассивИгр.Скопировать(,"КолШаров,НомерСета,ОчкиВыигравшего,ОчкиПроигравшего");
							ИгрыПары.Свернуть("КолШаров,НомерСета,ОчкиВыигравшего,ОчкиПроигравшего");
							Если УчастникиПар.Количество() =2 Тогда
								ФИО1Пары = ""+УчастникиПар[0].Участник1 + "-"+УчастникиПар[1].Участник1;
								ФИО2Пары = ""+УчастникиПар[0].Участник2 + "-"+УчастникиПар[1].Участник2;
							Иначе //вообще такого быть не должно
								ФИО1Пары = "";
								ФИО2Пары = "";
							КонецЕсли; 
							Для Каждого ТекПартия Из ИгрыПары Цикл
								СтрокаТаблицы.Параметры.Расстановка1	= Перечисления.ВариантыРасстановки.Пара;
								СтрокаТаблицы.Параметры.ФИО1					= ФИО1Пары;
								СтрокаТаблицы.Параметры.Расстановка2	= Перечисления.ВариантыРасстановки.Пара;
								СтрокаТаблицы.Параметры.ФИО2					= ФИО2Пары;
								Если ИгрыПары.Количество() > 1 Тогда //запись по очкам
									Если ТекПартия.ОчкиВыигравшего > 0 Тогда //участник1, левая колонка
										Очки1 = Очки1 + 1;	
										парКолОчков = Строка(ТекПартия.КолШаров);
									Иначе
										Очки2 = Очки2 + 1;
										парКолОчков = Строка(ТекПартия.КолШаров);
									КонецЕсли; 
									СтрокаТаблицы.Параметры["Сч"+ТекПартия.НомерСета] = парКолОчков;
								Иначе //запись по партиям
									Очки1 = ТекПартия.ОчкиВыигравшего;
									Очки2 = ТекПартия.ОчкиПроигравшего;
								КонецЕсли; 
							КонецЦикла;
							Если Очки1 = глВсегоПартийДляПобеды Или Очки2 = глВсегоПартийДляПобеды Тогда
								Если Очки1 > Очки2 Тогда
									КомандныйСчет1 = КомандныйСчет1 + 1;
									ПромежуточныйКомандный = "1 - 0";
								Иначе
									КомандныйСчет2 = КомандныйСчет2 + 1;
									ПромежуточныйКомандный = "0 - 1";
								КонецЕсли; 
							КонецЕсли;
						Иначе
							Для Каждого ТекПартия Из МассивИгр Цикл
								СтрокаТаблицы.Параметры.Расстановка1	= ТекПартия.Расстановка1;
								СтрокаТаблицы.Параметры.ФИО1					= ТекПартия.Участник1;
								СтрокаТаблицы.Параметры.Расстановка2	= ТекПартия.Расстановка2;
								СтрокаТаблицы.Параметры.ФИО2					= ТекПартия.Участник2;
								Если МассивИгр.Количество() > 1 Тогда //запись по очкам
									Если ТекПартия.ОчкиВыигравшего > 0 Тогда //участник1, левая колонка
										Очки1 = Очки1 + 1;	
										парКолОчков = Строка(ТекПартия.КолШаров);
									Иначе
										Очки2 = Очки2 + 1;
										парКолОчков = Строка(ТекПартия.КолШаров);
									КонецЕсли; 
									СтрокаТаблицы.Параметры["Сч"+ТекПартия.НомерСета] = парКолОчков;
								Иначе //запись по партиям
									Очки1 = ТекПартия.ОчкиВыигравшего;
									Очки2 = ТекПартия.ОчкиПроигравшего;
								КонецЕсли; 
							КонецЦикла;
							Если Очки1 = глВсегоПартийДляПобеды Или Очки2 = глВсегоПартийДляПобеды Тогда
								Если Очки1 > Очки2 Тогда
									КомандныйСчет1 = КомандныйСчет1 + 1;
									ПромежуточныйКомандный = "1 - 0";
								Иначе
									КомандныйСчет2 = КомандныйСчет2 + 1;
									ПромежуточныйКомандный = "0 - 1";
								КонецЕсли; 
							КонецЕсли; 
						КонецЕсли;
						Если МассивИгр.Количество() > 0 Тогда
							СтрокаТаблицы.Параметры.ОбщийСчет = ""+ Очки1 + " - "+ Очки2;
							СтрокаТаблицы.Параметры.КомандныйСчет = ПромежуточныйКомандный;
							//ТабДок.Вывести(СтрокаТаблицы);
							втМассивОбластей.Добавить(СтрокаТаблицы);
						КонецЕсли; 
					КонецЦикла;
					ИтогиОбластиТаблицы.Параметры.ОбщийИтог = ""+КомандныйСчет1 + " - " + КомандныйСчет2;
					Если КомандныйСчет1 > КомандныйСчет2 Тогда
						ИтогиОбластиТаблицы.Параметры.КомандаПобедитель = ТекСтрИгр.Команда1;
					Иначе
						ИтогиОбластиТаблицы.Параметры.КомандаПобедитель = ТекСтрИгр.Команда2;
					КонецЕсли; 
					//ТабДок.Вывести(ИтогиОбластиТаблицы);
					втМассивОбластей.Добавить(ИтогиОбластиТаблицы);
					Если Не ТабДок.ПроверитьВывод(втМассивОбластей) Тогда
						ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
					КонецЕсли;
					
					Для каждого ТекОбласть Из втМассивОбластей Цикл ТабДок.Вывести(ТекОбласть);	КонецЦикла; 
					
					ТабДок.Вывести(ОбластьПробел);
					
					втМассивОбластей.Очистить();
				КонецЦикла;				
			КонецЕсли;
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЦикла;
	КонецЦикла;
		
	Запрос.МенеджерВременныхТаблиц.Закрыть();
	
	Возврат ТабДок;
	
КонецФункции

Функция ФормированиеТаблицГруппКоманд(ТекСтр,СИграми = Ложь,ДокОбъект) Экспорт
	
	НомерТура = ТекСтр.НомерСтроки;
	мОбщаяТаблицаПоТуру = ДокОбъект.ОбщаяТаблицаДанныхПоКомандам.Выгрузить(Новый Структура("НомерТура",НомерТура));
	глТабДок 	= Новый ТабличныйДокумент;
	КоличествоГруппПоТуру = ОпределитьКоличествоГрупп(ДокОбъект.КомандыПоЖеребьевке.Выгрузить(),НомерТура,Перечисления.РежимыТуровСоревнования.Групповой);
	Макет  = Документы.ПроведениеСоревнования.ПолучитьМакет("ТаблицаГрупп");
	мДопИнфа = "от "+Формат(ДокОбъект.Дата,"ДЛФ=DD")+" "+ТекСтр.Комментарий+" "+ДокОбъект.ДопИнф;
	ОбластьЗаголовокТабДока = ПолучитьОбластьЗаголовка(ДокОбъект.НазваниеСоревнования,мДопИнфа);
	глТабДок.Вывести(ОбластьЗаголовокТабДока);
	
	Для Н = 1 По КоличествоГруппПоТуру Цикл
		ТабДок 		= Новый ТабличныйДокумент;
		Если СИграми Тогда
			ДанныеПоМестамУчастников = Новый ТаблицаЗначений;
			ДанныеПоМестамУчастников.Колонки.Добавить("РеквизитУчастник"+Н,Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(200)));
			ДанныеПоМестамУчастников.Колонки.Добавить("РеквизитОчки"+Н,Новый ОписаниеТипов("Число"));
			ДанныеПоМестамУчастников.Колонки.Добавить("РеквизитМесто"+Н,Новый ОписаниеТипов("Число"));
			ДанныеПоМестамУчастников.Колонки.Добавить("Соотношение"+Н,Новый ОписаниеТипов("Строка"));
		КонецЕсли;
		//заголовок группы
		ОбластьЗаголовок = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
		ОбластьЗаголовок.Параметры.НазваниеГруппы = "Группа №"+Н;
		ТабДок.Вывести(ОбластьЗаголовок);
		//шапка таблицы
		ОбластьШапка = Макет.ПолучитьОбласть("ШапкаТаблицы | ВертикальШапка");
		ОбластьШапка.Параметры.ФИО = "Команда";
		ТабДок.Вывести(ОбластьШапка);
		КоличествоУчастников = ДокОбъект.КомандыПоЖеребьевке.НайтиСтроки(Новый Структура("НомерГруппы,НомерТура,РежимТура",Н,НомерТура,Перечисления.РежимыТуровСоревнования.Групповой));
		ОбластьШапкиКолонки = Макет.ПолучитьОбласть("ШапкаТаблицы | ВертикальКолонка");
		Ном = 1;
		Для К = 0 По КоличествоУчастников.ВГраница() Цикл
			ОбластьШапкиКолонки.Параметры.НомерКолонки = Ном;
			ТабДок.Присоединить(ОбластьШапкиКолонки);
			Ном = Ном + 1;
		КонецЦикла;
		//и еще добавим 3 колонки очки,мячи,место
		ОбластьШапкиКолонки.Параметры.НомерКолонки = "Очки";
		ТабДок.Присоединить(ОбластьШапкиКолонки);
		ОбластьШапкиКолонки.Параметры.НомерКолонки = "Соотн.";
		ТабДок.Присоединить(ОбластьШапкиКолонки);
		ОбластьШапкиКолонки.Параметры.НомерКолонки = "Место";
		ТабДок.Присоединить(ОбластьШапкиКолонки);
		//начинаем выводить строки таблицы
		ОбластьСтроки 	     = Макет.ПолучитьОбласть("СтрокаТаблицы | ВертикальШапка");
		ОбластьКолонкиСтроки = Макет.ПолучитьОбласть("СтрокаТаблицы | ВертикальКолонка");
		ЗакрашеннаяОбласть = Макет.ПолучитьОбласть("СтрокаТаблицы|Закрашенная");
		ОбластьДляОчков = Макет.ПолучитьОбласть("СтрокаТаблицы|ПоОчкам");
		Ном = 1;
		//заполним таблицу с местами
		Если СИграми Тогда
			Для Мест = 0 По КоличествоУчастников.ВГраница() Цикл
				НовСтрокаДанных = ДанныеПоМестамУчастников.Добавить();
				НовСтрокаДанных["РеквизитУчастник"+Н] = КоличествоУчастников[Мест].НазваниеКоманды; 
				ТекНомер = 1;
				ВсегоОчков = 0;
				Для Каждого ТекУч Из КоличествоУчастников Цикл
					ДанныеДляОтбора = Новый Структура;
					ДанныеДляОтбора.Вставить("Первый",КоличествоУчастников[Мест].НазваниеКоманды);
					ДанныеДляОтбора.Вставить("Второй",КоличествоУчастников[ТекНомер-1].НазваниеКоманды);
					ДанныеДляОтбора.Вставить("НомерТура",НомерТура);
					ДанныеДляОтбора.Вставить("НомерГруппы",Н);
					РезультатИгры =  ПоискРезультатИгрыДляГрупповогоЭтапаКоманды(ДанныеДляОтбора,мОбщаяТаблицаПоТуру);
					
					Если РезультатИгры <> "" Тогда
						ВсегоОчков = ВсегоОчков + Число(РезультатИгры);
					КонецЕсли;
					ТекНомер = ТекНомер + 1;
				КонецЦикла;
				НовСтрокаДанных["РеквизитОчки"+Н] = ВсегоОчков;
			КонецЦикла;
			РасчетМестНаСервереКоманды(ДанныеПоМестамУчастников,мОбщаяТаблицаПоТуру,НомерТура,Н); 
		КонецЕсли;
				
		Для К = 0 По КоличествоУчастников.ВГраница() Цикл
			ОбластьСтроки.Параметры.НомерПоПорядку = Ном;
			ОбластьСтроки.Параметры.Участник	   = КоличествоУчастников[К].НазваниеКоманды;
			ТабДок.Вывести(ОбластьСтроки);
			//теперь добьем строку клетками для записей партий
			ТекНомер = 1;
			ВсегоОчков = 0;
			Для Каждого ТекУч Из КоличествоУчастников Цикл
				Если ТекНомер = Ном Тогда
					//ОбластьКолонкиСтроки.Параметры.ЗначениеКолонки = "Х";
					//ОбластьКолонкиСтроки.ТекущаяОбласть.ЦветФона = WebЦвета.ТемноСерый;
					ТабДок.Присоединить(ЗакрашеннаяОбласть);
				Иначе
					Если СИграми Тогда
						ДанныеДляОтбора = Новый Структура;
						ДанныеДляОтбора.Вставить("Первый",КоличествоУчастников[К].НазваниеКоманды);
						ДанныеДляОтбора.Вставить("Второй",КоличествоУчастников[ТекНомер-1].НазваниеКоманды);
						ДанныеДляОтбора.Вставить("НомерТура",НомерТура);
						ДанныеДляОтбора.Вставить("НомерГруппы",Н);
						РезультатИгры =  ПоискРезультатИгрыДляГрупповогоЭтапаКоманды(ДанныеДляОтбора,мОбщаяТаблицаПоТуру);
						Если РезультатИгры = "" Тогда
							ОбластьКолонкиСтроки.Параметры.ЗначениеКолонки = "";
							ОбластьДляВывода = ОбластьКолонкиСтроки;
						Иначе
							ПараметрыДетализации = ПолучитьДетализациюПоИгреКоманды(ДанныеДляОтбора,мОбщаяТаблицаПоТуру);
							Если ПараметрыДетализации <> Неопределено И ПараметрыДетализации <> "" Тогда
								Если РезультатИгры = "2" Тогда //выводим счет по очкам
									ОбластьДляОчков.Параметры.ЗначениеКолонки = РезультатИгры;
									ОбластьДляОчков.Параметры.СтрокаОчков = ""+ПараметрыДетализации.ОчкиВыигравшего+" : "+ПараметрыДетализации.ОчкиПроигравшего;	
								ИначеЕсли РезультатИгры = "1" Тогда  //выводим просто партии
									ОбластьДляОчков.Параметры.СтрокаОчков = ""+ПараметрыДетализации.ОчкиПроигравшего+" : "+ПараметрыДетализации.ОчкиВыигравшего;
									ОбластьДляОчков.Параметры.ЗначениеКолонки =РезультатИгры;
								КонецЕсли;
							КонецЕсли; 
							ВсегоОчков = ВсегоОчков + Число(РезультатИгры);
							ОбластьДляВывода = ОбластьДляОчков;
						КонецЕсли;
					Иначе
						ОбластьКолонкиСтроки.Параметры.ЗначениеКолонки = "";
						ОбластьДляВывода = ОбластьКолонкиСтроки;
					КонецЕсли;
					ТабДок.Присоединить(ОбластьДляВывода);
				КонецЕсли;
				ТекНомер = ТекНомер + 1;
			КонецЦикла;
			Ном = Ном + 1;
			Если СИграми Тогда
				//заполняем очки мячи и место
				ОбластьКолонкиСтроки.Параметры.ЗначениеКолонки = ВсегоОчков;
				ТабДок.Присоединить(ОбластьКолонкиСтроки);
				
				ДанныеПоУчастнику = ДанныеПоМестамУчастников.Найти(КоличествоУчастников[К].НазваниеКоманды);
				Если ДанныеПоУчастнику <> Неопределено Тогда
					WL =  ДанныеПоУчастнику["Соотношение"+Н];
				Иначе
					WL = "";
				КонецЕсли;
				ОбластьКолонкиСтроки.Параметры.ЗначениеКолонки = WL;
				ТабДок.Присоединить(ОбластьКолонкиСтроки);
				
				СтрокаСМестом = ДанныеПоУчастнику;//ДанныеПоМестамУчастников.Найти(КоличествоУчастников[К].Участник);
				Если СтрокаСМестом <> Неопределено Тогда
					МестоУчастника = СтрокаСМестом["РеквизитМесто"+Н];
				Иначе
					МестоУчастника = Неопределено;
				КонецЕсли;
				ОбластьКолонкиСтроки.Параметры.ЗначениеКолонки = МестоУчастника;
				ТабДок.Присоединить(ОбластьКолонкиСтроки);
			Иначе
				//3 пустышки
				Для а = 1 По 3 Цикл
					ОбластьКолонкиСтроки.Параметры.ЗначениеКолонки = "";
					ТабДок.Присоединить(ОбластьКолонкиСтроки);
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;
		Если Не глТабДок.ПроверитьВывод(ТабДок) Тогда
			глТабДок.ВывестиГоризонтальныйРазделительСтраниц();	
		КонецЕсли;
		Если К <>  КоличествоУчастников.Количество() Тогда
			ОбластьПробела = Макет.ПолучитьОбласть("ПробелМеждуТаблиц");
			ТабДок.Вывести(ОбластьПробела);
		КонецЕсли;
		глТабДок.Вывести(ТабДок);
	КонецЦикла;
	
	Подвал = Макет.ПолучитьОбласть("Подвал");
	Если ЗначениеЗаполнено(ДокОбъект.ГлавныйСудья) Тогда
		Подвал.Параметры.глСудья =  ОбщийКлиентСервер.СформироватьИмяИгрока(ДокОбъект.ГлавныйСудья);
	КонецЕсли;
	Если ЗначениеЗаполнено(ДокОбъект.Секретарь) Тогда
		Подвал.Параметры.Секретарь =  ОбщийКлиентСервер.СформироватьИмяИгрока(ДокОбъект.Секретарь);
	КонецЕсли;
	
	глТабДок.Вывести(Подвал);
	Возврат глТабДок;
	
КонецФункции

Функция ПоискРезультатИгрыДляГрупповогоЭтапаКоманды(Данные,ОбщиеДанные) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = "ВЫБРАТЬ * ПОМЕСТИТЬ втТЗ ИЗ &Внеш КАК Внеш";
	Запрос.УстановитьПараметр("Внеш",ОбщиеДанные);
	Запрос.Выполнить();
	
	Запрос.Текст = "ВЫБРАТЬ
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.НомерТура,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Команда1,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Участник1,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Расстановка1,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Команда2,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Участник2,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Расстановка2,
	|	СУММА(ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.ОчкиВыигравшего) КАК ОчкиВыигравшего,
	|	СУММА(ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.ОчкиПроигравшего) КАК ОчкиПроигравшего
	|ПОМЕСТИТЬ втТаблицаОбщихДанных
	|ИЗ
	|	втТЗ КАК ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам
	|ГДЕ
	|	(ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.ОчкиВыигравшего > 0
	|			ИЛИ ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.ОчкиПроигравшего > 0)
	|	И ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Команда1 = &Команда1
	|	И ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Команда2 = &Команда2
	|	И ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.НомерТура = &НомерТура
	|	И ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.НомерГруппы = &НомерГруппы
	|
	|СГРУППИРОВАТЬ ПО
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.НомерТура,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Команда1,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Участник1,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Расстановка1,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Команда2,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Участник2,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Расстановка2
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.НомерТура,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Команда1,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Участник1,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Расстановка1,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Команда2,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Участник2,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Расстановка2,
	|	СУММА(ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.ОчкиВыигравшего),
	|	СУММА(ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.ОчкиПроигравшего)
	|ИЗ
	|	втТЗ КАК ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам
	|ГДЕ
	|	(ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.ОчкиВыигравшего > 0
	|			ИЛИ ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.ОчкиПроигравшего > 0)
	|	И ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Команда1 = &Команда2
	|	И ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Команда2 = &Команда1
	|	И ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.НомерТура = &НомерТура
	|	И ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.НомерГруппы = &НомерГруппы
	|
	|СГРУППИРОВАТЬ ПО
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.НомерТура,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Команда1,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Участник1,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Расстановка1,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Команда2,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Участник2,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Расстановка2
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втТаблицаОбщихДанных.НомерТура,
	|	втТаблицаОбщихДанных.Команда1,
	|	втТаблицаОбщихДанных.Участник1,
	|	втТаблицаОбщихДанных.Расстановка1,
	|	втТаблицаОбщихДанных.Команда2,
	|	втТаблицаОбщихДанных.Участник2,
	|	втТаблицаОбщихДанных.Расстановка2,
	|	втТаблицаОбщихДанных.ОчкиВыигравшего,
	|	втТаблицаОбщихДанных.ОчкиПроигравшего,
	|	ВЫБОР
	|		КОГДА втТаблицаОбщихДанных.ОчкиВыигравшего > втТаблицаОбщихДанных.ОчкиПроигравшего
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ИтогВ,
	|	ВЫБОР
	|		КОГДА втТаблицаОбщихДанных.ОчкиПроигравшего > втТаблицаОбщихДанных.ОчкиВыигравшего
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ИтогП
	|ПОМЕСТИТЬ втСИтогами
	|ИЗ
	|	втТаблицаОбщихДанных КАК втТаблицаОбщихДанных
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втСИтогами.НомерТура,
	|	втСИтогами.Команда1,
	|	втСИтогами.Команда2,
	|	СУММА(втСИтогами.ИтогВ) КАК ИтогВ,
	|	СУММА(втСИтогами.ИтогП) КАК ИтогП
	|ИЗ
	|	втСИтогами КАК втСИтогами
	|
	|СГРУППИРОВАТЬ ПО
	|	втСИтогами.НомерТура,
	|	втСИтогами.Команда1,
	|	втСИтогами.Команда2";
	
	//делаем объдинение в запросе сразу, так как может быть только один вариант и он сразу будет в результате
	Запрос.УстановитьПараметр("НомерТура",Данные.НомерТура);
	Запрос.УстановитьПараметр("Команда1",Данные.Первый);
	Запрос.УстановитьПараметр("Команда2",Данные.Второй);
	Запрос.УстановитьПараметр("НомерГруппы",Данные.НомерГруппы);
	Результат = Запрос.Выполнить().Выгрузить();
	
	Если Результат.Количество() > 0 Тогда
		СтрокаТаблицы = Результат[0];
		//итогВ это относится к первой команде,
		Если СтрокаТаблицы.Команда1 = Данные.Первый Тогда //смотрим, какой счет у него
			Если СтрокаТаблицы.ИтогВ > СтрокаТаблицы.ИтогП Тогда
				Возврат "2";
			Иначе
				Возврат "1";
			КонецЕсли; 
		Иначе
			//смотрим по второй команде
			Если СтрокаТаблицы.ИтогП > СтрокаТаблицы.ИтогВ Тогда
				Возврат "2";
			Иначе
				Возврат "1";
			КонецЕсли; 
		КонецЕсли; 
		//Если СтрокаТаблицы.ИтогВ > СтрокаТаблицы.ИтогП И СтрокаТаблицы.Команда1 = Данные.Первый Тогда
		//	Возврат "2"; //выиграл
		//Иначе
		//	Возврат "1"; //проиграл
		//КонецЕсли;
	Иначе
		Возврат "";
	КонецЕсли;
	
КонецФункции

Функция ПолучитьДетализациюПоИгреКоманды(Данные,ОбщиеДанные)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = "ВЫБРАТЬ * ПОМЕСТИТЬ втТЗ ИЗ &Внеш КАК Внеш";
	Запрос.УстановитьПараметр("Внеш",ОбщиеДанные);
	Запрос.Выполнить();
	
	Запрос.Текст = "ВЫБРАТЬ
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.НомерТура,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Команда1,
	|	ЗНАЧЕНИЕ(Справочник.Участники.ПустаяСсылка) КАК Поле1,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Расстановка1,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Команда2,
	|	ЗНАЧЕНИЕ(Справочник.Участники.ПустаяСсылка) КАК Поле2,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Расстановка2,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.ОчкиВыигравшего,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.ОчкиПроигравшего,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.ТехническоеВ,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.ТехническоеП,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.НомерСета
	|ПОМЕСТИТЬ втПары
	|ИЗ
	|	втТЗ КАК ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам
	|ГДЕ
	|	(ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.ОчкиВыигравшего > 0
	|			ИЛИ ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.ОчкиПроигравшего > 0)
	|	И ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Команда1 = &Команда1
	|	И ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Команда2 = &Команда2
	|	И ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.НомерТура = &НомерТура
	|	И ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.НомерГруппы = &НомерГруппы
	|	И ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Расстановка1 = ЗНАЧЕНИЕ(Перечисление.ВариантыРасстановки.Пара)
	|	И ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Расстановка2 = ЗНАЧЕНИЕ(Перечисление.ВариантыРасстановки.Пара)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Команда1,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Расстановка1,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Команда2,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Расстановка2,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.ТехническоеВ,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.ТехническоеП,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.НомерТура,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.ОчкиВыигравшего,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.ОчкиПроигравшего,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.НомерСета
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.НомерТура,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Команда1,
	|	ЗНАЧЕНИЕ(Справочник.Участники.ПустаяСсылка),
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Расстановка1,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Команда2,
	|	ЗНАЧЕНИЕ(Справочник.Участники.ПустаяСсылка),
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Расстановка2,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.ОчкиВыигравшего,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.ОчкиПроигравшего,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.ТехническоеВ,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.ТехническоеП,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.НомерСета
	|ИЗ
	|	втТЗ КАК ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам
	|ГДЕ
	|	(ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.ОчкиВыигравшего > 0
	|			ИЛИ ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.ОчкиПроигравшего > 0)
	|	И ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Команда1 = &Команда2
	|	И ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Команда2 = &Команда1
	|	И ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.НомерТура = &НомерТура
	|	И ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.НомерГруппы = &НомерГруппы
	|	И ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Расстановка1 = ЗНАЧЕНИЕ(Перечисление.ВариантыРасстановки.Пара)
	|	И ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Расстановка2 = ЗНАЧЕНИЕ(Перечисление.ВариантыРасстановки.Пара)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Команда1,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Расстановка1,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Команда2,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Расстановка2,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.ТехническоеВ,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.ТехническоеП,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.НомерТура,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.ОчкиВыигравшего,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.ОчкиПроигравшего,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.НомерСета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втПары.НомерТура,
	|	втПары.Команда1,
	|	втПары.Поле1,
	|	втПары.Расстановка1,
	|	втПары.Команда2,
	|	втПары.Поле2,
	|	втПары.Расстановка2,
	|	СУММА(втПары.ОчкиВыигравшего) КАК ОчкиВыигравшего,
	|	СУММА(втПары.ОчкиПроигравшего) КАК ОчкиПроигравшего,
	|	втПары.ТехническоеВ,
	|	втПары.ТехническоеП
	|ПОМЕСТИТЬ втПарыСуммы
	|ИЗ
	|	втПары КАК втПары
	|
	|СГРУППИРОВАТЬ ПО
	|	втПары.НомерТура,
	|	втПары.Команда1,
	|	втПары.Поле1,
	|	втПары.Расстановка1,
	|	втПары.Команда2,
	|	втПары.Поле2,
	|	втПары.Расстановка2,
	|	втПары.ТехническоеВ,
	|	втПары.ТехническоеП
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.НомерТура,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Команда1,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Участник1,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Расстановка1,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Команда2,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Участник2,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Расстановка2,
	|	СУММА(ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.ОчкиВыигравшего) КАК ОчкиВыигравшего,
	|	СУММА(ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.ОчкиПроигравшего) КАК ОчкиПроигравшего,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.ТехническоеВ,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.ТехническоеП
	|ПОМЕСТИТЬ втТаблицаОбщихДанных
	|ИЗ
	|	втТЗ КАК ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам
	|ГДЕ
	|	(ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.ОчкиВыигравшего > 0
	|			ИЛИ ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.ОчкиПроигравшего > 0)
	|	И ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Команда1 = &Команда1
	|	И ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Команда2 = &Команда2
	|	И ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.НомерТура = &НомерТура
	|	И ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.НомерГруппы = &НомерГруппы
	|	И ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Расстановка1 <> ЗНАЧЕНИЕ(Перечисление.ВариантыРасстановки.Пара)
	|	И ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Расстановка2 <> ЗНАЧЕНИЕ(Перечисление.ВариантыРасстановки.Пара)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.НомерТура,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Команда1,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Участник1,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Расстановка1,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Команда2,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Участник2,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Расстановка2,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.ТехническоеВ,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.ТехническоеП
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.НомерТура,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Команда1,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Участник1,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Расстановка1,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Команда2,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Участник2,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Расстановка2,
	|	СУММА(ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.ОчкиВыигравшего),
	|	СУММА(ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.ОчкиПроигравшего),
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.ТехническоеВ,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.ТехническоеП
	|ИЗ
	|	втТЗ КАК ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам
	|ГДЕ
	|	(ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.ОчкиВыигравшего > 0
	|			ИЛИ ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.ОчкиПроигравшего > 0)
	|	И ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Команда1 = &Команда2
	|	И ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Команда2 = &Команда1
	|	И ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.НомерТура = &НомерТура
	|	И ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.НомерГруппы = &НомерГруппы
	|	И ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Расстановка1 <> ЗНАЧЕНИЕ(Перечисление.ВариантыРасстановки.Пара)
	|	И ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Расстановка2 <> ЗНАЧЕНИЕ(Перечисление.ВариантыРасстановки.Пара)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.НомерТура,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Команда1,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Участник1,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Расстановка1,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Команда2,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Участник2,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Расстановка2,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.ТехническоеП,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.ТехническоеВ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	втПарыСуммы.НомерТура,
	|	втПарыСуммы.Команда1,
	|	втПарыСуммы.Поле1,
	|	втПарыСуммы.Расстановка1,
	|	втПарыСуммы.Команда2,
	|	втПарыСуммы.Поле2,
	|	втПарыСуммы.Расстановка2,
	|	втПарыСуммы.ОчкиВыигравшего,
	|	втПарыСуммы.ОчкиПроигравшего,
	|	втПарыСуммы.ТехническоеВ,
	|	втПарыСуммы.ТехническоеП
	|ИЗ
	|	втПарыСуммы КАК втПарыСуммы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втТаблицаОбщихДанных.НомерТура,
	|	втТаблицаОбщихДанных.Команда1,
	|	втТаблицаОбщихДанных.Участник1,
	|	втТаблицаОбщихДанных.Расстановка1,
	|	втТаблицаОбщихДанных.Команда2,
	|	втТаблицаОбщихДанных.Участник2,
	|	втТаблицаОбщихДанных.Расстановка2,
	|	втТаблицаОбщихДанных.ОчкиВыигравшего,
	|	втТаблицаОбщихДанных.ОчкиПроигравшего,
	|	ВЫБОР
	|		КОГДА втТаблицаОбщихДанных.ОчкиВыигравшего > втТаблицаОбщихДанных.ОчкиПроигравшего
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ИтогВ,
	|	ВЫБОР
	|		КОГДА втТаблицаОбщихДанных.ОчкиПроигравшего > втТаблицаОбщихДанных.ОчкиВыигравшего
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ИтогП,
	|	втТаблицаОбщихДанных.ТехническоеВ,
	|	втТаблицаОбщихДанных.ТехническоеП
	|ПОМЕСТИТЬ втСИтогами
	|ИЗ
	|	втТаблицаОбщихДанных КАК втТаблицаОбщихДанных
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втСИтогами.НомерТура,
	|	втСИтогами.Команда1,
	|	втСИтогами.Команда2,
	|	СУММА(втСИтогами.ИтогВ) КАК ИтогВ,
	|	СУММА(втСИтогами.ИтогП) КАК ИтогП
	|ИЗ
	|	втСИтогами КАК втСИтогами
	|
	|СГРУППИРОВАТЬ ПО
	|	втСИтогами.НомерТура,
	|	втСИтогами.Команда1,
	|	втСИтогами.Команда2";
	
	//делаем объдинение в запросе сразу, так как может быть только один вариант и он сразу будет в результате
	Запрос.УстановитьПараметр("НомерТура",Данные.НомерТура);
	Запрос.УстановитьПараметр("Команда1",Данные.Первый);
	Запрос.УстановитьПараметр("Команда2",Данные.Второй);
	Запрос.УстановитьПараметр("НомерГруппы",Данные.НомерГруппы);
	Результат = Запрос.Выполнить().Выгрузить();
	
	Если Результат.Количество() > 0 Тогда
		СтрокаТаблицы = Результат[0];
		Если СтрокаТаблицы.ИтогВ = 0 И СтрокаТаблицы.ИтогП = 0 Тогда
			Возврат "";
		Иначе
			Данные = Новый Структура;
			Если СтрокаТаблицы.ИтогВ > СтрокаТаблицы.ИтогП Тогда
				Данные.Вставить("Выигравший",СтрокаТаблицы.Команда1);
				Данные.Вставить("Проигравший",СтрокаТаблицы.Команда2);
				Данные.Вставить("ОчкиВыигравшего",СтрокаТаблицы.ИтогВ);
				Данные.Вставить("ОчкиПроигравшего",СтрокаТаблицы.ИтогП);
				//Данные.Вставить("ТехническоеВ",СтрокаТаблицы.ТехническоеВ);
				//Данные.Вставить("ТехническоеП",СтрокаТаблицы.ТехническоеП);
			Иначе
				Данные.Вставить("Выигравший",СтрокаТаблицы.Команда2);
				Данные.Вставить("Проигравший",СтрокаТаблицы.Команда1);
				Данные.Вставить("ОчкиВыигравшего",СтрокаТаблицы.ИтогП);
				Данные.Вставить("ОчкиПроигравшего",СтрокаТаблицы.ИтогВ);
				//Данные.Вставить("ТехническоеВ",СтрокаТаблицы.ТехническоеВ);
				//Данные.Вставить("ТехническоеП",СтрокаТаблицы.ТехническоеП);
			КонецЕсли;
			Возврат Данные;
		КонецЕсли;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

//ТаблицаДанных - это ДанныеФормыКоллекция
Процедура РасчетМестНаСервереКоманды(ТаблицаДанных,ОбщаяТаблицаДокумента,НомерТура = Неопределено,НомГруппы = 1) Экспорт
	
	Если ТипЗнч(ТаблицаДанных) = Тип("ДанныеФормыКоллекция") Тогда
		ДляОбработки = ТаблицаДанных.Выгрузить();
	Иначе
		ДляОбработки = ТаблицаДанных.Скопировать();
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = "ВЫБРАТЬ * ПОМЕСТИТЬ ТЗ ИЗ &Внеш КАК Внеш";
	Запрос.УстановитьПараметр("Внеш",ДляОбработки);
	Запрос.Выполнить();
	
	Запрос.Текст = "ВЫБРАТЬ * ПОМЕСТИТЬ ТЗОбщая ИЗ &Внеш КАК Внеш";
	Запрос.УстановитьПараметр("Внеш",ОбщаяТаблицаДокумента);
	Запрос.Выполнить();
	//будем считать что, очки уже посчитаны нужно распределить только места игроков
	                                                                                      
	//сформируем текст запроса
	КолонкаОчков 		= Неопределено;
	КолонкаМесто 		= Неопределено;
	КолонкаУчастник 	= Неопределено;
	КолонкаСоотношение = Неопределено;
	//КолонкаНомерУчас= Неопределено;
	Текст = "ВЫБРАТЬ";
	Для Каждого ТекКолонка Из ДляОбработки.Колонки Цикл
		Текст = Текст + "
		| ТЗ."+ТекКолонка.Имя+" КАК "+ТекКолонка.Имя+",";
		//попутно будем искать колонку очки
		Если Найти(ТекКолонка.Имя,"Очки") > 0 Тогда //наша
			Если КолонкаОчков = Неопределено Тогда
				КолонкаОчков = ТекКолонка;
			КонецЕсли;
		КонецЕсли;
		Если Найти(ТекКолонка.Имя,"Место") > 0 Тогда //наша
			Если КолонкаМесто = Неопределено Тогда
				КолонкаМесто = ТекКолонка;
			КонецЕсли;
		КонецЕсли;
		Если Найти(ТекКолонка.Имя,"РеквизитУчастник") > 0 Тогда //наша
			Если КолонкаУчастник = Неопределено Тогда
				КолонкаУчастник = ТекКолонка;
			КонецЕсли;
		КонецЕсли;
		Если Найти(ТекКолонка.Имя,"Соотношение") > 0 Тогда //наша
			Если КолонкаСоотношение = Неопределено Тогда
				КолонкаСоотношение = ТекКолонка;
			КонецЕсли;
		КонецЕсли;
		//Если Найти(ТекКолонка.Имя,"НомерУчастника") > 0 Тогда //наша
		//	Если КолонкаНомерУчас = Неопределено Тогда
		//		КолонкаНомерУчас = ТекКолонка;
		//	КонецЕсли;
		//КонецЕсли;
	КонецЦикла;
	//удалим последнюю запятую
	Текст = Лев(Текст,СтрДлина(Текст)-1);
	Текст = Текст + "
	|ИЗ
	|	ТЗ КАК ТЗ
	|УПОРЯДОЧИТЬ ПО
	|	ТЗ."+КолонкаОчков.Имя+" УБЫВ";
	Запрос.Текст = Текст;
	Результат = Запрос.Выполнить().Выгрузить();
	Сч = 1;
	Для Каждого ТекЗнач Из Результат Цикл
		ТекЗнач[КолонкаМесто.Имя] = Сч;
		Искомый = ТаблицаДанных.НайтиСтроки(Новый Структура(КолонкаУчастник.Имя,ТекЗнач[КолонкаУчастник.Имя]));
		Если Искомый.Количество() > 0 Тогда
			Искомый[0][КолонкаМесто.Имя] = Сч;
		КонецЕсли;
		Сч = Сч + 1;
	КонецЦикла;
	
	//теперь есть таблица с приблизительными местами
	//необходимо проверить есть ли одинаковое количество очков у игроков
	
	//помещаем результат сразу в запрос для дальнейшего использования
	Запрос.Текст = "ВЫБРАТЬ * ПОМЕСТИТЬ ТЗ2 ИЗ &Внеш КАК Внеш";
	Запрос.УстановитьПараметр("Внеш",Результат);
	Запрос.Выполнить();
	
	Запрос.Текст = "ВЫБРАТЬ
	|	ТЗ."+КолонкаОчков.Имя+" КАК НомерОчков,
	|	КОЛИЧЕСТВО(ТЗ."+КолонкаОчков.Имя+") КАК КолОчков
	|ИЗ
	|	ТЗ КАК ТЗ
	|
	|СГРУППИРОВАТЬ ПО
	|	ТЗ."+КолонкаОчков.Имя+"
	|
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(ТЗ."+КолонкаОчков.Имя+") > 1
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТЗ."+КолонкаОчков.Имя+" УБЫВ";
	
	РезультатСпорных = Запрос.Выполнить().Выгрузить();
	Если РезультатСпорных.Количество() <> 0 Тогда //рассчитываем спорные
		Для Каждого ТекКолОчков Из РезультатСпорных Цикл
			КолОчковДляПоиска = ТекКолОчков.НомерОчков;
			Текст = "ВЫБРАТЬ
			|	ТЗ2."+КолонкаУчастник.Имя+" КАК Игрок,
			|	ТЗ2."+КолонкаОчков.Имя+"
			|ИЗ
			|	ТЗ2 КАК ТЗ2
			|ГДЕ
			|	ТЗ2."+КолонкаОчков.Имя+" = &НомерКолОчков";
			Запрос.УстановитьПараметр("НомерКолОчков",КолОчковДляПоиска);
			Запрос.Текст = Текст;
			СпорныеИгрокиМассив = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Игрок");
			ТаблицаВозврата = Новый ТаблицаЗначений;
			ТаблицаВозврата.Колонки.Добавить("Игрок");
			ТаблицаВозврата.Колонки.Добавить("ВыигранныеМячи");
			ТаблицаВозврата.Колонки.Добавить("ПроигранныеМячи");
			ТаблицаВозврата.Колонки.Добавить("Отношение",Новый ОписаниеТипов("Число",,,Новый КвалификаторыЧисла(15,3)));
			Если СпорныеИгрокиМассив.Количество() = 2 Тогда
				//если спорные только 2 игрока, тогда просто узнаем кто кого из них выиграл
				ДанныеДляОтбора = Новый Структура;
				ДанныеДляОтбора.Вставить("Первый",СпорныеИгрокиМассив[0]);
				ДанныеДляОтбора.Вставить("Второй",СпорныеИгрокиМассив[1]);
				ДанныеДляОтбора.Вставить("НомерТура",НомерТура);
				ДанныеДляОтбора.Вставить("НомерГруппы",НомГруппы);
				РезультатМеждуКомандами = ПолучитьДетализациюПоИгреКоманды(ДанныеДляОтбора,ОбщаяТаблицаДокумента);
				Если РезультатМеждуКомандами = Неопределено Тогда //нет данных по играм и скорей всего они не играли
				Иначе
					НовСтрока = ТаблицаВозврата.Добавить();
					НовСтрока.Игрок = РезультатМеждуКомандами.Выигравший;
					НовСтрока.Отношение = 1;
					НовСтрока = ТаблицаВозврата.Добавить();
					НовСтрока.Игрок = РезультатМеждуКомандами.Проигравший;
					НовСтрока.Отношение = 0;
				КонецЕсли; 
				//Отбор = Новый Структура;
				//Отбор.Вставить("НомерТура",НомерТура);
				//Отбор.Вставить("Выигравший",СпорныеИгрокиМассив[0]);
				//Отбор.Вставить("Проигравший",СпорныеИгрокиМассив[1]);
				//Отбор.Вставить("РежимТура",Перечисления.РежимыТуровСоревнования.Групповой);
				//МассивСтрок = ОбщаяТаблицаДокумента.НайтиСтроки(Отбор);
				
				//Если МассивСтрок.Количество() = 0 Тогда //Не нашли
				//	Отбор = Новый Структура;
				//	Отбор.Вставить("НомерТура",НомерТура);
				//	Отбор.Вставить("Выигравший",СпорныеИгрокиМассив[1]);
				//	Отбор.Вставить("Проигравший",СпорныеИгрокиМассив[0]);
				//	Отбор.Вставить("РежимТура",Перечисления.РежимыТуровСоревнования.Групповой);
				//	МассивСтрок = ОбщаяТаблицаДокумента.НайтиСтроки(Отбор);//здесь должны быть записи по любому
				//	Если МассивСтрок.Количество() > 0 Тогда
				//		НовСтрока = ТаблицаВозврата.Добавить();
				//		НовСтрока.Игрок = МассивСтрок[0].Выигравший;
				//		//НовСтрока.Отношение = 1;
				//		
				//		НовСтрока = ТаблицаВозврата.Добавить();
				//		НовСтрока.Игрок = МассивСтрок[0].Проигравший;
				//		//НовСтрока.Отношение = 0;
				//	КонецЕсли;
				//Иначе
				//	НовСтрока = ТаблицаВозврата.Добавить();
				//	НовСтрока.Игрок = МассивСтрок[0].Выигравший;
				//	//НовСтрока.Отношение = 1;
				//	
				//	НовСтрока = ТаблицаВозврата.Добавить();
				//	НовСтрока.Игрок = МассивСтрок[0].Проигравший;
				//	//НовСтрока.Отношение = 0;
				//КонецЕсли;
				
			Иначе
				//значит спорных игроков 3 или больше
				//сначала посчитаем между ними партии, если это не решит вопрос места,
				//будем считать проигранные и выигранные очки
				Для Каждого ТекУчастник Из СпорныеИгрокиМассив Цикл
					//находим соотношение каждого участника
					СтрокаРезультата = ОпределитьВыигранныеИПроигранныеПартииКоманды(ТекУчастник,СпорныеИгрокиМассив,ОбщаяТаблицаДокумента,НомерТура,НомГруппы);
					НовСтрока = ТаблицаВозврата.Добавить();
					ЗаполнитьЗначенияСвойств(НовСтрока,СтрокаРезультата);
				КонецЦикла;
				////проверим одинаковое отношение мало ли 
				КопияТаблицыВозврата = ТаблицаВозврата.Скопировать(,"Отношение");
				КопияТаблицыВозврата.Свернуть("Отношение");
				Если КопияТаблицыВозврата.Количество() = 1 Тогда //считаем по очкам
					//	//массив спорных мог измениться
					//	НовыеСпорныеИгроки = ТаблицаВозврата.Скопировать(Новый Структура("Отношение",КопияТаблицыВозврата[0].Отношение));
					//	СпорныеИгрокиМассив2 = НовыеСпорныеИгроки.ВыгрузитьКолонку("Игрок");
					//	Текст = "ВЫБРАТЬ
					//	|	*
					//	|ИЗ
					//	|	ТЗОбщая КАК ПроведениеСоревнованияОбщаяТаблицаДанных
					//	|ГДЕ
					//	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Выигравший В(&Игроки)
					//	|	И ПроведениеСоревнованияОбщаяТаблицаДанных.Проигравший В(&Игроки)
					//	|	И ПроведениеСоревнованияОбщаяТаблицаДанных.НомерТура = &НомТура
					//	|	И ПроведениеСоревнованияОбщаяТаблицаДанных.РежимТура = ЗНАЧЕНИЕ(Перечисление.РежимыТуровСоревнования.Групповой)";
					//	Запрос.Текст = Текст;
					//	Запрос.УстановитьПараметр("Игроки",СпорныеИгрокиМассив2);
					//	Запрос.УстановитьПараметр("НомТура",НомерТура);
					//	ТаблицаСпорныхИгроков = Запрос.Выполнить().Выгрузить();
					//	//очистим таблицу возврата
					//	ТаблицаВозврата.Очистить();
					//	Для Каждого ТекИгрок Из СпорныеИгрокиМассив Цикл
					//		РезультатОдногоИгрока = ОпределитьВыигранныеИПроигранныеОчки(ТекИгрок.Ссылка,ТаблицаСпорныхИгроков,НомерТура);
					//		Если РезультатОдногоИгрока <> Неопределено Тогда
					//			НовСтрока = ТаблицаВозврата.Добавить();
					//			ЗаполнитьЗначенияСвойств(НовСтрока,РезультатОдногоИгрока);
					//		КонецЕсли;
					//КонецЦикла;
				КонецЕсли;
			КонецЕсли;
			ТаблицаВозврата.Сортировать("Отношение УБЫВ");
			
			//дальше смотрим какие номера нужно поставить
			//ищем места которые нужно распределить
			Запрос.Текст = "ВЫБРАТЬ
			|	МИНИМУМ(ТЗ."+КолонкаМесто.Имя+") КАК МаксМесто
			|ИЗ
			|	ТЗ2 КАК ТЗ
			|ГДЕ
			|	ТЗ."+КолонкаУчастник.Имя+" В (&Игроки)";
			//|
			//|СГРУППИРОВАТЬ ПО
			//|	ТЗ."+КолонкаУчастник.Имя+"";
			Запрос.УстановитьПараметр("Игроки",СпорныеИгрокиМассив);
			МаксимальноеМесто = Запрос.Выполнить().Выгрузить();
			Если МаксимальноеМесто.Количество() > 0 Тогда
				перемМаксМесто = МаксимальноеМесто[0].МаксМесто;
			Иначе
				перемМаксМесто = 0;
			КонецЕсли;
			Для Каждого ТекСтр Из ТаблицаВозврата Цикл
				ИскомаяСтрока = Результат.Найти(ТекСтр.Игрок);
				Если ИскомаяСтрока <> Неопределено Тогда
					ИскомаяСтрока[КолонкаМесто.Имя] = перемМаксМесто;
					перемМаксМесто = перемМаксМесто + 1;
				КонецЕсли;
			КонецЦикла;
			//Результат.Сортировать(""+КолонкаНомерУчас.Имя + " ВОЗР");
		КонецЦикла;
		//проходим циклом и проставим места в данных формы
		//по другому никак так как сбиваются индексы		
		Для Каждого ТекЗнач Из Результат Цикл
			Искомый = ТаблицаДанных.НайтиСтроки(Новый Структура(КолонкаУчастник.Имя,ТекЗнач[КолонкаУчастник.Имя]));
			Если Искомый.Количество() > 0 Тогда
				Искомый[0][КолонкаМесто.Имя] = ТекЗнач[КолонкаМесто.Имя];
				//найдем в таблице возврата отношения участников
				ИскомоеОтношение = ТаблицаВозврата.Найти(ТекЗнач[КолонкаУчастник.Имя]);
				Если ИскомоеОтношение <> Неопределено и КолонкаСоотношение <> Неопределено Тогда
					 Искомый[0][КолонкаСоотношение.Имя] = ИскомоеОтношение.Отношение;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Функция ОпределитьВыигранныеИПроигранныеПартииКоманды(УчастникРасчета,СпорныеИгроки,ОбщаяТаблица,НомерТура,НомГруппы)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = "ВЫБРАТЬ * ПОМЕСТИТЬ втОбщаяТаблица Из &Внеш КАК Внеш";
	Запрос.УстановитьПараметр("Внеш",ОбщаяТаблица);
	Запрос.Выполнить();
	
	Запрос.УстановитьПараметр("НомерТура",НомерТура);
	Запрос.УстановитьПараметр("Команда1",УчастникРасчета);
	Запрос.УстановитьПараметр("СписокКоманд",СпорныеИгроки);
	Запрос.УстановитьПараметр("НомерГруппы",НомГруппы);
	
	Текст = "ВЫБРАТЬ
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.НомерТура,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Команда1,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Участник1,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Расстановка1,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Команда2,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Участник2,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Расстановка2,
	|	СУММА(ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.ОчкиВыигравшего) КАК ОчкиВыигравшего,
	|	СУММА(ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.ОчкиПроигравшего) КАК ОчкиПроигравшего,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.ТехническоеВ,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.ТехническоеП
	|ПОМЕСТИТЬ втТаблица
	|ИЗ
	|	втОбщаяТаблица КАК ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам
	|ГДЕ
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.НомерТура = &НомерТура
	|	И ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.НомерГруппы = &НомерГруппы
	|	И ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Команда1 = &Команда1
	|	И ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Команда2 В(&СписокКоманд)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.НомерТура,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Команда1,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Участник1,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Расстановка1,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Команда2,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Участник2,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Расстановка2,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.ТехническоеВ,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.ТехническоеП
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.НомерТура,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Команда1,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Участник1,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Расстановка1,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Команда2,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Участник2,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Расстановка2,
	|	СУММА(ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.ОчкиВыигравшего),
	|	СУММА(ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.ОчкиПроигравшего),
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.ТехническоеВ,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.ТехническоеП
	|ИЗ
	|	втОбщаяТаблица КАК ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам
	|ГДЕ
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.НомерТура = &НомерТура
	|	И ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.НомерГруппы = &НомерГруппы
	|	И ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Команда1 В(&СписокКоманд)
	|	И ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Команда2 = &Команда1
	|
	|СГРУППИРОВАТЬ ПО
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.НомерТура,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Команда1,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Участник1,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Расстановка1,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Команда2,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Участник2,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Расстановка2,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.ТехническоеВ,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.ТехническоеП
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втТаблица.НомерТура,
	|	втТаблица.Команда1,
	|	втТаблица.Участник1,
	|	втТаблица.Расстановка1,
	|	втТаблица.Команда2,
	|	втТаблица.Участник2,
	|	втТаблица.Расстановка2,
	|	втТаблица.ОчкиВыигравшего,
	|	втТаблица.ОчкиПроигравшего,
	|	ВЫБОР
	|		КОГДА втТаблица.ОчкиВыигравшего > втТаблица.ОчкиПроигравшего
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Итог1,
	|	ВЫБОР
	|		КОГДА втТаблица.ОчкиПроигравшего > втТаблица.ОчкиВыигравшего
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Итог2
	|ПОМЕСТИТЬ втТаблицаСИтогами
	|ИЗ
	|	втТаблица КАК втТаблица
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втТаблицаСИтогами.НомерТура,
	|	втТаблицаСИтогами.Команда1,
	|	втТаблицаСИтогами.Команда2,
	|	СУММА(втТаблицаСИтогами.Итог1) КАК Итог1,
	|	СУММА(втТаблицаСИтогами.Итог2) КАК Итог2
	|ИЗ
	|	втТаблицаСИтогами КАК втТаблицаСИтогами
	|
	|СГРУППИРОВАТЬ ПО
	|	втТаблицаСИтогами.НомерТура,
	|	втТаблицаСИтогами.Команда1,
	|	втТаблицаСИтогами.Команда2";
	Запрос.Текст = Текст;
	Результат = Запрос.Выполнить().Выгрузить();
	Данные = Новый Структура;
	Данные.Вставить("Игрок",УчастникРасчета);
	Данные.Вставить("ВыигранныеМячи",0);
	Данные.Вставить("ПроигранныеМячи",0);
	Данные.Вставить("Отношение",0);
	Для каждого ТекСтр Из Результат Цикл
		Если ТекСтр.Команда1 = УчастникРасчета Тогда //смотрим, какой счет у него
			Данные.ВыигранныеМячи = Данные.ВыигранныеМячи + ТекСтр.Итог1;
			Данные.ПроигранныеМячи = Данные.ПроигранныеМячи + ТекСтр.Итог2;
		Иначе
			Данные.ВыигранныеМячи = Данные.ВыигранныеМячи + ТекСтр.Итог2;
			Данные.ПроигранныеМячи = Данные.ПроигранныеМячи + ТекСтр.Итог1;
		КонецЕсли; 
	КонецЦикла; 
	Данные.Отношение = Данные.ВыигранныеМячи / ?(Данные.ПроигранныеМячи = 0,1,Данные.ПроигранныеМячи);
	
	Возврат Данные;
	
КонецФункции
