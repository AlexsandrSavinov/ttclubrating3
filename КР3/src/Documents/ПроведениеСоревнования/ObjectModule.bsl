
//ОбщийРежимСоревнования = 0 Личные
//ОбщийРежимСоревнования = 1 Быстрый расчет
//ОбщийРежимСоревнования = 2 Команды

Процедура ОбработкаПроведения(Отказ, Режим)
	
	//произведём расчет рейтинга
	//получим все основные таблицы для записи, по режиму
	Если ОбщийРежимСоревнования = 1 Тогда //быстрый расчет
		РасчетнаяТаблица = ПолучитьРасчетнуюТаблицуДляБыстрогоРежима();
		ДетальнаяТаблицаРейтинга = ПолучитьДетальнуюТаблицуРасчетаДляБыстрогоРежима();
	ИначеЕсли ОбщийРежимСоревнования = 0 Тогда //личные
		РасчетнаяТаблица = ПолучитьРасчетнуюТаблицуРейтинга();
		ДетальнаяТаблицаРейтинга = ПолучитьДетальнуюТаблицуРасчета();
		ЗаписатьМестаУчастниковПоЭтапам();
	ИначеЕсли ОбщийРежимСоревнования = 2 Тогда //командные
		РасчетнаяТаблица = ПолучитьРасчетнуюТаблицуРейтингаПоКоманднымСоревнованиям();
		ДетальнаяТаблицаРейтинга = ПолучитьДетальнуюТаблицуРасчетаКомандные();
	КонецЕсли; 
	Движения.РейтингУчастников.Записывать = Истина;
		
	Для Каждого ТекЗнач Из РасчетнаяТаблица Цикл
		НовДвижение = Движения.РейтингУчастников.Добавить();
		НовДвижение.Регистратор 	= Ссылка;
		НовДвижение.Период	    	= Ссылка.Дата;
		НовДвижение.Участник    	= ТекЗнач.Участник;
		НовДвижение.Рейтинг     		= ТекЗнач.НовыйРейтинг;
		НовДвижение.Прирост 		= ТекЗнач.Прирост;
		НовДвижение.ВидРейтинга = ВидРейтинга;
		НовДвижение.СтарыйРейтинг = ТекЗнач.ТекущийРейтинг;
	КонецЦикла;
	
	//запишем детализацию по рейтингу
	Движения.ДетализацияПриростаРейтинга.Записывать = Истина;
	Для Каждого ТекЗнач Из ДетальнаяТаблицаРейтинга Цикл
		НовДвижение = Движения.ДетализацияПриростаРейтинга.Добавить();
		ЗаполнитьЗначенияСвойств(НовДвижение,ТекЗнач);
		НовДвижение.Регистратор = Ссылка;
		НовДвижение.Период = Ссылка.Дата;
	КонецЦикла;
	
	//запишем статистику соревнования
	ЗаписатьТаблицуИгрСоревнованийДляАналитики();
		
КонецПроцедуры

#Область ЛичныеСоревнования

Функция ПолучитьРасчетнуюТаблицуРейтинга() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.РежимТура,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Выигравший,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Проигравший,
	|	СУММА(ПроведениеСоревнованияОбщаяТаблицаДанных.ОчкиВыигравшего) КАК ОчкиВыигравшего,
	|	СУММА(ПроведениеСоревнованияОбщаяТаблицаДанных.ОчкиПроигравшего) КАК ОчкиПроигравшего,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.ТехническоеВ,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.ТехническоеП,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.НомерТура,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.НомерГруппы
	|ПОМЕСТИТЬ ДанныеПоГрупповому
	|ИЗ
	|	Документ.ПроведениеСоревнования.ОбщаяТаблицаДанных КАК ПроведениеСоревнованияОбщаяТаблицаДанных
	|ГДЕ
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Ссылка = &Ссылка
	|	И ПроведениеСоревнованияОбщаяТаблицаДанных.РежимТура = ЗНАЧЕНИЕ(Перечисление.РежимыТуровСоревнования.Групповой)
	|	И ПроведениеСоревнованияОбщаяТаблицаДанных.Выигравший <> ЗНАЧЕНИЕ(Справочник.Участники.ПустаяСсылка)
	|	И ПроведениеСоревнованияОбщаяТаблицаДанных.Проигравший <> ЗНАЧЕНИЕ(Справочник.Участники.ПустаяСсылка)
	|	И ПроведениеСоревнованияОбщаяТаблицаДанных.ТехническоеВ = ЛОЖЬ
	|	И ПроведениеСоревнованияОбщаяТаблицаДанных.ТехническоеП = ЛОЖЬ
	|	И ПроведениеСоревнованияОбщаяТаблицаДанных.ЗачтеннаяИграГрупповой В (&СписокЗначенийУчетнных)
	|СГРУППИРОВАТЬ ПО
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.РежимТура,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Выигравший,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Проигравший,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.ТехническоеВ,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.ТехническоеП,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.НомерТура,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.НомерГруппы
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.РежимТура,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Выигравший,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Проигравший,
	|	СУММА(ПроведениеСоревнованияОбщаяТаблицаДанных.ОчкиВыигравшего) КАК ОчкиВыигравшего,
	|	СУММА(ПроведениеСоревнованияОбщаяТаблицаДанных.ОчкиПроигравшего) КАК ОчкиПроигравшего,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.ТехническоеВ,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.ТехническоеП,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.НомерГруппы
	|ПОМЕСТИТЬ ДанныеПоМинус2
	|ИЗ
	|	Документ.ПроведениеСоревнования.ОбщаяТаблицаДанных КАК ПроведениеСоревнованияОбщаяТаблицаДанных
	|ГДЕ
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Ссылка = &Ссылка
	|	И ПроведениеСоревнованияОбщаяТаблицаДанных.РежимТура = ЗНАЧЕНИЕ(Перечисление.РежимыТуровСоревнования.МинусДва)
	|	И ПроведениеСоревнованияОбщаяТаблицаДанных.Выигравший <> ЗНАЧЕНИЕ(Справочник.Участники.ПустаяСсылка)
	|	И ПроведениеСоревнованияОбщаяТаблицаДанных.Проигравший <> ЗНАЧЕНИЕ(Справочник.Участники.ПустаяСсылка)
	|	И ПроведениеСоревнованияОбщаяТаблицаДанных.ТехническоеВ = ЛОЖЬ
	|	И ПроведениеСоревнованияОбщаяТаблицаДанных.ТехническоеП = ЛОЖЬ
	|СГРУППИРОВАТЬ ПО
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.РежимТура,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Выигравший,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Проигравший,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.ТехническоеВ,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.ТехническоеП,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.НомерГруппы
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.РежимТура,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Выигравший,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Проигравший,
	|	СУММА(ПроведениеСоревнованияОбщаяТаблицаДанных.ОчкиВыигравшего) КАК ОчкиВыигравшего,
	|	СУММА(ПроведениеСоревнованияОбщаяТаблицаДанных.ОчкиПроигравшего) КАК ОчкиПроигравшего,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.ТехническоеВ,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.ТехническоеП,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.НомерГруппы
	|ПОМЕСТИТЬ ДанныеПоОлимпийки
	|ИЗ
	|	Документ.ПроведениеСоревнования.ОбщаяТаблицаДанных КАК ПроведениеСоревнованияОбщаяТаблицаДанных
	|ГДЕ
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Ссылка = &Ссылка
	|	И ПроведениеСоревнованияОбщаяТаблицаДанных.РежимТура = ЗНАЧЕНИЕ(Перечисление.РежимыТуровСоревнования.Олимпийка)
	|	И ПроведениеСоревнованияОбщаяТаблицаДанных.Выигравший <> ЗНАЧЕНИЕ(Справочник.Участники.ПустаяСсылка)
	|	И ПроведениеСоревнованияОбщаяТаблицаДанных.Проигравший <> ЗНАЧЕНИЕ(Справочник.Участники.ПустаяСсылка)
	|	И ПроведениеСоревнованияОбщаяТаблицаДанных.ТехническоеВ = ЛОЖЬ
	|	И ПроведениеСоревнованияОбщаяТаблицаДанных.ТехническоеП = ЛОЖЬ
	|СГРУППИРОВАТЬ ПО
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.РежимТура,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Выигравший,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Проигравший,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.ТехническоеВ,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.ТехническоеП,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.НомерГруппы
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.РежимТура,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Выигравший,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Проигравший,
	|	СУММА(ПроведениеСоревнованияОбщаяТаблицаДанных.ОчкиВыигравшего) КАК ОчкиВыигравшего,
	|	СУММА(ПроведениеСоревнованияОбщаяТаблицаДанных.ОчкиПроигравшего) КАК ОчкиПроигравшего,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.ТехническоеВ,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.ТехническоеП,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.НомерГруппы
	|ПОМЕСТИТЬ ДанныеПоПрогрессивной
	|ИЗ
	|	Документ.ПроведениеСоревнования.ОбщаяТаблицаДанных КАК ПроведениеСоревнованияОбщаяТаблицаДанных
	|ГДЕ
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Ссылка = &Ссылка
	|	И ПроведениеСоревнованияОбщаяТаблицаДанных.РежимТура = ЗНАЧЕНИЕ(Перечисление.РежимыТуровСоревнования.Прогрессивная)
	|	И ПроведениеСоревнованияОбщаяТаблицаДанных.Выигравший <> ЗНАЧЕНИЕ(Справочник.Участники.ПустаяСсылка)
	|	И ПроведениеСоревнованияОбщаяТаблицаДанных.Проигравший <> ЗНАЧЕНИЕ(Справочник.Участники.ПустаяСсылка)
	|	И ПроведениеСоревнованияОбщаяТаблицаДанных.ТехническоеВ = ЛОЖЬ
	|	И ПроведениеСоревнованияОбщаяТаблицаДанных.ТехническоеП = ЛОЖЬ
	|СГРУППИРОВАТЬ ПО
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.РежимТура,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Выигравший,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Проигравший,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.ТехническоеВ,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.ТехническоеП,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.НомерГруппы
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПроведениеСоревнованияСписокУчастников.Участник КАК Участник,
	|	ПроведениеСоревнованияСписокУчастников.ТекущийРейтинг
	|ПОМЕСТИТЬ втУчастникиСРейтингом
	|ИЗ
	|	Документ.ПроведениеСоревнования.СписокУчастников КАК ПроведениеСоревнованияСписокУчастников
	|ГДЕ
	|	ПроведениеСоревнованияСписокУчастников.Ссылка = &Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Участник
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеПоГрупповому.РежимТура КАК РежимТура,
	|	ДанныеПоГрупповому.Выигравший КАК Выигравший,
	|	ДанныеПоГрупповому.Проигравший КАК Проигравший,
	|	ДанныеПоГрупповому.ОчкиВыигравшего КАК ОчкиВыигравшего,
	|	ДанныеПоГрупповому.ОчкиПроигравшего КАК ОчкиПроигравшего,
	|	ДанныеПоГрупповому.ТехническоеВ,
	|	ДанныеПоГрупповому.ТехническоеП
	|ПОМЕСТИТЬ втИтоговаяТаблица
	|ИЗ
	|	ДанныеПоГрупповому КАК ДанныеПоГрупповому
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеПоМинус2.РежимТура,
	|	ДанныеПоМинус2.Выигравший,
	|	ДанныеПоМинус2.Проигравший,
	|	ДанныеПоМинус2.ОчкиВыигравшего,
	|	ДанныеПоМинус2.ОчкиПроигравшего,
	|	ДанныеПоМинус2.ТехническоеВ,
	|	ДанныеПоМинус2.ТехническоеП
	|ИЗ
	|	ДанныеПоМинус2 КАК ДанныеПоМинус2
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеПоОлимпийки.РежимТура,
	|	ДанныеПоОлимпийки.Выигравший,
	|	ДанныеПоОлимпийки.Проигравший,
	|	ДанныеПоОлимпийки.ОчкиВыигравшего,
	|	ДанныеПоОлимпийки.ОчкиПроигравшего,
	|	ДанныеПоОлимпийки.ТехническоеВ,
	|	ДанныеПоОлимпийки.ТехническоеП
	|ИЗ
	|	ДанныеПоОлимпийки КАК ДанныеПоОлимпийки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеПоПрогрессивной.РежимТура,
	|	ДанныеПоПрогрессивной.Выигравший,
	|	ДанныеПоПрогрессивной.Проигравший,
	|	ДанныеПоПрогрессивной.ОчкиВыигравшего,
	|	ДанныеПоПрогрессивной.ОчкиПроигравшего,
	|	ДанныеПоПрогрессивной.ТехническоеВ,
	|	ДанныеПоПрогрессивной.ТехническоеП
	|ИЗ
	|	ДанныеПоПрогрессивной КАК ДанныеПоПрогрессивной
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втИтоговаяТаблица.РежимТура,
	|	втИтоговаяТаблица.Выигравший,
	|	втИтоговаяТаблица.Проигравший,
	|	втИтоговаяТаблица.ОчкиВыигравшего,
	|	втИтоговаяТаблица.ОчкиПроигравшего,
	|	втИтоговаяТаблица.ТехническоеВ,
	|	втИтоговаяТаблица.ТехническоеП,
	|	ЕСТЬNULL(втУчастникиСРейтингом.ТекущийРейтинг, 0) КАК ТекущийРейтингВ,
	|	ЕСТЬNULL(втУчастникиСРейтингомПроигравший.ТекущийРейтинг, 0) КАК ТекущийРейтингП
	|ИЗ
	|	втИтоговаяТаблица КАК втИтоговаяТаблица
	|		ЛЕВОЕ СОЕДИНЕНИЕ втУчастникиСРейтингом КАК втУчастникиСРейтингом
	|		ПО втИтоговаяТаблица.Выигравший = втУчастникиСРейтингом.Участник
	|		ЛЕВОЕ СОЕДИНЕНИЕ втУчастникиСРейтингом КАК втУчастникиСРейтингомПроигравший
	|		ПО втИтоговаяТаблица.Проигравший = втУчастникиСРейтингомПроигравший.Участник";
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	Список = Новый СписокЗначений;
	//Если Константы.РассчитыватьУчтенныеИгры.Получить() Тогда
	//	//рассчитываем все
	//	Список.Добавить(Истина);
	//	Список.Добавить(Ложь);
	//Иначе
		Список.Добавить(Ложь);//учтенные не рассчитываем
	//КонецЕсли;
	Запрос.УстановитьПараметр("СписокЗначенийУчетнных",Список);
	//если стоит истина, значит не будем рассчитывать рейтинг при встречи участников разных полов
	мРасчетМеждуПолами = Константы.НеРассчитыватьРейтингПриВстречеМужчиныИЖенщины.Получить();
	//данные с пустыми игроками расчитывать не будем
	ИгрыСоревнований = Запрос.Выполнить().Выгрузить();
	ТаблицаИгроков = СписокУчастников.Выгрузить().Скопировать();
	ТипЧисло = Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(15,2));
	ТаблицаИгроков.Колонки.Добавить("Прирост",ТипЧисло);
	ТаблицаИгроков.Колонки.Добавить("НовыйРейтинг",ТипЧисло);
	Для Каждого ТекИгра Из ИгрыСоревнований Цикл
		Если ТекИгра.Выигравший = Справочники.Участники.ПустаяСсылка() Или ТекИгра.Проигравший = Справочники.Участники.ПустаяСсылка() Тогда
			//ничего не обсчитываем 
			Продолжить;
		КонецЕсли;		
		ПродолжитьРасчет = Ложь;
		Если мРасчетМеждуПолами = Истина Тогда //проверяем 
			Если МожноЛиРассчитыватьРейтинг(ТекИгра.Выигравший,ТекИгра.Проигравший) Тогда
				ПродолжитьРасчет = Истина;
			КонецЕсли;
		Иначе
			ПродолжитьРасчет = Истина;
		КонецЕсли; 
		Если ПродолжитьРасчет = Ложь Тогда
			Продолжить;
		КонецЕсли; 
		
		РейтингВыигравшего 	= ТекИгра.ТекущийРейтингВ;
		РейтингПроигравшего	= ТекИгра.ТекущийРейтингП;
		
		Если ВидКоэффициента = 0 Тогда
			мКэфВ 	= Коэфф;
			мКэфП	= Коэфф;
		ИначеЕсли ВидКоэффициента = 1 Тогда
			мКэфВ = РегистрыСведений.КоэффициентыРейтингаПоСчетуВстречи.НайтиКэфПоСчету(Дата, ТекИгра.ОчкиВыигравшего,
				ТекИгра.ОчкиПроигравшего);
			мКэфП = РегистрыСведений.КоэффициентыРейтингаПоСчетуВстречи.НайтиКэфПоСчету(Дата, ТекИгра.ОчкиПроигравшего,
				ТекИгра.ОчкиВыигравшего);
		КонецЕсли;
	
		//посчитаем сначала выигравшего
		СтрокаВыигравшего = ТаблицаИгроков.НайтиСтроки(Новый Структура("Участник",ТекИгра.Выигравший))[0];
		ПРв = мКэфВ * РассчитатьПрирост(РейтингВыигравшего,РейтингПроигравшего); 
		СтрокаВыигравшего.Прирост = СтрокаВыигравшего.Прирост + ПРв; 
		НовРейтингВыигр = СтрокаВыигравшего.ТекущийРейтинг + СтрокаВыигравшего.Прирост; 
		СтрокаВыигравшего.НовыйРейтинг = ?(НовРейтингВыигр > 0,НовРейтингВыигр,0); 
		
		//а теперь проигравшего
		СтрокаПроигравшего = ТаблицаИгроков.НайтиСтроки(Новый Структура("Участник",ТекИгра.Проигравший))[0];
		ПРп = мКэфП * РассчитатьПрирост(РейтингВыигравшего,РейтингПроигравшего,Ложь);
		СтрокаПроигравшего.Прирост = СтрокаПроигравшего.Прирост + ПРп;
		НовРейтингПр = СтрокаПроигравшего.ТекущийРейтинг + СтрокаПроигравшего.Прирост; 
		СтрокаПроигравшего.НовыйРейтинг = ?(НовРейтингПр > 0,НовРейтингПр,0);
		 
	КонецЦикла;
	
	ТаблицаИгроков.Колонки.Добавить("Бонус");
	//проверим новый рейтинг, вдруг участник вообще не играл, а был с тех.
	Для каждого ТекСтр Из ТаблицаИгроков Цикл
		Если ТекСтр.ТекущийРейтинг <> 0 И ТекСтр.НовыйРейтинг = 0 И ТекСтр.Прирост = 0 Тогда
			ТекСтр.НовыйРейтинг = ТекСтр.ТекущийРейтинг;	
		КонецЕсли; 
	КонецЦикла;
	
	ДобавитьБонусыКРасчетнойТаблице(ТаблицаИгроков);
	
	ТаблицаИгроков.Сортировать("НовыйРейтинг УБЫВ, ТекущийРейтинг УБЫВ, Участник Возр");
	
	Возврат ТаблицаИгроков;
	
КонецФункции

Функция ПолучитьДетальнуюТаблицуРасчета() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ПроведениеСоревнованияСписокУчастников.Участник,
	|	ПроведениеСоревнованияСписокУчастников.ТекущийРейтинг
	|ПОМЕСТИТЬ УчастникиСоревнования
	|ИЗ
	|	Документ.ПроведениеСоревнования.СписокУчастников КАК ПроведениеСоревнованияСписокУчастников
	|ГДЕ
	|	ПроведениеСоревнованияСписокУчастников.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.РежимТура,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Выигравший,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Проигравший,
	|	СУММА(ПроведениеСоревнованияОбщаяТаблицаДанных.ОчкиВыигравшего) КАК ОчкиВыигравшего,
	|	СУММА(ПроведениеСоревнованияОбщаяТаблицаДанных.ОчкиПроигравшего) КАК ОчкиПроигравшего,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.ТехническоеВ,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.ТехническоеП,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.НомерТура
	|ПОМЕСТИТЬ ДанныеПоГрупповому
	|ИЗ
	|	Документ.ПроведениеСоревнования.ОбщаяТаблицаДанных КАК ПроведениеСоревнованияОбщаяТаблицаДанных
	|ГДЕ
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Ссылка = &Ссылка
	|	И ПроведениеСоревнованияОбщаяТаблицаДанных.РежимТура = ЗНАЧЕНИЕ(Перечисление.РежимыТуровСоревнования.Групповой)
	|	И ПроведениеСоревнованияОбщаяТаблицаДанных.Выигравший <> ЗНАЧЕНИЕ(Справочник.Участники.ПустаяСсылка)
	|	И ПроведениеСоревнованияОбщаяТаблицаДанных.Проигравший <> ЗНАЧЕНИЕ(Справочник.Участники.ПустаяСсылка)
	|	И ПроведениеСоревнованияОбщаяТаблицаДанных.ТехническоеВ = ЛОЖЬ
	|	И ПроведениеСоревнованияОбщаяТаблицаДанных.ТехническоеП = ЛОЖЬ
	|	И ПроведениеСоревнованияОбщаяТаблицаДанных.ЗачтеннаяИграГрупповой = ЛОЖЬ
	|
	|СГРУППИРОВАТЬ ПО
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.РежимТура,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Выигравший,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Проигравший,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.ТехническоеВ,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.ТехническоеП,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.НомерТура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.РежимТура,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Выигравший,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Проигравший,
	|	СУММА(ПроведениеСоревнованияОбщаяТаблицаДанных.ОчкиВыигравшего) КАК ОчкиВыигравшего,
	|	СУММА(ПроведениеСоревнованияОбщаяТаблицаДанных.ОчкиПроигравшего) КАК ОчкиПроигравшего,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.ТехническоеВ,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.ТехническоеП,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.НомерГруппы,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.НомерТура
	|ПОМЕСТИТЬ ДанныеПоМинус2
	|ИЗ
	|	Документ.ПроведениеСоревнования.ОбщаяТаблицаДанных КАК ПроведениеСоревнованияОбщаяТаблицаДанных
	|ГДЕ
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Ссылка = &Ссылка
	|	И ПроведениеСоревнованияОбщаяТаблицаДанных.РежимТура = ЗНАЧЕНИЕ(Перечисление.РежимыТуровСоревнования.МинусДва)
	|	И ПроведениеСоревнованияОбщаяТаблицаДанных.Выигравший <> ЗНАЧЕНИЕ(Справочник.Участники.ПустаяСсылка)
	|	И ПроведениеСоревнованияОбщаяТаблицаДанных.Проигравший <> ЗНАЧЕНИЕ(Справочник.Участники.ПустаяСсылка)
	|	И ПроведениеСоревнованияОбщаяТаблицаДанных.ТехническоеВ = ЛОЖЬ
	|	И ПроведениеСоревнованияОбщаяТаблицаДанных.ТехническоеП = ЛОЖЬ
	|
	|СГРУППИРОВАТЬ ПО
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.РежимТура,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Выигравший,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Проигравший,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.ТехническоеВ,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.ТехническоеП,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.НомерГруппы,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.НомерТура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.РежимТура,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Выигравший,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Проигравший,
	|	СУММА(ПроведениеСоревнованияОбщаяТаблицаДанных.ОчкиВыигравшего) КАК ОчкиВыигравшего,
	|	СУММА(ПроведениеСоревнованияОбщаяТаблицаДанных.ОчкиПроигравшего) КАК ОчкиПроигравшего,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.ТехническоеВ,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.ТехническоеП,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.НомерГруппы,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.НомерТура
	|ПОМЕСТИТЬ ДанныеПоОлимпийки
	|ИЗ
	|	Документ.ПроведениеСоревнования.ОбщаяТаблицаДанных КАК ПроведениеСоревнованияОбщаяТаблицаДанных
	|ГДЕ
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Ссылка = &Ссылка
	|	И ПроведениеСоревнованияОбщаяТаблицаДанных.РежимТура = ЗНАЧЕНИЕ(Перечисление.РежимыТуровСоревнования.Олимпийка)
	|	И ПроведениеСоревнованияОбщаяТаблицаДанных.Выигравший <> ЗНАЧЕНИЕ(Справочник.Участники.ПустаяСсылка)
	|	И ПроведениеСоревнованияОбщаяТаблицаДанных.Проигравший <> ЗНАЧЕНИЕ(Справочник.Участники.ПустаяСсылка)
	|	И ПроведениеСоревнованияОбщаяТаблицаДанных.ТехническоеВ = ЛОЖЬ
	|	И ПроведениеСоревнованияОбщаяТаблицаДанных.ТехническоеП = ЛОЖЬ
	|
	|СГРУППИРОВАТЬ ПО
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.РежимТура,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Выигравший,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Проигравший,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.ТехническоеВ,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.ТехническоеП,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.НомерГруппы,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.НомерТура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.РежимТура,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Выигравший,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Проигравший,
	|	СУММА(ПроведениеСоревнованияОбщаяТаблицаДанных.ОчкиВыигравшего) КАК ОчкиВыигравшего,
	|	СУММА(ПроведениеСоревнованияОбщаяТаблицаДанных.ОчкиПроигравшего) КАК ОчкиПроигравшего,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.ТехническоеВ,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.ТехническоеП,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.НомерГруппы,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.НомерТура
	|ПОМЕСТИТЬ ДанныеПоПрогрессивной
	|ИЗ
	|	Документ.ПроведениеСоревнования.ОбщаяТаблицаДанных КАК ПроведениеСоревнованияОбщаяТаблицаДанных
	|ГДЕ
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Ссылка = &Ссылка
	|	И ПроведениеСоревнованияОбщаяТаблицаДанных.РежимТура = ЗНАЧЕНИЕ(Перечисление.РежимыТуровСоревнования.Прогрессивная)
	|	И ПроведениеСоревнованияОбщаяТаблицаДанных.Выигравший <> ЗНАЧЕНИЕ(Справочник.Участники.ПустаяСсылка)
	|	И ПроведениеСоревнованияОбщаяТаблицаДанных.Проигравший <> ЗНАЧЕНИЕ(Справочник.Участники.ПустаяСсылка)
	|	И ПроведениеСоревнованияОбщаяТаблицаДанных.ТехническоеВ = ЛОЖЬ
	|	И ПроведениеСоревнованияОбщаяТаблицаДанных.ТехническоеП = ЛОЖЬ
	|
	|СГРУППИРОВАТЬ ПО
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.РежимТура,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Выигравший,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Проигравший,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.ТехническоеВ,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.ТехническоеП,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.НомерГруппы,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.НомерТура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеПоГрупповому.РежимТура КАК РежимТура,
	|	ДанныеПоГрупповому.Выигравший КАК Выигравший,
	|	ДанныеПоГрупповому.Проигравший КАК Проигравший,
	|	ДанныеПоГрупповому.ОчкиВыигравшего КАК ОчкиВыигравшего,
	|	ДанныеПоГрупповому.ОчкиПроигравшего КАК ОчкиПроигравшего,
	|	ДанныеПоГрупповому.ТехническоеВ,
	|	ДанныеПоГрупповому.ТехническоеП,
	|	ДанныеПоГрупповому.НомерТура
	|ПОМЕСТИТЬ втИтоговая
	|ИЗ
	|	ДанныеПоГрупповому КАК ДанныеПоГрупповому
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеПоМинус2.РежимТура,
	|	ДанныеПоМинус2.Выигравший,
	|	ДанныеПоМинус2.Проигравший,
	|	ДанныеПоМинус2.ОчкиВыигравшего,
	|	ДанныеПоМинус2.ОчкиПроигравшего,
	|	ДанныеПоМинус2.ТехническоеВ,
	|	ДанныеПоМинус2.ТехническоеП,
	|	ДанныеПоМинус2.НомерТура
	|ИЗ
	|	ДанныеПоМинус2 КАК ДанныеПоМинус2
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеПоОлимпийки.РежимТура,
	|	ДанныеПоОлимпийки.Выигравший,
	|	ДанныеПоОлимпийки.Проигравший,
	|	ДанныеПоОлимпийки.ОчкиВыигравшего,
	|	ДанныеПоОлимпийки.ОчкиПроигравшего,
	|	ДанныеПоОлимпийки.ТехническоеВ,
	|	ДанныеПоОлимпийки.ТехническоеП,
	|	ДанныеПоОлимпийки.НомерТура
	|ИЗ
	|	ДанныеПоОлимпийки КАК ДанныеПоОлимпийки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеПоПрогрессивной.РежимТура,
	|	ДанныеПоПрогрессивной.Выигравший,
	|	ДанныеПоПрогрессивной.Проигравший,
	|	ДанныеПоПрогрессивной.ОчкиВыигравшего,
	|	ДанныеПоПрогрессивной.ОчкиПроигравшего,
	|	ДанныеПоПрогрессивной.ТехническоеВ,
	|	ДанныеПоПрогрессивной.ТехническоеП,
	|	ДанныеПоПрогрессивной.НомерТура
	|ИЗ
	|	ДанныеПоПрогрессивной КАК ДанныеПоПрогрессивной
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УчастникиСоревнования.Участник КАК Участник1,
	|	0 КАК Рейтинг1,
	|	втИтоговая.ОчкиПроигравшего КАК Очки1,
	|	втИтоговая.ОчкиВыигравшего КАК Очки2,
	|	0 КАК Рейтинг2,
	|	втИтоговая.Выигравший КАК Участник2,
	|	0 КАК Прирост,
	|	втИтоговая.РежимТура,
	|	0 КАК ИД,
	|	втИтоговая.НомерТура
	|ИЗ
	|	УчастникиСоревнования КАК УчастникиСоревнования
	|		ЛЕВОЕ СОЕДИНЕНИЕ втИтоговая КАК втИтоговая
	|		ПО УчастникиСоревнования.Участник = втИтоговая.Проигравший
	|ГДЕ
	|	НЕ втИтоговая.ОчкиВыигравшего ЕСТЬ NULL 
	|	И НЕ втИтоговая.ОчкиПроигравшего ЕСТЬ NULL 
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	УчастникиСоревнования.Участник,
	|	0,
	|	втИтоговая.ОчкиВыигравшего,
	|	втИтоговая.ОчкиПроигравшего,
	|	0,
	|	втИтоговая.Проигравший,
	|	0,
	|	втИтоговая.РежимТура,
	|	0,
	|	втИтоговая.НомерТура
	|ИЗ
	|	УчастникиСоревнования КАК УчастникиСоревнования
	|		ЛЕВОЕ СОЕДИНЕНИЕ втИтоговая КАК втИтоговая
	|		ПО УчастникиСоревнования.Участник = втИтоговая.Выигравший
	|ГДЕ
	|	НЕ втИтоговая.ОчкиВыигравшего ЕСТЬ NULL 
	|	И НЕ втИтоговая.ОчкиПроигравшего ЕСТЬ NULL 
	|
	|УПОРЯДОЧИТЬ ПО
	|	Участник1";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Результат = Запрос.Выполнить().Выгрузить();
	//теперь рассчитаем все приросты игроков
	мРасчетМеждуПолами = Константы.НеРассчитыватьРейтингПриВстречеМужчиныИЖенщины.Получить();
	Сч = 1;
	Для Каждого ТекСтрока Из Результат Цикл
		ТекСтрока.ИД = Сч;
		Сч = СЧ + 1;
				
		//определим кто кого выиграл
		Если ТекСтрока.Очки1 > ТекСтрока.Очки2 Тогда
			Выигравший 	= ТекСтрока.Участник1;//ЭТО ПРИОРИТЕТ
			Проигравший 	= ТекСтрока.Участник2;
			РейтингВыигравшего  	= НайтиРейтинг(Выигравший);
			РейтингПроигравшего	= НайтиРейтинг(Проигравший);
			//ПриоритетныйУчастник = Истина;
			ТекСтрока.Рейтинг1 = РейтингВыигравшего;
			ТекСтрока.Рейтинг2 = РейтингПроигравшего;
			РасчетВыигравшего = Истина;
		Иначе
			Выигравший 	= ТекСтрока.Участник2;
			Проигравший 	= ТекСтрока.Участник1;
			РейтингВыигравшего  	= НайтиРейтинг(Выигравший);
			РейтингПроигравшего	= НайтиРейтинг(Проигравший);
			//ПриоритетныйУчастник = Ложь;
			ТекСтрока.Рейтинг1 = РейтингПроигравшего;
			ТекСтрока.Рейтинг2 = РейтингВыигравшего;
			РасчетВыигравшего = Ложь;
		КонецЕсли;
		
		ПродолжитьРасчет = Ложь;
		Если мРасчетМеждуПолами = Истина Тогда //проверяем 
			Если МожноЛиРассчитыватьРейтинг(ТекСтрока.Участник1,ТекСтрока.Участник2) Тогда
				ПродолжитьРасчет = Истина;
			КонецЕсли;
		Иначе
			ПродолжитьРасчет = Истина;
		КонецЕсли; 
		Если ПродолжитьРасчет = Ложь Тогда
			Продолжить;
		КонецЕсли; 
		
		Если ВидКоэффициента = 0 Тогда
			мКэф 	= Коэфф;
		ИначеЕсли ВидКоэффициента = 1 Тогда
			мКэф = РегистрыСведений.КоэффициентыРейтингаПоСчетуВстречи.НайтиКэфПоСчету(Дата,
				ТекСтрока.Очки1, ТекСтрока.Очки2);
		КонецЕсли;
				
		ПриростИгрока = мКэф * РассчитатьПрирост(РейтингВыигравшего,РейтингПроигравшего,РасчетВыигравшего);
		ТекСтрока.Прирост = Формат(ПриростИгрока,"ЧЦ=15; ЧДЦ=2");
	КонецЦикла;

	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область БыстрыйРасчет

Функция ПолучитьРасчетнуюТаблицуДляБыстрогоРежима() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = "ВЫБРАТЬ * ПОМЕСТИТЬ втТаблица Из &Внеш КАК Внеш";
	Запрос.УстановитьПараметр("Внеш",ЭтотОбъект.ТаблицаБыстрогоРасчета.Выгрузить());
	Запрос.Выполнить();
	
	Запрос.Текст = "ВЫБРАТЬ
	|	ПроведениеСоревнованияТаблицаБыстрогоРасчета.Участник1 КАК Участник,
	|	ПроведениеСоревнованияТаблицаБыстрогоРасчета.Прирост1 КАК СуммаПрироста,
	|	ПроведениеСоревнованияТаблицаБыстрогоРасчета.ТекущийРейтинг1 КАК ТекущийРейтинг
	|ПОМЕСТИТЬ втДанныеПоУчастнику
	|ИЗ
	|	втТаблица КАК ПроведениеСоревнованияТаблицаБыстрогоРасчета
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПроведениеСоревнованияТаблицаБыстрогоРасчета.Участник2,
	|	ПроведениеСоревнованияТаблицаБыстрогоРасчета.Прирост2,
	|	ПроведениеСоревнованияТаблицаБыстрогоРасчета.ТекущийРейтинг2
	|ИЗ
	|	втТаблица КАК ПроведениеСоревнованияТаблицаБыстрогоРасчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втДанныеПоУчастнику.Участник,
	|	СУММА(втДанныеПоУчастнику.СуммаПрироста) КАК СуммаПрироста,
	|	втДанныеПоУчастнику.ТекущийРейтинг
	|ПОМЕСТИТЬ втИтоговая
	|ИЗ
	|	втДанныеПоУчастнику КАК втДанныеПоУчастнику
	|
	|СГРУППИРОВАТЬ ПО
	|	втДанныеПоУчастнику.Участник,
	|	втДанныеПоУчастнику.ТекущийРейтинг
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втИтоговая.Участник КАК Участник,
	|	втИтоговая.СуммаПрироста КАК Прирост,
	|	0 КАК Бонус,
	|	втИтоговая.ТекущийРейтинг КАК ТекущийРейтинг,
	|	втИтоговая.ТекущийРейтинг + втИтоговая.СуммаПрироста КАК НовыйРейтинг
	|ИЗ
	|	втИтоговая КАК втИтоговая
	|
	|УПОРЯДОЧИТЬ ПО
	|	НовыйРейтинг УБЫВ,
	|	ТекущийРейтинг УБЫВ,
	|	Участник";
	Результат = Запрос.Выполнить().Выгрузить();
	
	ДобавитьБонусыКРасчетнойТаблице(Результат);
	
	Возврат Результат;
	
КонецФункции

Функция ПолучитьДетальнуюТаблицуРасчетаДляБыстрогоРежима()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	Запрос.Текст = "ВЫБРАТЬ
	|	ПроведениеСоревнованияТаблицаБыстрогоРасчета.Участник1 КАК Участник,
	|	ПроведениеСоревнованияТаблицаБыстрогоРасчета.ТекущийРейтинг1 КАК ТекущийРейтинг
	|ПОМЕСТИТЬ втВсеУчастники
	|ИЗ
	|	Документ.ПроведениеСоревнования.ТаблицаБыстрогоРасчета КАК ПроведениеСоревнованияТаблицаБыстрогоРасчета
	|ГДЕ
	|	ПроведениеСоревнованияТаблицаБыстрогоРасчета.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПроведениеСоревнованияТаблицаБыстрогоРасчета.Участник2,
	|	ПроведениеСоревнованияТаблицаБыстрогоРасчета.ТекущийРейтинг2
	|ИЗ
	|	Документ.ПроведениеСоревнования.ТаблицаБыстрогоРасчета КАК ПроведениеСоревнованияТаблицаБыстрогоРасчета
	|ГДЕ
	|	ПроведениеСоревнованияТаблицаБыстрогоРасчета.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	втВсеУчастники.Участник,
	|	втВсеУчастники.ТекущийРейтинг
	|ПОМЕСТИТЬ втСгруппированныеУчастники
	|ИЗ
	|	втВсеУчастники КАК втВсеУчастники
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПроведениеСоревнованияТаблицаБыстрогоРасчета.НомерСтроки КАК ИД,
	|	ПроведениеСоревнованияТаблицаБыстрогоРасчета.Участник1,
	|	ПроведениеСоревнованияТаблицаБыстрогоРасчета.ТекущийРейтинг1 КАК Рейтинг1,
	|	ПроведениеСоревнованияТаблицаБыстрогоРасчета.КолПартий1 КАК Очки1,
	|	ПроведениеСоревнованияТаблицаБыстрогоРасчета.Прирост1,
	|	ПроведениеСоревнованияТаблицаБыстрогоРасчета.Участник2,
	|	ПроведениеСоревнованияТаблицаБыстрогоРасчета.КолПартий2 КАК Очки2,
	|	ПроведениеСоревнованияТаблицаБыстрогоРасчета.ТекущийРейтинг2 КАК Рейтинг2,
	|	ПроведениеСоревнованияТаблицаБыстрогоРасчета.Прирост2
	|ПОМЕСТИТЬ втВсяТаблицаРасчета
	|ИЗ
	|	Документ.ПроведениеСоревнования.ТаблицаБыстрогоРасчета КАК ПроведениеСоревнованияТаблицаБыстрогоРасчета
	|ГДЕ
	|	ПроведениеСоревнованияТаблицаБыстрогоРасчета.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втСгруппированныеУчастники.Участник,
	|	втСгруппированныеУчастники.ТекущийРейтинг,
	|	втВсяТаблицаРасчета.Прирост1 КАК Прирост,
	|	втВсяТаблицаРасчета.Очки1 КАК Очки,
	|	втВсяТаблицаРасчета.Очки2,
	|	втВсяТаблицаРасчета.Прирост2,
	|	втВсяТаблицаРасчета.Участник2,
	|	втВсяТаблицаРасчета.Рейтинг2
	|ПОМЕСТИТЬ втИтоговаяТаблица
	|ИЗ
	|	втСгруппированныеУчастники КАК втСгруппированныеУчастники
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втВсяТаблицаРасчета КАК втВсяТаблицаРасчета
	|		ПО втСгруппированныеУчастники.Участник = втВсяТаблицаРасчета.Участник1
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	втСгруппированныеУчастники.Участник,
	|	втСгруппированныеУчастники.ТекущийРейтинг,
	|	втВсяТаблицаРасчета.Прирост2,
	|	втВсяТаблицаРасчета.Очки2,
	|	втВсяТаблицаРасчета.Очки1,
	|	втВсяТаблицаРасчета.Прирост1,
	|	втВсяТаблицаРасчета.Участник1,
	|	втВсяТаблицаРасчета.Рейтинг1
	|ИЗ
	|	втСгруппированныеУчастники КАК втСгруппированныеУчастники
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втВсяТаблицаРасчета КАК втВсяТаблицаРасчета
	|		ПО втСгруппированныеУчастники.Участник = втВсяТаблицаРасчета.Участник2
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втИтоговаяТаблица.Участник КАК Участник1,
	|	втИтоговаяТаблица.ТекущийРейтинг КАК Рейтинг1,
	|	втИтоговаяТаблица.Прирост КАК Прирост,
	|	втИтоговаяТаблица.Очки КАК Очки1,
	|	втИтоговаяТаблица.Очки2,
	|	втИтоговаяТаблица.Прирост2,
	|	втИтоговаяТаблица.Участник2,
	|	втИтоговаяТаблица.Рейтинг2,
	|	0 КАК ИД,
	|	0 КАК НомерТура
	|ИЗ
	|	втИтоговаяТаблица КАК втИтоговаяТаблица
	|ГДЕ
	|	втИтоговаяТаблица.Участник <> ЗНАЧЕНИЕ(Справочник.Участники.ПустаяСсылка)";
	
	Результат = Запрос.Выполнить().Выгрузить();
	Сч = 1;
	Для каждого ТекСтр Из Результат Цикл 
		ТекСтр.ИД = Сч;
		Сч = Сч +1; 
	КонецЦикла; 
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область КомандныеСоревнования

Функция ПолучитьРасчетнуюТаблицуРейтингаПоКоманднымСоревнованиям() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.НомерТура,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Команда1,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Участник1 КАК Участник1,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Расстановка1 КАК Расстановка1,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Команда2,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Участник2,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Расстановка2,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.НомерГруппы КАК НомерГруппы,
	|	СУММА(ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.ОчкиВыигравшего) КАК ОчкиВыигравшего,
	|	СУММА(ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.ОчкиПроигравшего) КАК ОчкиПроигравшего
	|ПОМЕСТИТЬ втОбщиеДанные
	|ИЗ
	|	Документ.ПроведениеСоревнования.ОбщаяТаблицаДанныхПоКомандам КАК ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам
	|ГДЕ
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Ссылка = &Ссылка
	|	И ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.ТехническоеВ = ЛОЖЬ
	|	И ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.ТехническоеП = ЛОЖЬ
	|	И ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Расстановка1 <> ЗНАЧЕНИЕ(Перечисление.ВариантыРасстановки.Пара)
	|	И ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Расстановка2 <> ЗНАЧЕНИЕ(Перечисление.ВариантыРасстановки.Пара)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.НомерТура,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Команда1,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Участник1,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Расстановка1,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Команда2,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Участник2,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Расстановка2,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.НомерГруппы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втОбщиеДанные.НомерГруппы КАК НомерГруппы,
	|	втОбщиеДанные.ОчкиВыигравшего,
	|	втОбщиеДанные.ОчкиПроигравшего,
	|	втОбщиеДанные.Участник1,
	|	втОбщиеДанные.Участник2,
	|	втОбщиеДанные.НомерТура,
	|	втОбщиеДанные.Команда1,
	|	втОбщиеДанные.Расстановка1,
	|	втОбщиеДанные.Команда2,
	|	втОбщиеДанные.Расстановка2
	|ИЗ
	|	втОбщиеДанные КАК втОбщиеДанные
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерГруппы";
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	//данные с пустыми игроками расчитывать не будем
	ИгрыСоревнований = Запрос.Выполнить().Выгрузить();
	
	ТаблицаИгроков = ТаблицаКоманд.Выгрузить().Скопировать();
	ТипЧисло = Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(15,2));
	ТаблицаИгроков.Колонки.Добавить("Прирост",ТипЧисло);
	ТаблицаИгроков.Колонки.Добавить("НовыйРейтинг",ТипЧисло);
	
	Для Каждого ТекИгра Из ИгрыСоревнований Цикл
		Если ТекИгра.ОчкиВыигравшего = 0 И ТекИгра.ОчкиПроигравшего = 0 Тогда
			Продолжить;
		КонецЕсли; 
		Если ТекИгра.Участник1 = Справочники.Участники.ПустаяСсылка() Или ТекИгра.Участник2 = Справочники.Участники.ПустаяСсылка() Тогда
			//ничего не обсчитываем 
			Продолжить;
		КонецЕсли;
		Если ТекИгра.ОчкиВыигравшего > ТекИгра.ОчкиПроигравшего Тогда
			мВыигравший 	= ТекИгра.Участник1;
			мПроигравший = ТекИгра.Участник2;
		Иначе
			мВыигравший 	= ТекИгра.Участник2;
			мПроигравший = ТекИгра.Участник1;
		КонецЕсли; 
		
		СтрокиРейтингВыигравшего = ТаблицаКоманд.НайтиСтроки(Новый Структура("Участник",мВыигравший));
		Если СтрокиРейтингВыигравшего.Количество() > 0 Тогда
			РейтингВыигравшего = СтрокиРейтингВыигравшего[0].ТекущийРейтинг;
		Иначе
			РейтингВыигравшего = 0;
		КонецЕсли; 
		
		СтрокиРейтингПроигравшего = ТаблицаКоманд.НайтиСтроки(Новый Структура("Участник",мПроигравший));
		Если СтрокиРейтингПроигравшего.Количество() > 0 Тогда
			РейтингПроигравшего = СтрокиРейтингПроигравшего[0].ТекущийРейтинг;
		Иначе
			РейтингПроигравшего = 0;
		КонецЕсли; 
		
		Если ВидКоэффициента = 0 Тогда
			мКэфВ 	= Коэфф;
			мКэфП	= Коэфф;
		ИначеЕсли ВидКоэффициента = 1 Тогда
			мКэфВ = РегистрыСведений.КоэффициентыРейтингаПоСчетуВстречи.НайтиКэфПоСчету(Дата, ТекИгра.ОчкиВыигравшего,
				ТекИгра.ОчкиПроигравшего);
			мКэфП = РегистрыСведений.КоэффициентыРейтингаПоСчетуВстречи.НайтиКэфПоСчету(Дата, ТекИгра.ОчкиПроигравшего,
				ТекИгра.ОчкиВыигравшего);
		КонецЕсли;
				
		//посчитаем сначала выигравшего
		СтрокаВыигравшего = ТаблицаИгроков.НайтиСтроки(Новый Структура("Участник",мВыигравший))[0];
		ПРв = мКэфВ * РассчитатьПрирост(РейтингВыигравшего,РейтингПроигравшего); 
		СтрокаВыигравшего.Прирост = СтрокаВыигравшего.Прирост + ПРв; 
		НовРейтингВыигр = СтрокаВыигравшего.ТекущийРейтинг + СтрокаВыигравшего.Прирост; 
		СтрокаВыигравшего.НовыйРейтинг = ?(НовРейтингВыигр > 0,НовРейтингВыигр,0); 
		
		//а теперь проигравшего
		СтрокаПроигравшего = ТаблицаИгроков.НайтиСтроки(Новый Структура("Участник",мПроигравший))[0];
		ПРп = мКэфП * РассчитатьПрирост(РейтингВыигравшего,РейтингПроигравшего,Ложь);
		СтрокаПроигравшего.Прирост = СтрокаПроигравшего.Прирост + ПРп;
		НовРейтингПр = СтрокаПроигравшего.ТекущийРейтинг + СтрокаПроигравшего.Прирост; 
		СтрокаПроигравшего.НовыйРейтинг = ?(НовРейтингПр > 0,НовРейтингПр,0); 
	КонецЦикла;
	
	ТаблицаИгроков.Колонки.Добавить("Бонус");
	//проверим новый рейтинг, вдруг участник вообще не играл, а был с тех.
	Для каждого ТекСтр Из ТаблицаИгроков Цикл
		Если ТекСтр.ТекущийРейтинг <> 0 И ТекСтр.НовыйРейтинг = 0 И ТекСтр.Прирост = 0 Тогда
			ТекСтр.НовыйРейтинг = ТекСтр.ТекущийРейтинг;	
		КонецЕсли; 
	КонецЦикла;
	
	ДобавитьБонусыКРасчетнойТаблице(ТаблицаИгроков);
	
	ТаблицаИгроков.Сортировать("НовыйРейтинг УБЫВ, ТекущийРейтинг УБЫВ, Участник Возр");
	
	Возврат ТаблицаИгроков;
	
КонецФункции

Функция ПолучитьДетальнуюТаблицуРасчетаКомандные()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ПроведениеСоревнованияТаблицаКоманд.НазваниеКоманды,
	|	ПроведениеСоревнованияТаблицаКоманд.Участник,
	|	ПроведениеСоревнованияТаблицаКоманд.ТекущийРейтинг
	|ПОМЕСТИТЬ втУчастникиСоревнования
	|ИЗ
	|	Документ.ПроведениеСоревнования.ТаблицаКоманд КАК ПроведениеСоревнованияТаблицаКоманд
	|ГДЕ
	|	ПроведениеСоревнованияТаблицаКоманд.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.НомерГруппы КАК НомерГруппы,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Участник1,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Участник2,
	|	СУММА(ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.ОчкиВыигравшего) КАК ОчкиВыигравшего,
	|	СУММА(ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.ОчкиПроигравшего) КАК ОчкиПроигравшего,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.ТехническоеВ,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.ТехническоеП,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.НомерТура,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.РежимТура
	|ПОМЕСТИТЬ втВсеИгры
	|ИЗ
	|	Документ.ПроведениеСоревнования.ОбщаяТаблицаДанныхПоКомандам КАК ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам
	|ГДЕ
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Ссылка = &Ссылка
	|	И ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Расстановка1 <> ЗНАЧЕНИЕ(Перечисление.ВариантыРасстановки.пара)
	|	И ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Расстановка2 <> ЗНАЧЕНИЕ(Перечисление.ВариантыРасстановки.пара)
	|	И (ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.ТехническоеВ = ЛОЖЬ
	|			И ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.ТехническоеП = ЛОЖЬ)
	|	И ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Участник1 <> ЗНАЧЕНИЕ(Справочник.Участники.ПустаяСсылка)
	|	И ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Участник2 <> ЗНАЧЕНИЕ(Справочник.Участники.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Участник1,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.Участник2,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.ТехническоеВ,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.ТехническоеП,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.НомерГруппы,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.НомерТура,
	|	ПроведениеСоревнованияОбщаяТаблицаДанныхПоКомандам.РежимТура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	0 КАК ИД,
	|	втВсеИгры.НомерТура КАК НомерТура,
	|	втВсеИгры.РежимТура,
	|	втВсеИгры.НомерГруппы КАК НомерГруппы,
	|	втВсеИгры.Участник1 КАК Участник1,
	|	РейтингДля1.ТекущийРейтинг КАК Рейтинг1,
	|	втВсеИгры.Участник2,
	|	РейтингДля2.ТекущийРейтинг КАК Рейтинг2,
	|	втВсеИгры.ОчкиВыигравшего КАК Очки1,
	|	втВсеИгры.ОчкиПроигравшего КАК Очки2,
	|	0 КАК Прирост,
	|	втВсеИгры.ТехническоеВ,
	|	втВсеИгры.ТехническоеП
	|ПОМЕСТИТЬ втТестИгр
	|ИЗ
	|	втВсеИгры КАК втВсеИгры
	|		ЛЕВОЕ СОЕДИНЕНИЕ втУчастникиСоревнования КАК РейтингДля1
	|		ПО втВсеИгры.Участник1 = РейтингДля1.Участник
	|		ЛЕВОЕ СОЕДИНЕНИЕ втУчастникиСоревнования КАК РейтингДля2
	|		ПО втВсеИгры.Участник2 = РейтингДля2.Участник
	|ГДЕ
	|	ВЫБОР
	|			КОГДА втВсеИгры.ОчкиВыигравшего = 0
	|					И втВсеИгры.ОчкиПроигравшего = 0
	|				ТОГДА ЛОЖЬ
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ = ИСТИНА
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	0,
	|	втВсеИгры.НомерТура,
	|	втВсеИгры.РежимТура,
	|	втВсеИгры.НомерГруппы,
	|	втВсеИгры.Участник1,
	|	РейтингДля1.ТекущийРейтинг,
	|	втВсеИгры.Участник2,
	|	РейтингДля2.ТекущийРейтинг,
	|	втВсеИгры.ОчкиВыигравшего,
	|	втВсеИгры.ОчкиПроигравшего,
	|	0,
	|	втВсеИгры.ТехническоеВ,
	|	втВсеИгры.ТехническоеП
	|ИЗ
	|	втВсеИгры КАК втВсеИгры
	|		ЛЕВОЕ СОЕДИНЕНИЕ втУчастникиСоревнования КАК РейтингДля1
	|		ПО втВсеИгры.Участник1 = РейтингДля1.Участник
	|		ЛЕВОЕ СОЕДИНЕНИЕ втУчастникиСоревнования КАК РейтингДля2
	|		ПО втВсеИгры.Участник2 = РейтингДля2.Участник
	|ГДЕ
	|	ВЫБОР
	|			КОГДА втВсеИгры.ОчкиВыигравшего = 0
	|					И втВсеИгры.ОчкиПроигравшего = 0
	|				ТОГДА ЛОЖЬ
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ = ИСТИНА
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	втТестИгр.ИД,
	|	втТестИгр.НомерТура,
	|	втТестИгр.РежимТура,
	|	втТестИгр.НомерГруппы КАК НомерГруппы,
	|	втУчастникиСоревнования.Участник КАК Участник1,
	|	втТестИгр.Рейтинг1,
	|	втТестИгр.Участник2,
	|	втТестИгр.Рейтинг2,
	|	втТестИгр.Очки1,
	|	втТестИгр.Очки2,
	|	втТестИгр.Прирост,
	|	втТестИгр.ТехническоеВ,
	|	втТестИгр.ТехническоеП
	|ИЗ
	|	втУчастникиСоревнования КАК втУчастникиСоревнования
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втТестИгр КАК втТестИгр
	|		ПО втУчастникиСоревнования.Участник = втТестИгр.Участник1
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	втТестИгр.ИД,
	|	втТестИгр.НомерТура,
	|	втТестИгр.РежимТура,
	|	втТестИгр.НомерГруппы,
	|	втУчастникиСоревнования.Участник,
	|	втТестИгр.Рейтинг2,
	|	втТестИгр.Участник1,
	|	втТестИгр.Рейтинг1,
	|	втТестИгр.Очки2,
	|	втТестИгр.Очки1,
	|	втТестИгр.Прирост,
	|	втТестИгр.ТехническоеП,
	|	втТестИгр.ТехническоеВ
	|ИЗ
	|	втУчастникиСоревнования КАК втУчастникиСоревнования
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втТестИгр КАК втТестИгр
	|		ПО втУчастникиСоревнования.Участник = втТестИгр.Участник2
	|
	|УПОРЯДОЧИТЬ ПО
	|	Участник1,
	|	НомерГруппы";
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	Результат = Запрос.Выполнить().Выгрузить();
	//теперь рассчитаем все приросты игроков
	мРасчетМеждуПолами = Константы.НеРассчитыватьРейтингПриВстречеМужчиныИЖенщины.Получить();
	Сч = 1;
	Для Каждого ТекСтрока Из Результат Цикл
		ТекСтрока.ИД = Сч;
		Сч = СЧ + 1;
		//определим кто кого выиграл
		Если ТекСтрока.Очки1 > ТекСтрока.Очки2 Тогда
			РейтингВыигравшего  	= ТекСтрока.Рейтинг1;
			РейтингПроигравшего	= ТекСтрока.Рейтинг2;
			РасчетВыигравшего = Истина;
		Иначе
			РейтингВыигравшего  	= ТекСтрока.Рейтинг2;
			РейтингПроигравшего	= ТекСтрока.Рейтинг1;
			РасчетВыигравшего = Ложь;
		КонецЕсли;
		
		ПродолжитьРасчет = Ложь;
		Если мРасчетМеждуПолами = Истина Тогда //проверяем 
			Если МожноЛиРассчитыватьРейтинг(ТекСтрока.Участник1,ТекСтрока.Участник2) Тогда
				ПродолжитьРасчет = Истина;
			КонецЕсли;
		Иначе
			ПродолжитьРасчет = Истина;
		КонецЕсли; 
		Если ПродолжитьРасчет = Ложь Тогда
			Продолжить;
		КонецЕсли; 
		
		Если ВидКоэффициента = 0 Тогда
			мКэф 	= Коэфф;
		ИначеЕсли ВидКоэффициента = 1 Тогда
			мКэф = РегистрыСведений.КоэффициентыРейтингаПоСчетуВстречи.НайтиКэфПоСчету(Дата, ТекСтрока.Очки1,
				ТекСтрока.Очки2);
		КонецЕсли;
		
		ПриростИгрока = мКэф * РассчитатьПрирост(РейтингВыигравшего,РейтингПроигравшего,РасчетВыигравшего);
		ТекСтрока.Прирост = Формат(ПриростИгрока,"ЧЦ=15; ЧДЦ=2");
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

Функция МожноЛиРассчитыватьРейтинг(Первый,Второй)
	
	Если ЗначениеЗаполнено(Первый.Пол) И ЗначениеЗаполнено(Второй.Пол) Тогда
		Если (Первый.Пол = Перечисления.ПолУчастника.Мужской И 
			Второй.Пол = Перечисления.ПолУчастника.Женский)
			Или 
			(Первый.Пол = Перечисления.ПолУчастника.Женский И 
			Второй.Пол = Перечисления.ПолУчастника.Мужской) Тогда
			Возврат Ложь;
		Иначе
			Возврат Истина; //играют или оба мужчины, или женщины
		КонецЕсли; 	
	Иначе
		//тогда возвращаем, что можно
		Возврат Истина;
	КонецЕсли; 
	
КонецФункции

//возвращает прирост рейтинга
//РТв = рейтинг выигравшего
//РТп = рейтинг проигравшего
//Выигравший = расчет производиться для выигравшего
Функция РассчитатьПрирост(РТв,РТп,Выигравший = Истина) Экспорт
	//РТв, РТп
	Если (РТв - РТп) > 100 Тогда //ничего не рассчитываем
		Возврат 0;
	Иначе
		Если Выигравший Тогда
			//Возврат  (100-(ТРв-ТРп))/10;//ПолучитьФормулуРейтинга(ТРв,ТРп,Истина);
			ПРв = 0;
			стрФормула = "ПРв = "+ПолучитьФормулуРейтинга(РТв,РТп,Истина); 
			Попытка
				Выполнить стрФормула;
				Возврат ПРв;
			Исключение
				Возврат ПРв;
			КонецПопытки;
		Иначе
			//Возврат  -(100-(ТРв-ТРп))/20;//ПолучитьФормулуРейтинга(ТРв,ТРп,Ложь);
			ПРв = 0;
			стрФормула = "ПРв = "+ПолучитьФормулуРейтинга(РТв,РТп,Ложь);
			Попытка
				Выполнить стрФормула;
				Возврат ПРв;
			Исключение
				Возврат ПРв;
			КонецПопытки;
		КонецЕсли;
	КонецЕсли;
	
КонецФункции

Функция ПолучитьФормулуРейтинга(РТв,РТп,Выигравший)
	
	//РТв, РТп
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ФормулыРасчетаРейтингаСрезПоследних.Формула
	|ИЗ
	|	РегистрСведений.ФормулыРасчетаРейтинга.СрезПоследних(, ТипПрироста = &ТипПрироста) КАК
	|		ФормулыРасчетаРейтингаСрезПоследних";
	Если Выигравший Тогда
		Запрос.УстановитьПараметр("ТипПрироста", Перечисления.ТипыПриростов.ПриростВыигравшего);
	Иначе
		Запрос.УстановитьПараметр("ТипПрироста", Перечисления.ТипыПриростов.ПриростПроигравшего);
	КонецЕсли;
	Результат = Запрос.Выполнить().Выгрузить();
	Если Результат.Количество() > 0 Тогда
		Возврат Результат[0].Формула;
	Иначе
		Если Выигравший Тогда
			Возврат "(100-(РТв-РТп))/10";
		Иначе
			Возврат " -(100-(РТв-РТп))/20";
		КонецЕсли;
	КонецЕсли;
	
КонецФункции

//ищет рейтинг в списке участников этого документа
Функция НайтиРейтинг(Участник)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ПроведениеСоревнованияСписокУчастников.Участник,
	|	ПроведениеСоревнованияСписокУчастников.ТекущийРейтинг
	|ИЗ
	|	Документ.ПроведениеСоревнования.СписокУчастников КАК ПроведениеСоревнованияСписокУчастников
	|ГДЕ
	|	ПроведениеСоревнованияСписокУчастников.Ссылка = &Ссылка
	|	И ПроведениеСоревнованияСписокУчастников.Участник = &Участник";
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	Запрос.УстановитьПараметр("Участник",Участник);
	Результат = Запрос.Выполнить().Выгрузить();
	Если Результат.Количество() > 0 Тогда
		Возврат Результат[0].ТекущийРейтинг;
	Иначе
		Возврат 0;
	КонецЕсли;

КонецФункции

Процедура ПриЗаписи(Отказ)
	
	// регистр ИсторияСоренований
	Движения.ИсторияСоревнований.Записывать = Истина;
	Движение = Движения.ИсторияСоревнований.Добавить();
	Движение.Период = Дата;
	Движение.ДатаСоревнования = Дата;
	Движение.Представление = НазваниеСоревнования;
	
	Если ОбщийРежимСоревнования = 2 Тогда
		Движения.КомандыСоревнований.Записывать = Истина;
		Для Каждого ТекЗнач Из ТаблицаКоманд Цикл
			НовДвижение = Движения.КомандыСоревнований.Добавить();
			ЗаполнитьЗначенияСвойств(НовДвижение,ТекЗнач);
			НовДвижение.Соревнование = Ссылка;
		КонецЦикла;
	КонецЕсли; 
	
КонецПроцедуры

Процедура ЗаписатьТаблицуИгрСоревнованийДляАналитики()  //регистр Встречи участников
	
	Запрос = Новый Запрос;
	Если ЭтотОбъект.ОбщийРежимСоревнования = 1 Тогда  //быстрый расчет
		Текст = "ВЫБРАТЬ
		|	ПроведениеСоревнованияТаблицаБыстрогоРасчета.Участник1 КАК Выигравший,
		|	ПроведениеСоревнованияТаблицаБыстрогоРасчета.КолПартий1 КАК ОчкиВыигравшего,
		|	ПроведениеСоревнованияТаблицаБыстрогоРасчета.Участник2 КАК Проигравший,
		|	ПроведениеСоревнованияТаблицаБыстрогоРасчета.КолПартий2 КАК ОчкиПроигравшего,
		|	ПроведениеСоревнованияТаблицаБыстрогоРасчета.Ссылка.Дата КАК Период,
		|	ПроведениеСоревнованияТаблицаБыстрогоРасчета.Ссылка КАК Документ,
		|	ПроведениеСоревнованияТаблицаБыстрогоРасчета.НомерСтроки КАК НомерТура
		|ИЗ
		|	Документ.ПроведениеСоревнования.ТаблицаБыстрогоРасчета КАК ПроведениеСоревнованияТаблицаБыстрогоРасчета
		|ГДЕ
		|	ПроведениеСоревнованияТаблицаБыстрогоРасчета.Ссылка = &Ссылка
		|	И ПроведениеСоревнованияТаблицаБыстрогоРасчета.КолПартий1 > ПроведениеСоревнованияТаблицаБыстрогоРасчета.КолПартий2
		|	И ПроведениеСоревнованияТаблицаБыстрогоРасчета.Участник1 <> ЗНАЧЕНИЕ(Справочник.Участники.ПустаяСсылка)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПроведениеСоревнованияТаблицаБыстрогоРасчета.Участник2,
		|	ПроведениеСоревнованияТаблицаБыстрогоРасчета.КолПартий2,
		|	ПроведениеСоревнованияТаблицаБыстрогоРасчета.Участник1,
		|	ПроведениеСоревнованияТаблицаБыстрогоРасчета.КолПартий1,
		|	ПроведениеСоревнованияТаблицаБыстрогоРасчета.Ссылка.Дата,
		|	ПроведениеСоревнованияТаблицаБыстрогоРасчета.Ссылка,
		|	ПроведениеСоревнованияТаблицаБыстрогоРасчета.НомерСтроки
		|ИЗ
		|	Документ.ПроведениеСоревнования.ТаблицаБыстрогоРасчета КАК ПроведениеСоревнованияТаблицаБыстрогоРасчета
		|ГДЕ
		|	ПроведениеСоревнованияТаблицаБыстрогоРасчета.Ссылка = &Ссылка
		|	И ПроведениеСоревнованияТаблицаБыстрогоРасчета.КолПартий2 > ПроведениеСоревнованияТаблицаБыстрогоРасчета.КолПартий1
		|	И ПроведениеСоревнованияТаблицаБыстрогоРасчета.Участник2 <> ЗНАЧЕНИЕ(Справочник.Участники.ПустаяСсылка)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Выигравший";
	//ИначеЕсли ЭтотОбъект.ОбщийРежимСоревнования = 0 Тогда
	Иначе
		Текст= "ВЫБРАТЬ
		|	ПроведениеСоревнованияОбщаяТаблицаДанных.Выигравший КАК Выигравший,
		|	ПроведениеСоревнованияОбщаяТаблицаДанных.Проигравший,
		|	ПроведениеСоревнованияОбщаяТаблицаДанных.РежимТура,
		|	СУММА(ПроведениеСоревнованияОбщаяТаблицаДанных.ОчкиВыигравшего) КАК ОчкиВыигравшего,
		|	СУММА(ПроведениеСоревнованияОбщаяТаблицаДанных.ОчкиПроигравшего) КАК ОчкиПроигравшего,
		|	ПроведениеСоревнованияОбщаяТаблицаДанных.Ссылка.Дата КАК Период,
		|	ПроведениеСоревнованияОбщаяТаблицаДанных.Ссылка КАК Документ,
		|	ПроведениеСоревнованияОбщаяТаблицаДанных.НомерТура,
		|	ПроведениеСоревнованияОбщаяТаблицаДанных.НомерГруппы
		|ПОМЕСТИТЬ втТаблица
		|ИЗ
		|	Документ.ПроведениеСоревнования.ОбщаяТаблицаДанных КАК ПроведениеСоревнованияОбщаяТаблицаДанных
		|ГДЕ
		|	ПроведениеСоревнованияОбщаяТаблицаДанных.Ссылка = &Ссылка
		|	И ПроведениеСоревнованияОбщаяТаблицаДанных.Выигравший <> ЗНАЧЕНИЕ(Справочник.Участники.ПустаяСсылка)
		|	И ПроведениеСоревнованияОбщаяТаблицаДанных.Проигравший <> ЗНАЧЕНИЕ(Справочник.Участники.ПустаяСсылка)
		|
		|СГРУППИРОВАТЬ ПО
		|	ПроведениеСоревнованияОбщаяТаблицаДанных.Выигравший,
		|	ПроведениеСоревнованияОбщаяТаблицаДанных.Проигравший,
		|	ПроведениеСоревнованияОбщаяТаблицаДанных.РежимТура,
		|	ПроведениеСоревнованияОбщаяТаблицаДанных.НомерТура,
		|	ПроведениеСоревнованияОбщаяТаблицаДанных.НомерГруппы,
		|	ПроведениеСоревнованияОбщаяТаблицаДанных.Ссылка.Дата,
		|	ПроведениеСоревнованияОбщаяТаблицаДанных.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втТаблица.Выигравший КАК Выигравший,
		|	втТаблица.Проигравший,
		|	втТаблица.РежимТура,
		|	СУММА(втТаблица.ОчкиВыигравшего) КАК ОчкиВыигравшего,
		|	СУММА(втТаблица.ОчкиПроигравшего) КАК ОчкиПроигравшего,
		|	втТаблица.Период,
		|	втТаблица.Документ,
		|	втТаблица.НомерТура,
		|	втТаблица.НомерГруппы КАК НомерГруппы
		|ИЗ
		|	втТаблица КАК втТаблица
		|
		|СГРУППИРОВАТЬ ПО
		|	втТаблица.Выигравший,
		|	втТаблица.Проигравший,
		|	втТаблица.РежимТура,
		|	втТаблица.Период,
		|	втТаблица.Документ,
		|	втТаблица.НомерТура,
		|	втТаблица.НомерГруппы
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерГруппы,
		|	Выигравший";
	//ИначеЕсли ЭтотОбъект.ОбщийРежимСоревнования = 0 Тогда
	КонецЕсли; 
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	Запрос.Текст = Текст;
	Результат = Запрос.Выполнить().Выгрузить();
	
	НаборЗаписей = РегистрыСведений.ВстречиУчастников.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Документ.Установить(Ссылка);
	Для Каждого ТекЗапись Из Результат Цикл
		ЗаписьНабора = НаборЗаписей.Добавить();
		ЗаписьНабора.Документ = Ссылка;
		ЗаполнитьЗначенияСвойств(ЗаписьНабора,ТекЗапись);
	КонецЦикла;	
	НаборЗаписей.Записать();
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	НаборЗаписей = РегистрыСведений.ВстречиУчастников.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Документ.Установить(Ссылка);
	НаборЗаписей.Прочитать();
	НаборЗаписей.Очистить();
	НаборЗаписей.Записать(Истина);
	
КонецПроцедуры

Процедура ДобавитьБонусыКРасчетнойТаблице(РасчетнаяТаблица)
	
	//добавим к расчетной таблице бонусы
	КопияТаблицы = Бонусы.Выгрузить().Скопировать();
	КопияТаблицы.Свернуть("Участник","КоличествоБонуса");
	Для каждого ТекСтрБонусов Из КопияТаблицы Цикл
		//ищем участника в расчетной таблице
		ИскомыйУчастник = РасчетнаяТаблица.НайтиСтроки(Новый Структура("Участник",ТекСтрБонусов.Участник));
		Если ИскомыйУчастник.Количество() > 0 Тогда
			СтрТаблицы = ИскомыйУчастник[0];
			СтрТаблицы.Бонус = ТекСтрБонусов.КоличествоБонуса;
			СтрТаблицы.НовыйРейтинг = СтрТаблицы.НовыйРейтинг + ТекСтрБонусов.КоличествоБонуса;	
		КонецЕсли; 
	КонецЦикла; 
	
КонецПроцедуры

//ЗАПИСЬ ДАННЫХ ПО МЕСТАМ УЧАСТНИКОВ ЛИЧНЫХ СОРЕВНОВАНИЙ
Процедура ЗаписатьМестаУчастниковПоЭтапам()
	
	Движения.МестаУчастниковСоревнований.Записывать = Истина;
	Для Каждого ТекСтр Из ХодСоревнования Цикл
		НомерТура 	= ТекСтр.НомерСтроки;
		РежимТура	= ТекСтр.РежимТура;
		мОбщаяТаблицаПоТуру = ОбщаяТаблицаДанных.Выгрузить(Новый Структура("НомерТура",НомерТура));
		Если РежимТура = Перечисления.РежимыТуровСоревнования.Групповой Тогда
			КоличествоГруппПоТуру = Документы.ПроведениеСоревнования.ОпределитьКоличествоГрупп(УчастникиПоЖеребьевке.Выгрузить(),НомерТура,Перечисления.РежимыТуровСоревнования.Групповой);
			Для Н = 1 По КоличествоГруппПоТуру Цикл
				ДанныеПоМестамУчастников = Новый ТаблицаЗначений;
				ДанныеПоМестамУчастников.Колонки.Добавить("Участник",Новый ОписаниеТипов("СправочникСсылка.Участники"));
				ДанныеПоМестамУчастников.Колонки.Добавить("Очки",Новый ОписаниеТипов("Число"));
				ДанныеПоМестамУчастников.Колонки.Добавить("Место",Новый ОписаниеТипов("Число"));
				ДанныеПоМестамУчастников.Колонки.Добавить("Соотношение",Новый ОписаниеТипов("Строка"));
			
				КоличествоУчастников = УчастникиПоЖеребьевке.НайтиСтроки(Новый Структура("НомерГруппы,НомерТура,РежимТура",Н,НомерТура,Перечисления.РежимыТуровСоревнования.Групповой));
				//заполним таблицу с местами
				Для Мест = 0 По КоличествоУчастников.ВГраница() Цикл
					НовСтрокаДанных = ДанныеПоМестамУчастников.Добавить();
					НовСтрокаДанных["Участник"] = КоличествоУчастников[Мест].Участник; 
				КонецЦикла;
				ТаблицаСМестами = Документы.ПроведениеСоревнования.РасчетМестНаСервере(ДанныеПоМестамУчастников.Скопировать(,"Участник"),мОбщаяТаблицаПоТуру,НомерТура);
				Для каждого ТекСтрРасчета Из ТаблицаСМестами Цикл
					ИскомаяСтрока = ДанныеПоМестамУчастников.Найти(ТекСтрРасчета.Участник,"Участник");
					Если ИскомаяСтрока <> Неопределено Тогда
						ЗаполнитьЗначенияСвойств(ИскомаяСтрока,ТекСтрРасчета);
					КонецЕсли; 
				КонецЦикла;  
				ДанныеПоМестамУчастников.Сортировать("Место ВОЗВ");
				
				Для Каждого ТекДанныеТаблицы Из ДанныеПоМестамУчастников Цикл
					ТекМестоУчастника = ТекДанныеТаблицы["Место"];
					НовДвижение = Движения.МестаУчастниковСоревнований.Добавить();
					НовДвижение.Регистратор 		= Ссылка;
					НовДвижение.Период 				= Ссылка.Дата;
					НовДвижение.Участник 			= ТекДанныеТаблицы["Участник"];
					НовДвижение.НомерЭтапа		= НомерТура;
					НовДвижение.РежимЭтапа 		= РежимТура;
					НовДвижение.НомерГруппы 	= Н;
					НовДвижение.Место					= ТекМестоУчастника;
					НовДвижение.Комментарий		= ТекСтр.Комментарий;
				КонецЦикла;
			КонецЦикла;
		Иначе //СЕТКИ
			ДанныеПоМестамУчастников = Новый ТаблицаЗначений;
			ДанныеПоМестамУчастников.Колонки.Добавить("Участник",Новый ОписаниеТипов("СправочникСсылка.Участники"));
			ДанныеПоМестамУчастников.Колонки.Добавить("Очки",Новый ОписаниеТипов("Число"));
			ДанныеПоМестамУчастников.Колонки.Добавить("Место",Новый ОписаниеТипов("Число"));
			ДанныеПоМестамУчастников.Колонки.Добавить("Соотношение",Новый ОписаниеТипов("Строка"));
			
			КоличествоУчастников = УчастникиПоЖеребьевке.НайтиСтроки(Новый Структура("НомерТура,РежимТура",НомерТура,РежимТура));
			
			//заполним таблицу с местами
			Для Мест = 0 По КоличествоУчастников.ВГраница() Цикл
				НовСтрокаДанных = ДанныеПоМестамУчастников.Добавить();
				НовСтрокаДанных["Участник"] = КоличествоУчастников[Мест].Участник; 
			КонецЦикла;
			ТаблицаМестИгр = Новый ТаблицаЗначений;
			ТаблицаМестИгр.Колонки.Добавить("НомерИгры");
			//расчет мест
			Если ТекСтр.СеткаНа = 0 Тогда
				ЧислоУчастников = КоличествоУчастников.Количество();
			Иначе
				ЧислоУчастников = ТекСтр.СеткаНа;
			КонецЕсли; 
			Если ЧислоУчастников >= 4 И ЧислоУчастников <= 8 Тогда //схема 8
				Документы.ПроведениеСоревнования.ТаблицаМестКонечныхИгр(ТаблицаМестИгр,РежимТура,8);
			ИначеЕсли ЧислоУчастников > 8 И ЧислоУчастников <= 16 Тогда //схема на 16
				Документы.ПроведениеСоревнования.ТаблицаМестКонечныхИгр(ТаблицаМестИгр,РежимТура,16);
			ИначеЕсли ЧислоУчастников > 16 И ЧислоУчастников <= 24 Тогда
				Документы.ПроведениеСоревнования.ТаблицаМестКонечныхИгр(ТаблицаМестИгр,РежимТура,24);
			ИначеЕсли ЧислоУчастников > 24 И ЧислоУчастников <= 32 Тогда
				Документы.ПроведениеСоревнования.ТаблицаМестКонечныхИгр(ТаблицаМестИгр,РежимТура,32);
			ИначеЕсли ЧислоУчастников > 32 И ЧислоУчастников <= 48 Тогда
				Документы.ПроведениеСоревнования.ТаблицаМестКонечныхИгр(ТаблицаМестИгр,РежимТура,48);
			ИначеЕсли ЧислоУчастников > 48 И ЧислоУчастников <= 64 Тогда
				Документы.ПроведениеСоревнования.ТаблицаМестКонечныхИгр(ТаблицаМестИгр,РежимТура,64);
			КонецЕсли;
			СчМест = 0;
			//вся таблица идет по порядку мест
			Для каждого ТекИгра Из ТаблицаМестИгр Цикл
				//ищем по номеру игры выигравшего и програвшего из общей таблицы
				ДанныеСтрокиТаблицы = мОбщаяТаблицаПоТуру.НайтиСтроки(Новый Структура("НомерГруппы",ТекИгра.НомерИгры));
				Если ДанныеСтрокиТаблицы.Количество() > 0 Тогда
					СчМест = СчМест + 1;
					перемВыигравший = ДанныеСтрокиТаблицы[0].Выигравший;
					//устанавливаем место
					СтрокаСВыигравшим = ДанныеПоМестамУчастников.Найти(перемВыигравший);
					Если СтрокаСВыигравшим <> Неопределено Тогда
						СтрокаСВыигравшим.Место = СчМест;
					КонецЕсли; 
					СчМест = СчМест + 1;
					перемПроигравший = ДанныеСтрокиТаблицы[0].Проигравший;
					СтрокаСПроигрвшим = ДанныеПоМестамУчастников.Найти(перемПроигравший);
					Если СтрокаСПроигрвшим <> Неопределено Тогда
						СтрокаСПроигрвшим.Место = СчМест;
					КонецЕсли; 
				Иначе
					//возможно еще не сыграли
					Продолжить;
				КонецЕсли; 
			КонецЦикла; 
			ДанныеПоМестамУчастников.Сортировать("Место ВОЗВ");
			
			Для Каждого ТекДанныеТаблицы Из ДанныеПоМестамУчастников Цикл
				ТекМестоУчастника = ТекДанныеТаблицы.Место;
				НовДвижение = Движения.МестаУчастниковСоревнований.Добавить();
				НовДвижение.Регистратор 		= Ссылка;
				НовДвижение.Период 			= Ссылка.Дата;
				НовДвижение.Участник 			= ТекДанныеТаблицы.Участник;
				НовДвижение.НомерЭтапа		= НомерТура;
				НовДвижение.РежимЭтапа 		= РежимТура;
				НовДвижение.Место				= ТекМестоУчастника;
				НовДвижение.Комментарий		= ТекСтр.Комментарий;
			КонецЦикла; 	
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры
