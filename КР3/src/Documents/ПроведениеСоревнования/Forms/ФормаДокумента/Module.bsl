
#Область Переменные

&НаКлиенте
Перем глКолПартий;
&НаКлиенте
Перем мДанныеСтроки;
&НаКлиенте 
Перем мСтНазваниеКоманды;
&НаКлиенте
Перем мНомерУдаляемойСтрокиИзХодаСоревнований;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Если Параметры.Свойство("ДатаКалендаря") Тогда
		Объект.Дата = Параметры.ДатаКалендаря;
	КонецЕсли;
	Если Параметры.Ключ.Пустая() и Не ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда
		Объект.Ответственный 		= ПараметрыСеанса.ТекущийПользователь;
		Объект.ДатаНачала    		= НачалоДня(Объект.Дата)+10*60*60;
		Объект.ДатаОкончания 		= НачалоДня(Объект.Дата)+22*60*60;
		Объект.НумерацияВСетке 		= Константы.НумерацияУчастниковВСетке.Получить();
		Объект.КолСтолов			= Константы.КоличествоСтоловКлуба.Получить();
		Объект.ВидРейтинга			= Константы.ВидРейтинга.Получить();
	Иначе
		Если ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда // это копирование
			// обновим рейтинг участников
			Для каждого ТекСтр Из Объект.СписокУчастников Цикл
				ТекСтр.ТекущийРейтинг = СерверныеСервер.ПолучитьТекущийРейтингУчастника(ТекСтр.Участник, ТекущаяДатаСеанса(), Объект.ВидРейтинга);
			КонецЦикла;
			Если Объект.ОбщийРежимСоревнования = 0 Тогда
				Объект.ОбщаяТаблицаДанных.Очистить();
			ИначеЕсли Объект.ОбщийРежимСоревнования = 1 Тогда
				Объект.ТаблицаБыстрогоРасчета.Очистить();
			ИначеЕсли Объект.ОбщийРежимСоревнования = 2 Тогда
				Объект.ОбщаяТаблицаДанныхПоКомандам.Очистить();
				Для каждого ТекСтр Из Объект.ТаблицаКоманд Цикл
					ТекСтр.ТекущийРейтинг = СерверныеСервер.ПолучитьТекущийРейтингУчастника(ТекСтр.Участник, ТекущаяДатаСеанса(), Объект.ВидРейтинга);
				КонецЦикла;
			КонецЕсли; 
			ЭтотОбъект.Модифицированность = Истина;
		Иначе
			Если Объект.НумерацияВСетке.Пустая() Тогда
				Объект.НумерацияВСетке = Перечисления.НумерацияВСетке.ПоПорядку;
			КонецЕсли;
			Если Объект.ОбщийРежимСоревнования = 1 Тогда
				ОбновитьНовыйРейтингВСпискеУчастников();
			Иначе
				Элементы.СписокУчастниковНовыйРейтинг.Видимость = Ложь;
			КонецЕсли;
		КонецЕсли; 
	КонецЕсли;
	фКоличествоУчастниковДляПодсчета = Константы.КоличествоУчастниковДляПодсчетаСреднегоРейтинга.Получить();
	ОбновитьКнопкуПроведения();
	ОбработатьФормуПриИзмененииРежима();
	РассчитатьСреднийРейтинг();
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
		
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если Объект.ОбщийРежимСоревнования = 2 Тогда
		Для Каждого ТекСтр Из фТаблицаКоманд Цикл
			ОбновитьИтоговыйРейтингПоКоманде(ТекСтр.НазваниеКоманды);
		КонецЦикла; 
	КонецЕсли;
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если Не ЗавершениеРаботы Тогда
		СерверныеСервер.УдалитьВсеТекущиеВстречи(ЭтотОбъект.УникальныйИдентификатор);
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура СписокУчастниковПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
 	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ХодСоревнованияПередУдалением(Элемент, Отказ)
	
	ТекСтрока = Элементы.ХодСоревнования.ТекущиеДанные;
	Если ТекСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
		
	мНомерУдаляемойСтрокиИзХодаСоревнований = ТекСтрока.НомерСтроки;
	
	// проверяем есть ли данные по жеребьевке
	Данные = Новый Структура;
	Данные.Вставить("РежимТура",ТекСтрока.РежимТура);
	Данные.Вставить("НомерТура",ТекСтрока.НомерСтроки);
	МассивВЖеребьевке = Объект.УчастникиПоЖеребьевке.НайтиСтроки(Данные);
	МассивВОбщейТаблице = Объект.ОбщаяТаблицаДанных.НайтиСтроки(Данные);
	
	Если МассивВЖеребьевке.Количество() > 0 Или МассивВОбщейТаблице.Количество() > 0 Тогда
		Отказ = Истина;
		ПоказатьВопрос(Новый ОписаниеОповещения("ХодСоревнованияПередУдалениемЗавершение", ЭтотОбъект,
			Новый Структура("ТекСтрока", ТекСтрока)), "Все данные по этапу будут удалены. Удалить?",
			РежимДиалогаВопрос.ДаНет);
	Иначе
		Модифицированность = Истина;
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ХодСоренованияРежимТураОткрытие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Если Элементы.ХодСоревнования.ТекущиеДанные.РежимТура <> ПредопределенноеЗначение("Перечисление.РежимыТуровСоревнования.ПустаяСсылка") Тогда
		ПроведениеСоревнования();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ХодСоревнованияПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	ТекСтрока = Элементы.ХодСоревнования.ТекущиеДанные;
	Если Элемент.ТекущийЭлемент.Имя = "ХодСоревнованияРежимТура" Тогда
		мДанныеСтроки = Новый Структура;
		мДанныеСтроки.Вставить("РежимТура",ТекСтрока.РежимТура);
		мДанныеСтроки.Вставить("НомерТура",ТекСтрока.НомерСтроки);
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ХодСоревнованияПриАктивизацииЯчейки(Элемент)
	Если Элементы.ХодСоревнования.ТекущиеДанные <> Неопределено Тогда
		ТекСтрока = Элементы.ХодСоревнования.ТекущиеДанные;
		МассивСтрок = Объект.УчастникиПоЖеребьевке.НайтиСтроки(Новый Структура("НомерТура,РежимТура",ТекСтрока.НомерСтроки,ТекСтрока.РежимТура));
		Если МассивСтрок.Количество() > 0 Тогда
			Элементы.ХодСоревнованияРезультатЖеребьевки.Доступность = Истина;
		Иначе
			Элементы.ХодСоревнованияРезультатЖеребьевки.Доступность = Ложь;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СписокУчастниковПослеУдаления(Элемент)
	РассчитатьСреднийРейтинг();
КонецПроцедуры

&НаКлиенте
Процедура СписокУчастниковТекущийРейтингПриИзменении(Элемент)
	
	РассчитатьСреднийРейтинг();
	Если Объект.ОбщийРежимСоревнования <> 2 Тогда
		ТекСтрока = Элемент.Родитель.ТекущиеДанные;
		МассивСтрок = Объект.ТаблицаБыстрогоРасчета.НайтиСтроки(Новый Структура("Участник1",ТекСтрока.Участник));
		Для каждого ТекСтр Из МассивСтрок Цикл
			ТекСтр.ТекущийРейтинг1 = ТекСтрока.ТекущийРейтинг;
		КонецЦикла; 
		МассивСтрок2 = Объект.ТаблицаБыстрогоРасчета.НайтиСтроки(Новый Структура("Участник2",ТекСтрока.Участник));
		Для каждого ТекСтр Из МассивСтрок2 Цикл
			ТекСтр.ТекущийРейтинг2 = ТекСтрока.ТекущийРейтинг;
		КонецЦикла; 
		
		МассивСтрок3 = Объект.УчастникиПоЖеребьевке.НайтиСтроки(Новый Структура("Участник",ТекСтрока.Участник));
		Для каждого ТекСтр Из МассивСтрок3 Цикл
			ТекСтр.ТекущийРейтинг = ТекСтрока.ТекущийРейтинг;
		КонецЦикла; 
		
		ПересчитатьВсеСтрокиБыстрогоРасчета();
		Модифицированность = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаБыстрогоРасчетаУчастник1НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	АдресДанных = ВернутьАдресСпискаУчастников();
	ОткрытьФорму("Документ.ПроведениеСоревнования.Форма.СписокУчастниковДляБыстрогоРежима",
	Новый Структура("Адрес,ИсточникВызова,ТаблицаВызова",АдресДанных,1,"БыстрыйРасчет"),ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаБыстрогоРасчетаУчастник1ПриИзменении(Элемент)
	ТекСтрока = Элементы.ТаблицаБыстрогоРасчета.ТекущиеДанные;
	ТекСтрока.ТекущийРейтинг1 = ПоискРейтингаУчастника(ТекСтрока.Участник1);
	Если ПроверитьЗаполненностьУчастниковВСтроке() Тогда
		ПерерасчитатьПриростыИИтоговыйРейтинг();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаБыстрогоРасчетаУчастник2НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	АдресДанных = ВернутьАдресСпискаУчастников();
	ОткрытьФорму("Документ.ПроведениеСоревнования.Форма.СписокУчастниковДляБыстрогоРежима",
		Новый Структура("Адрес,ИсточникВызова,ТаблицаВызова",АдресДанных,2,"БыстрыйРасчет"),ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаБыстрогоРасчетаУчастник2ПриИзменении(Элемент)
	ТекСтрока = Элементы.ТаблицаБыстрогоРасчета.ТекущиеДанные;
	ТекСтрока.ТекущийРейтинг2 = ПоискРейтингаУчастника(ТекСтрока.Участник2);
	Если ПроверитьЗаполненностьУчастниковВСтроке() Тогда
		ПерерасчитатьПриростыИИтоговыйРейтинг();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаБыстрогоРасчетаУчастник1Очистка(Элемент, СтандартнаяОбработка)
	Элементы.ТаблицаБыстрогоРасчета.ТекущиеДанные.ТекущийРейтинг1 = 0;
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаБыстрогоРасчетаУчастник2Очистка(Элемент, СтандартнаяОбработка)
	Элементы.ТаблицаБыстрогоРасчета.ТекущиеДанные.ТекущийРейтинг2 = 0;
КонецПроцедуры

&НаКлиенте
Процедура КоэффПриИзменении(Элемент)
	
	Если Объект.ОбщийРежимСоревнования = 1 Тогда
		ПересчитатьВсеСтрокиБыстрогоРасчета();	
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаБыстрогоРасчетаКолПартий1ПриИзменении(Элемент)
	
	Если ПроверитьЗаполненностьУчастниковВСтроке() Тогда
		ПерерасчитатьПриростыИИтоговыйРейтинг();
		//установим следующую колонку
		НомерЭлемента = Число(Прав(Элемент.Имя,1));
		Если НомерЭлемента = 1 Тогда
			Элементы.ТаблицаБыстрогоРасчета.ТекущийЭлемент = Элементы.ТаблицаБыстрогоРасчетаКолПартий2;
		Иначе
			Элементы.ТаблицаБыстрогоРасчета.ТекущийЭлемент = Элементы.ТаблицаБыстрогоРасчетаКолПартий1;
		КонецЕсли; 
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаБыстрогоРасчетаПослеУдаления(Элемент)
	ОбновитьНовыйРейтингВСпискеУчастников();
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаБыстрогоРасчетаУчастник1АвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ДанныеВыбора = ВозвратДанных(ПодготовитьДанныеДляПоиска(Текст));
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаБыстрогоРасчетаУчастник1ОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ТекСтрока = Элементы.ТаблицаБыстрогоРасчета.ТекущиеДанные;
	ТекСтрока.Участник1 = ВыбранноеЗначение;
	ТекСтрока.ТекущийРейтинг1 = ПоискРейтингаУчастника(ВыбранноеЗначение);
	Если ПроверитьЗаполненностьУчастниковВСтроке() Тогда
		ПерерасчитатьПриростыИИтоговыйРейтинг();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаБыстрогоРасчетаУчастник1ОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ДанныеВыбора = ВозвратДанных(ПодготовитьДанныеДляПоиска(Текст));
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаБыстрогоРасчетаУчастник2ОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ДанныеВыбора = ВозвратДанных(ПодготовитьДанныеДляПоиска(Текст));
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаБыстрогоРасчетаУчастник2АвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ДанныеВыбора = ВозвратДанных(ПодготовитьДанныеДляПоиска(Текст));
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаБыстрогоРасчетаУчастник2ОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ТекСтрока = Элементы.ТаблицаБыстрогоРасчета.ТекущиеДанные;
	ТекСтрока.Участник2 = ВыбранноеЗначение;
	ТекСтрока.ТекущийРейтинг2 = ПоискРейтингаУчастника(ВыбранноеЗначение);
	Если ПроверитьЗаполненностьУчастниковВСтроке() Тогда
		ПерерасчитатьПриростыИИтоговыйРейтинг();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура БонусыУчастникАвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ДанныеВыбора = ВозвратДанных(ПодготовитьДанныеДляПоиска(Текст));
КонецПроцедуры

&НаКлиенте
Процедура БонусыУчастникОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ДанныеВыбора = ВозвратДанных(ПодготовитьДанныеДляПоиска(Текст));
КонецПроцедуры

&НаКлиенте
Процедура БонусыУчастникНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Если Объект.ОбщийРежимСоревнования = 0 Или Объект.ОбщийРежимСоревнования = 1 Тогда
		АдресДанных = ПоместитьВоВременноеХранилище(Объект.СписокУчастников);
	ИначеЕсли Объект.ОбщийРежимСоревнования = 2 Тогда
		АдресДанных = ПоместитьВоВременноеХранилище(Объект.ТаблицаКоманд);
	КонецЕсли; 
	ОткрытьФорму("Документ.ПроведениеСоревнования.Форма.СписокУчастниковДляБыстрогоРежима",
		Новый Структура("Адрес,ИсточникВызова,ТаблицаВызова",АдресДанных,1,"Бонусы"),ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура БонусыУчастникОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ТекСтрока = Элементы.Бонусы.ТекущиеДанные;
	Если ТекСтрока <> Неопределено Тогда
		ТекСтрока.Участник = ВыбранноеЗначение;
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ОбщийРежимСоревнованияПриИзменении(Элемент)
	
	Модифицированность = Истина;
	ОбработатьФормуПриИзмененииРежима();
	
КонецПроцедуры
&НаКлиенте
Процедура ХодСоревнованияКомандыКолПартийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Список = Новый СписокЗначений;
	Список.Добавить(3);
	Список.Добавить(5);
	Список.Добавить(7);

	ЭтотОбъект.ПоказатьВыборИзСписка(Новый ОписаниеОповещения("ХодСоревнованияКомандыКолПартийНачалоВыбораЗавершение", ЭтотОбъект), Список);
	
КонецПроцедуры

&НаКлиенте
Процедура ХодСоревнованияКомандыПриАктивизацииЯчейки(Элемент)
	Если Элементы.ХодСоревнованияКоманды.ТекущиеДанные <> Неопределено Тогда
		ТекСтрока = Элементы.ХодСоревнованияКоманды.ТекущиеДанные;
		МассивСтрок = Объект.КомандыПоЖеребьевке.НайтиСтроки(Новый Структура("НомерТура,РежимТура",
			ТекСтрока.НомерСтроки, ТекСтрока.РежимТура));
		Если МассивСтрок.Количество() > 0 Тогда
			Элементы.ХодСоревнованияКомандыРезультатЖеребьевкиКоманд.Доступность = Истина;
		Иначе
			Элементы.ХодСоревнованияКомандыРезультатЖеребьевкиКоманд.Доступность = Ложь;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ХодСоревнованияКомандыПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	ТекСтрока = Элементы.ХодСоревнованияКоманды.ТекущиеДанные;
	Если Элемент.ТекущийЭлемент.Имя = "ХодСоревнованияКомандыРежимТура" Тогда
		мДанныеСтроки = Новый Структура;
		мДанныеСтроки.Вставить("РежимТура", ТекСтрока.РежимТура);
		мДанныеСтроки.Вставить("НомерТура", ТекСтрока.НомерСтроки);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура фТаблицаКомандПриАктивизацииСтроки(Элемент)
	
	ТекСтрока = Элементы.фТаблицаКоманд.ТекущиеДанные;
	Если ТекСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ТекКоманда = ТекСтрока.НазваниеКоманды;
	Если ПустаяСтрока(ТекКоманда) Тогда
		втКоманда = Лев(Строка(Новый УникальныйИдентификатор),10);
	Иначе
		втКоманда = ТекКоманда;
	КонецЕсли; 
	Отбор = Новый ФиксированнаяСтруктура("НазваниеКоманды",втКоманда);
	Элементы.ТаблицаКоманд1.ОтборСтрок = Отбор;
	Элементы.ПредставителиКоманд.ОтборСтрок = Отбор;
	ОбновитьИтоговыйРейтингПоКоманде();
	
КонецПроцедуры

&НаКлиенте
Процедура фТаблицаКомандНазваниеКомандыПриИзменении(Элемент)
	
	ТекСтрКоманды = Элементы.фТаблицаКоманд.ТекущиеДанные;
	Если ТекСтрКоманды.НазваниеКоманды <> мСтНазваниеКоманды  Тогда
		ЭтотОбъект.Модифицированность = Истина;
		//ищем строки команды по старому названию
		Отбор = Новый Структура("НазваниеКоманды",мСтНазваниеКоманды);
		МассивСтрок = Объект.ТаблицаКоманд.НайтиСтроки(Отбор);
		Для каждого ТекСтр Из МассивСтрок Цикл
			ТекСтр.НазваниеКоманды = ТекСтрКоманды.НазваниеКоманды; 
		КонецЦикла;
		МассивСтрок = Объект.КомандыПоЖеребьевке.НайтиСтроки(Отбор);
		Для каждого ТекСтр Из МассивСтрок Цикл
			ТекСтр.НазваниеКоманды = ТекСтрКоманды.НазваниеКоманды; 
		КонецЦикла;
		МассивСтрок = Объект.ПредставителиКоманд.НайтиСтроки(Отбор);
		Для каждого ТекСтр Из МассивСтрок Цикл
			ТекСтр.НазваниеКоманды = ТекСтрКоманды.НазваниеКоманды; 
		КонецЦикла;
		МассивСтрок = Объект.ЖеребьевкаУчастниковКоманд.НайтиСтроки(Новый Структура("Команда1",мСтНазваниеКоманды));
		Для каждого ТекСтр Из МассивСтрок Цикл
			ТекСтр.Команда1 = ТекСтрКоманды.НазваниеКоманды; 
		КонецЦикла;
		МассивСтрок = Объект.ЖеребьевкаУчастниковКоманд.НайтиСтроки(Новый Структура("Команда2",мСтНазваниеКоманды));
		Для каждого ТекСтр Из МассивСтрок Цикл
			ТекСтр.Команда2 = ТекСтрКоманды.НазваниеКоманды; 
		КонецЦикла;
		МассивСтрок = Объект.ОбщаяТаблицаДанныхПоКомандам.НайтиСтроки(Новый Структура("Команда1",мСтНазваниеКоманды));
		Для каждого ТекСтр Из МассивСтрок Цикл
			ТекСтр.Команда1 = ТекСтрКоманды.НазваниеКоманды; 
		КонецЦикла;
		МассивСтрок = Объект.ОбщаяТаблицаДанныхПоКомандам.НайтиСтроки(Новый Структура("Команда2",мСтНазваниеКоманды));
		Для каждого ТекСтр Из МассивСтрок Цикл
			ТекСтр.Команда2 = ТекСтрКоманды.НазваниеКоманды; 
		КонецЦикла;
	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура фТаблицаКомандНазваниеКомандыОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	
	ТекКоманда = Текст;
	
КонецПроцедуры

&НаКлиенте
Процедура фТаблицаКомандПередУдалением(Элемент, Отказ)
	
	ТекСтр = Элементы.фТаблицаКоманд.ТекущиеДанные;
	Отбор = Новый Структура("НазваниеКоманды",ТекСтр.НазваниеКоманды);
	МассивСтрок = Объект.ТаблицаКоманд.НайтиСтроки(Отбор);
	Для каждого ТекСтрМассива Из МассивСтрок Цикл
		Объект.ТаблицаКоманд.Удалить(ТекСтрМассива) 
	КонецЦикла;
	ЭтотОбъект.Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаКоманд1ПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаКоманд1ПослеУдаления(Элемент)
	ОбновитьИтоговыйРейтингПоКоманде();
КонецПроцедуры

&НаКлиенте
Процедура ХодСоревнованияКомандыПередУдалением(Элемент, Отказ)
	
	ТекСтрока = Элементы.ХодСоревнованияКоманды.ТекущиеДанные;
	Если ТекСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	//проверяем есть ли данные по жеребьевке
	Данные = Новый Структура;
	Данные.Вставить("РежимТура",ТекСтрока.РежимТура);
	Данные.Вставить("НомерТура",ТекСтрока.НомерСтроки);
	МассивВЖеребьевке = Объект.КомандыПоЖеребьевке.НайтиСтроки(Данные);
	МассивВОбщейТаблице = Объект.ОбщаяТаблицаДанныхПоКомандам.НайтиСтроки(Данные);
	
	Если МассивВЖеребьевке.Количество() > 0 Или МассивВОбщейТаблице.Количество() > 0 Тогда
		ПоказатьВопрос(Новый ОписаниеОповещения("ХодСоревнованияКомандыПередУдалениемЗавершение", ЭтотОбъект,
			Новый Структура("ТекСтрока", ТекСтрока)), "Все данные по этапу будут удалены. Удалить?",
			РежимДиалогаВопрос.ДаНет);
	Иначе
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаКоманд1ОкончаниеПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка)
	ОбновитьИтоговыйРейтингПоКоманде();	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаКоманд1ТекущийРейтингПриИзменении(Элемент)
	ОбновитьИтоговыйРейтингПоКоманде();
КонецПроцедуры

&НаКлиенте
Процедура фТаблицаКомандПередНачаломИзменения(Элемент, Отказ)
	
	ТекСтрока = Элементы.фТаблицаКоманд.ТекущиеДанные;
	мСтНазваниеКоманды = ТекСтрока.НазваниеКоманды;
	
КонецПроцедуры

&НаКлиенте
Процедура ХодСоренованияРежимТураПриИзменении(Элемент)
	
	ХодСоренованияРежимТураОткрытие(Элемент,Истина);	
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийЭлементовФормы

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПодборУчастников(Команда)
	Если Параметры.Ключ.Пустая() Тогда
		ДокНовый = Истина;
	Иначе
		ДокНовый = Ложь;
	КонецЕсли;
	Если Объект.ОбщийРежимСоревнования = 2 Тогда
		ТекСтрокаКоманд = Элементы.фТаблицаКоманд.ТекущиеДанные;
		Если ТекСтрокаКоманд <> Неопределено Тогда
			ТекКоманда = ТекСтрокаКоманд.НазваниеКоманды;
		Иначе
			ТекКоманда = "";
		КонецЕсли; 
	КонецЕсли; 
	ПараметрыФормы = Новый Структура("Соревнование,Новый,ТекКоманда",Объект,ДокНовый,ТекКоманда);
	ОткрытьФорму("Документ.ПроведениеСоревнования.Форма.ПодборУчастников",ПараметрыФормы,ЭтотОбъект,Новый УникальныйИдентификатор,,,,СерверныеСервер.ПолучитьРежимОткрытияФормыПодбора());
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьЗакладки(Команда)
	
	Если Элементы.ФормаПоказатьЗакладки.Пометка Тогда
		//скрываем закладки
		Элементы.ДополнительнаяСтраница.Видимость = Ложь;
		Элементы.ФормаПоказатьЗакладки.Пометка = Ложь;
	Иначе
		Элементы.ДополнительнаяСтраница.Видимость = Истина;
		Элементы.ФормаПоказатьЗакладки.Пометка = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПосмотретьЭтап(Команда)
	Если Элементы.ХодСоревнования.ТекущиеДанные <> Неопределено Тогда
		Если Элементы.ХодСоревнования.ТекущиеДанные.РежимТура <> ПредопределенноеЗначение("Перечисление.РежимыТуровСоревнования.ПустаяСсылка") Тогда
			ПроведениеСоревнования();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура РезультатЖеребьевки(Команда)
	
	ДанныеСтроки = Элементы.ХодСоревнования.ТекущиеДанные;	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("НомерТура",ДанныеСтроки.НомерСтроки);
	ПараметрыФормы.Вставить("ОбъектДок",Объект);
	ПараметрыФормы.Вставить("РежимТура",ДанныеСтроки.РежимТура);
	ПараметрыФормы.Вставить("Коммент",ДанныеСтроки.Комментарий);
	ПараметрыФормы.Вставить("КолПартий",ДанныеСтроки.КолПартий);
	ПараметрыФормы.Вставить("Команда",Команда.Имя);
	ПараметрыФормы.Вставить("ВидСоревнований",ПредопределенноеЗначение("Перечисление.ВидыСоревнований.Личные"));
	ПараметрыФормы.Вставить("СеткаНа",ДанныеСтроки.СеткаНа);
	глКолПартий = ДанныеСтроки.КолПартий;
	ОткрытьФорму("Документ.ПроведениеСоревнования.Форма.УниверсальнаяФормаЖеребьевки",ПараметрыФормы,ЭтотОбъект,Новый УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаРассчитатьРейтинг(Команда)
	ЭтотОбъект.Записать(Новый Структура("РежимЗаписи",РежимЗаписиДокумента.Проведение));
КонецПроцедуры

&НаКлиенте
Процедура КомандаДобавить(Команда)
	НовСтрока = Объект.ХодСоревнования.Добавить();
	НовСтрока.КолПартий = 3;
КонецПроцедуры

&НаКлиенте
Процедура КомандаУдалитьВсехУчастников(Команда)
	
	Объект.СписокУчастников.Очистить();
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаУдалитьЖеребьевку(Команда)
	
	ТекСтрока = Элементы.ХодСоревнования.ТекущиеДанные;
	Если ТекСтрока <> Неопределено Тогда
		УдалитьДанныеПоЭтапуНаКлиенте(ТекСтрока.НомерСтроки, ,Ложь, Ложь);
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаУдалитьИгры(Команда)
	
	ТекСтрока = Элементы.ХодСоревнования.ТекущиеДанные;
	Если ТекСтрока <> Неопределено Тогда
		УдалитьДанныеПоЭтапуНаКлиенте(ТекСтрока.НомерСтроки, Ложь, , Ложь);
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаУдалитьЖеребьевкуИИгры(Команда)
	
	Для Каждого ТекЭтап Из Объект.ХодСоревнования Цикл
		УдалитьДанныеПоЭтапуНаКлиенте(ТекЭтап.НомерСтроки, Истина, Истина, Ложь);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаЭкспортИзExcel(Команда)
	ОткрытьФорму("Документ.ПроведениеСоревнования.Форма.НастройкиЭкспортаСписка", , ЭтотОбъект, , , ,
		Новый ОписаниеОповещения("ПослеВыбораНастроекЗагрузки", ЭтотОбъект));
КонецПроцедуры
 
&НаКлиенте
Процедура КомандаЗаполнитьБонусы(Команда)
	
	Если Объект.ОбщийРежимСоревнования = 0 Тогда
		Если Объект.Бонусы.Количество() > 0 Тогда
			ПоказатьВопрос(Новый ОписаниеОповещения("КомандаЗаполнитьБонусыЗавершение2", ЭтотОбъект),
				"Уже есть заполненные бонусы, они будут очищены.Продолжить?", РежимДиалогаВопрос.ДаНет);
		КонецЕсли;
		Если Объект.ХодСоревнования.Количество() = 0 Тогда
			Возврат;
		КонецЕсли; 
		СписокЭтапов = Новый СписокЗначений;
		Для каждого ТекЭтап Из Объект.ХодСоревнования Цикл
			ПредставлениеЭтапа = ?(ТекЭтап.Комментарий = "",
			""+ТекЭтап.НомерСтроки+" "+ТекЭтап.РежимТура,ТекЭтап.Комментарий);
			СписокЭтапов.Добавить(ТекЭтап.НомерСтроки,ПредставлениеЭтапа);
		КонецЦикла;
		Если СписокЭтапов.Количество() = 1 Тогда
			ВыбранныйЭтап = Новый Структура("Значение",1);
		Иначе
			СписокЭтапов.ПоказатьВыборЭлемента(Новый ОписаниеОповещения("КомандаЗаполнитьБонусыЗавершение1", ЭтотОбъект), "Выберите этап для бонусов...");
            Возврат;
		КонецЕсли; 
		КомандаЗаполнитьБонусыФрагмент1(ВыбранныйЭтап);
	Иначе
		ПоказатьОповещениеПользователя("Внимание",,"Заполнение не доступно для командных соревнований",БиблиотекаКартинок.Информация);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОткрытьТурКомандный(Команда)
	
	Если Элементы.ХодСоревнованияКоманды.ТекущиеДанные <> Неопределено Тогда
		Если Элементы.ХодСоревнованияКоманды.ТекущиеДанные.РежимТура <> ПредопределенноеЗначение("Перечисление.РежимыТуровСоревнования.ПустаяСсылка") Тогда
			ДанныеСтроки = Элементы.ХодСоревнованияКоманды.ТекущиеДанные;
			Если ДанныеСтроки.КолПартий = 0 Тогда
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = "Заполните кол-во партий!";
				Сообщение.Сообщить();
				Возврат;
			КонецЕсли;
			ПараметрыФормы = Новый Структура;
			ПараметрыФормы.Вставить("НомерТура",ДанныеСтроки.НомерСтроки);
			ПараметрыФормы.Вставить("ОбъектДок",Объект);
			ПараметрыФормы.Вставить("РежимТура",ДанныеСтроки.РежимТура);
			ПараметрыФормы.Вставить("Коммент",ДанныеСтроки.Комментарий);
			ПараметрыФормы.Вставить("КолПартий",ДанныеСтроки.КолПартий);
			ПараметрыФормы.Вставить("ВидСоревнований",ПредопределенноеЗначение("Перечисление.ВидыСоревнований.Командные"));
			ПараметрыФормы.Вставить("ЖеребьевкаКоманд",ДанныеСтроки.Жеребьевка);
			глКолПартий = ДанныеСтроки.КолПартий;
			// проверим данные по туру если они есть то просто откроем форму проведения по режиму
			Отбор = Новый Структура;
			Отбор.Вставить("РежимТура",ДанныеСтроки.РежимТура);
			Отбор.Вставить("НомерТура",ДанныеСтроки.НомерСтроки);
			ИскомыеСтроки = Объект.КомандыПоЖеребьевке.НайтиСтроки(Отбор);
			Если ИскомыеСтроки.Количество() > 0 Тогда
				Если ДанныеСтроки.РежимТура = ПредопределенноеЗначение("Перечисление.РежимыТуровСоревнования.Групповой") Тогда 
					ОткрытьФорму("Документ.ПроведениеСоревнования.Форма.ФормаПроведенияСоревнованияКоманды",ПараметрыФормы,ЭтотОбъект,Новый УникальныйИдентификатор);
				Иначе
					ОткрытьФорму("Документ.ПроведениеСоревнования.Форма.ФормаМинус2ИОлимпийкаКоманды",ПараметрыФормы,ЭтотОбъект,Новый УникальныйИдентификатор);
				КонецЕсли;
			Иначе
				ОткрытьФорму("Документ.ПроведениеСоревнования.Форма.УниверсальнаяФормаЖеребьевки",ПараметрыФормы,ЭтотОбъект,Новый УникальныйИдентификатор);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьБыстрыйРасчет(Команда)
	ПоказатьВопрос(Новый ОписаниеОповещения("ОчиститьБыстрыйРасчетЗавершение", ЭтотОбъект),
		"Будут очищены все игры в быстром режиме. Очистить?", РежимДиалогаВопрос.ДаНет);
КонецПроцедуры

&НаКлиенте
Процедура КомандаОбновитьРейтинг(Команда)
	мТекДата = СерверныеСервер.ДатаСеанса();
	ПоказатьВводДаты(Новый ОписаниеОповещения("КомандаОбновитьРейтингЗавершение", ЭтотОбъект,
		Новый Структура("мТекДата", мТекДата)), мТекДата, "Рейтинг будет обновлен на", ЧастиДаты.Дата);
КонецПроцедуры

&НаКлиенте
Процедура КомандаПеренестиЛичныеИгрыВБыстрыйРасчет(Команда)
	
	СписокТуров = Новый СписокЗначений;
	Для Каждого ТекЭтап Из Объект.ХодСоревнования Цикл
		ПредставлениеТура = "";
		Если ЗначениеЗаполнено(ТекЭтап.Комментарий) Тогда
			ПредставлениеТура = "" + ТекЭтап.НомерСтроки + " " + ТекЭтап.Комментарий;
		Иначе
			ПредставлениеТура = "" + ТекЭтап.НомерСтроки + " " + Строка(ТекЭтап.РежимТура);
		КонецЕсли;
		СписокТуров.Добавить(ТекЭтап.НомерСтроки, ПредставлениеТура, Истина);
	КонецЦикла;
	Если СписокТуров.Количество() > 0 Тогда
		СписокТуров.ПоказатьОтметкуЭлементов(
			Новый ОписаниеОповещения("КомандаПеренестиЛичныеИгрыВБыстрыйРасчетЗавершение1", ЭтотОбъект,
			Новый Структура("СписокТуров", СписокТуров)), "Выберите этапы для переноса.");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаДобавитьТурКомандные(Команда)
	НовСтрока = Объект.ХодСоревнованияКоманды.Добавить();
	НовСтрока.КолПартий = 3;
КонецПроцедуры
 
&НаКлиенте
Процедура РезультатЖеребьевкиКоманд(Команда)
	ДанныеСтроки = Элементы.ХодСоревнованияКоманды.ТекущиеДанные;
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("НомерТура", ДанныеСтроки.НомерСтроки);
	ПараметрыФормы.Вставить("ОбъектДок", Объект);
	ПараметрыФормы.Вставить("РежимТура", ДанныеСтроки.РежимТура);
	ПараметрыФормы.Вставить("Коммент", ДанныеСтроки.Комментарий);
	ПараметрыФормы.Вставить("КолПартий", ДанныеСтроки.КолПартий);
	ПараметрыФормы.Вставить("Команда", "РезультатЖеребьевки");
	ПараметрыФормы.Вставить("ВидСоревнований", ПредопределенноеЗначение("Перечисление.ВидыСоревнований.Командные"));
	ПараметрыФормы.Вставить("ЖеребьевкаКоманд", ДанныеСтроки.Жеребьевка);
	ОткрытьФорму("Документ.ПроведениеСоревнования.Форма.УниверсальнаяФормаЖеребьевки", ПараметрыФормы, ЭтотОбъект,
		Новый УникальныйИдентификатор);
КонецПроцедуры

&НаКлиенте
Процедура КомандаДобавитьПредставителя(Команда)
	
	НовСтрока = Объект.ПредставителиКоманд.Добавить();
	НовСтрока.НазваниеКоманды = ТекКоманда;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаСдвинутьВверх(Команда)
	СдвинутьСтрокуТаблицыКоманды(-1);
КонецПроцедуры

&НаКлиенте
Процедура КомандаСдвинутьВниз(Команда)
	СдвинутьСтрокуТаблицыКоманды(1);
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьКомандыИзИстории(Команда)
	ПараметрыДляФормы = Новый Структура("СписокКоманд",ПолучитьСписокКоманд());
	ОткрытьФорму("Документ.ПроведениеСоревнования.Форма.ИсторияСоставовКоманд",ПараметрыДляФормы,ЭтотОбъект);
КонецПроцедуры

#КонецОбласти // ОбработчикиКомандФормы

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОбновитьКнопкуПроведения()
	КнопкаИзменения = ЭтотОбъект.Команднаяпанель.ПодчиненныеЭлементы.Найти("ФормаПровестиИЗакрыть");
	КнопкаИзменения.Отображение = ОтображениеКнопки.КартинкаИТекст;
	Если Объект.Проведен Тогда //значит рассчитан	
		КнопкаИзменения.Картинка = БиблиотекаКартинок.СостоянияРасширенийПодключено;
	Иначе
		КнопкаИзменения.Картинка = БиблиотекаКартинок.СостоянияРасширенийОшибка;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ОбработатьФормуПриИзмененииРежима()
	
	Если Объект.ОбщийРежимСоревнования = 0 Тогда //личные
		Элементы.Личные.Видимость = Истина;
		Элементы.Командные.Видимость = Ложь;
		Элементы.БыстрыйРасчет.Видимость = Ложь;
		
		Элементы.ПоВидамСоревнований.ТекущаяСтраница = Элементы.Личные;
		Элементы.СписокУчастниковНовыйРейтинг.Видимость = Ложь;
	ИначеЕсли Объект.ОбщийРежимСоревнования = 1 Тогда //быстрый расчет
		Элементы.Личные.Видимость = Ложь;
		Элементы.Командные.Видимость = Ложь;
		Элементы.БыстрыйРасчет.Видимость = Истина;
		
		Элементы.ПоВидамСоревнований.ТекущаяСтраница = Элементы.БыстрыйРасчет;
	ИначеЕсли Объект.ОбщийРежимСоревнования = 2 Тогда //командные
		Элементы.Личные.Видимость = Ложь;
		Элементы.Командные.Видимость = Истина;
		Элементы.БыстрыйРасчет.Видимость = Ложь;
		Элементы.ПоВидамСоревнований.ТекущаяСтраница = Элементы.Командные;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроведениеСоревнования()
	
	ДанныеСтроки = Элементы.ХодСоревнования.ТекущиеДанные;
	Если ДанныеСтроки.КолПартий = 0 Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Заполните кол-во партий!";
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("НомерТура",ДанныеСтроки.НомерСтроки);
	ПараметрыФормы.Вставить("ОбъектДок",Объект);
	ПараметрыФормы.Вставить("РежимТура",ДанныеСтроки.РежимТура);
	ПараметрыФормы.Вставить("Коммент",ДанныеСтроки.Комментарий);
	ПараметрыФормы.Вставить("КолПартий",ДанныеСтроки.КолПартий);
	ПараметрыФормы.Вставить("ВидСоревнований",ПредопределенноеЗначение("Перечисление.ВидыСоревнований.Личные"));
	ПараметрыФормы.Вставить("СеткаНа",ДанныеСтроки.СеткаНа);
	глКолПартий = ДанныеСтроки.КолПартий;
	// проверим данные по туру если они есть то просто откроем форму проведения по режиму
	Отбор = Новый Структура;
	Отбор.Вставить("РежимТура",ДанныеСтроки.РежимТура);
	Отбор.Вставить("НомерТура",ДанныеСтроки.НомерСтроки);
	ИскомыеСтроки = Объект.УчастникиПоЖеребьевке.НайтиСтроки(Отбор);
	Если ИскомыеСтроки.Количество() > 0 Тогда
		Если ДанныеСтроки.РежимТура = ПредопределенноеЗначение("Перечисление.РежимыТуровСоревнования.Групповой") Тогда 
			ОткрытьФорму("Документ.ПроведениеСоревнования.Форма.ФормаПроведенияСоревнования",ПараметрыФормы,ЭтотОбъект,Новый УникальныйИдентификатор);
		Иначе
			ОткрытьФорму("Документ.ПроведениеСоревнования.Форма.ФормаМинус2ИОлимпийка",ПараметрыФормы,ЭтотОбъект,Новый УникальныйИдентификатор);
		КонецЕсли;
	Иначе
		ОткрытьФорму("Документ.ПроведениеСоревнования.Форма.УниверсальнаяФормаЖеребьевки",ПараметрыФормы,ЭтотОбъект,Новый УникальныйИдентификатор);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ИсточникВыбора.ИмяФормы = "Документ.ПроведениеСоревнования.Форма.ПодборУчастников" Тогда 
		Если ИсточникВыбора.ОбъектДокумент.ОбщийРежимСоревнования =  0 
			Или ИсточникВыбора.ОбъектДокумент.ОбщийРежимСоревнования= 1 Тогда //личные и быстрый расчет
			Объект.СписокУчастников.Очистить();
			ТЧУчастников = Объект.СписокУчастников;
			Для Каждого ТекУчастник Из ВыбранноеЗначение Цикл
				НовСтрока = ТЧУчастников.Добавить();
				НовСтрока.Участник 		  = ТекУчастник.Участник; 
				НовСтрока.ТекущийРейтинг  = ТекУчастник.Рейтинг;
			КонецЦикла;
			РассчитатьСреднийРейтинг();
			Если ИсточникВыбора.ОбъектДокумент.ОбщийРежимСоревнования = 1 Тогда
				ПересчитатьВсеСтрокиБыстрогоРасчета();
			КонецЕсли;
		ИначеЕсли ИсточникВыбора.ОбъектДокумент.ОбщийРежимСоревнования = 2 Тогда 	//командные
			МассивСтрок = Объект.ТаблицаКоманд.НайтиСтроки(Новый Структура("НазваниеКоманды",ТекКоманда));
			Для Каждого ТекСтр Из МассивСтрок Цикл
				Объект.ТаблицаКоманд.Удалить(ТекСтр);
			КонецЦикла; 
			Для Каждого ТекУчастник Из ВыбранноеЗначение Цикл
				НовСтрока = Объект.ТаблицаКоманд.Добавить();
				НовСтрока.НазваниеКоманды 	= ТекКоманда;
				НовСтрока.Участник 		 		  	= ТекУчастник.Участник; 
				НовСтрока.ТекущийРейтинг  	 	= ТекУчастник.Рейтинг;
			КонецЦикла;
			//ОбновитьИтоговыйРейтингПоКоманде();
			фТаблицаКомандПриАктивизацииСтроки(Неопределено);
		КонецЕсли; 
		ЭтотОбъект.Модифицированность = Истина;
	ИначеЕсли ИсточникВыбора.ИмяФормы = "Документ.ПроведениеСоревнования.Форма.ФормаПроведенияСоревнования" Тогда 
		МассивСтрок = Объект.ОбщаяТаблицаДанных.НайтиСтроки(Новый Структура("НомерТура,РежимТура",ИсточникВыбора.НомерТура,ИсточникВыбора.РежимТура));
		Для Каждого ЗначМассива Из МассивСтрок Цикл
			ТекИндекс = Объект.ОбщаяТаблицаДанных.Индекс(ЗначМассива);
			Объект.ОбщаяТаблицаДанных.Удалить(ТекИндекс);
		КонецЦикла;
		Для Каждого ТекЗначение Из ВыбранноеЗначение Цикл
			НовСтрока = Объект.ОбщаяТаблицаДанных.Добавить();
			ЗаполнитьЗначенияСвойств(НовСтрока,ТекЗначение);
		КонецЦикла;
		ЭтотОбъект.Модифицированность = Истина;
		Если ИсточникВыбора.ПереоткрытьФорму Тогда
			ПосмотретьЭтап(Неопределено);
		КонецЕсли;
	ИначеЕсли ИсточникВыбора.ИмяФормы = "Документ.ПроведениеСоревнования.Форма.ФормаМинус2ИОлимпийка" Тогда
		Если ТипЗнч(ВыбранноеЗначение) = Тип("ДанныеФормыКоллекция") Тогда
			МассивСтрок = Объект.ОбщаяТаблицаДанных.НайтиСтроки(Новый Структура("НомерТура,РежимТура",ИсточникВыбора.НомерТура,ИсточникВыбора.РежимТура));
			Если ВыбранноеЗначение.Количество() > 0 Тогда //И (МассивСтрок.Количество() <> ВыбранноеЗначение.Количество())Тогда
				ЭтотОбъект.Модифицированность = Истина;
				//удаляем из таблицы документа все строки по туру
				Для Каждого ТекСтрока Из МассивСтрок Цикл
					ИндексСтроки = Объект.ОбщаяТаблицаДанных.Индекс(ТекСтрока);
					Объект.ОбщаяТаблицаДанных.Удалить(ИндексСтроки);
				КонецЦикла;
				//так как в схеме храняться все игры(для заполнения), то просто их перенесем в документ 
				Для Каждого ТекЗначение Из ВыбранноеЗначение Цикл
					НовСтрока = Объект.ОбщаяТаблицаДанных.Добавить();
					ЗаполнитьЗначенияСвойств(НовСтрока,ТекЗначение);
					НовСтрока.НомерТура        = ИсточникВыбора.НомерТура;
					НовСтрока.РежимТура        = ИсточникВыбора.РежимТура;
					////НомерГруппы нет
					//НовСтрока.НомерСета 	   = ТекЗначение.НомерСета;//будем использовать это поле
					//НовСтрока.Выигравший       = ТекЗначение.Выигравший;
					//НовСтрока.Проигравший      = ТекЗначение.Проигравший;
					//НовСтрока.ОчкиВыигравшего  = ТекЗначение.ОчкиВыигравшего;
					//НовСтрока.ОчкиПроигравшего = ТекЗначение.ОчкиПроигравшего;
					//НовСтрока.ТехническоеВ			   = ТекЗначение.ТехническоеВ;		
					//НовСтрока.ТехническоеП			   = ТекЗначение.ТехническоеП;		
				КонецЦикла;
				Объект.ОбщаяТаблицаДанных.Сортировать("НомерТура ВОЗР,НомерГруппы ВОЗР,НомерСета ВОЗР");
			КонецЕсли;
			ЭтотОбъект.Модифицированность = Истина;
		Иначе //структура
			мТекРежим = ВыбранноеЗначение.РежимТура;
			мНомерТура = ВыбранноеЗначение.НомерТура;
			
			Отбор = Новый Структура;
			Отбор.Вставить("РежимТура",мТекРежим);
			Отбор.Вставить("НомерТура",мНомерТура);
			Отбор.Вставить("НомерИгры",ВыбранноеЗначение.НомерДляЗамены);
			Строки1 = Объект.УчастникиПоЖеребьевке.НайтиСтроки(Отбор);
			Если Строки1.Количество() > 0 Тогда
				ДанныеДляЗамены = Строки1[0];
				НомИгрыЗамены = ДанныеДляЗамены.НомерИгры;
			КонецЕсли; 
			
			Отбор = Новый Структура;
			Отбор.Вставить("РежимТура",мТекРежим);
			Отбор.Вставить("НомерТура",мНомерТура);
			Отбор.Вставить("Участник",ВыбранноеЗначение.УчастникЗамены);
			Строки2 = Объект.УчастникиПоЖеребьевке.НайтиСтроки(Отбор);
			Если Строки2.Количество() > 0 Тогда
				 ДанныеЗамены = Строки2[0];
				 НомИгрыДанныхЗамены = ДанныеЗамены.НомерИгры;
			КонецЕсли; 
			ДанныеДляЗамены.НомерИгры = НомИгрыДанныхЗамены;
			ДанныеЗамены.НомерИгры = НомИгрыЗамены;
			
			//ищем этот тур
			ИндексСтрокиТура = Объект.ХодСоревнования.Получить(мНомерТура-1).ПолучитьИдентификатор();
			Элементы.ХодСоревнования.ТекущаяСтрока = ИндексСтрокиТура;
			ЭтотОбъект.Модифицированность = Истина;
			ПроведениеСоревнования();//открываем заново
			
		КонецЕсли; 
	ИначеЕсли ИсточникВыбора.ИмяФормы = "Документ.ПроведениеСоревнования.Форма.УниверсальнаяФормаЖеребьевки" Тогда
		// Групповой 	 = 1
		// Система -2 	 = 2
		// Олимпийка 	 = 3
		// Прогрессивная = 4
		Если ВыбранноеЗначение.ВидСоревнований = ПредопределенноеЗначение("Перечисление.ВидыСоревнований.Личные") Тогда
			МассивСтрок = Объект.УчастникиПоЖеребьевке.НайтиСтроки(Новый Структура("НомерТура,РежимТура",ВыбранноеЗначение.НомерТура,ВыбранноеЗначение.РежимТура));
			Для Каждого ТекСтрока Из МассивСтрок Цикл
				Объект.УчастникиПоЖеребьевке.Удалить(Объект.УчастникиПоЖеребьевке.Индекс(ТекСтрока));
			КонецЦикла;
			Если ВыбранноеЗначение.ЧисловоеЗначениеТура = 1 Тогда
				Для Каждого ТекСтрока Из ВыбранноеЗначение.ВыбранныеУчастники Цикл
					НовСтрока = Объект.УчастникиПоЖеребьевке.Добавить();
					НовСтрока.РежимТура   	 = ВыбранноеЗначение.РежимТура;
					НовСтрока.НомерТура      = ВыбранноеЗначение.НомерТура;
					НовСтрока.НомерГруппы	 = ТекСтрока.Номер;
					НовСтрока.Участник   	 = ТекСтрока.Участник;
					НовСтрока.ТекущийРейтинг = ТекСтрока.Рейтинг;
				КонецЦикла;
				МассивСтрокЖеребьевки = Объект.УчастникиПоЖеребьевке.НайтиСтроки(Новый Структура("НомерТура,РежимТура",ВыбранноеЗначение.НомерТура,ВыбранноеЗначение.РежимТура));
				ЭтотОбъект.Модифицированность = Истина;
				Если МассивСтрокЖеребьевки.Количество() > 0 Тогда
					ПараметрыФормы = Новый Структура;
					ПараметрыФормы.Вставить("НомерТура",ВыбранноеЗначение.НомерТура);
					ПараметрыФормы.Вставить("ОбъектДок",Объект);
					ПараметрыФормы.Вставить("РежимТура",ВыбранноеЗначение.РежимТура);
					ПараметрыФормы.Вставить("Коммент",ВыбранноеЗначение.Коммент);
					ПараметрыФормы.Вставить("КолПартий",глКолПартий);
					ПараметрыФормы.Вставить("ВидСоревнований",ВыбранноеЗначение.ВидСоревнований);
					ОткрытьФорму("Документ.ПроведениеСоревнования.Форма.ФормаПроведенияСоревнования",ПараметрыФормы, ЭтотОбъект);
				КонецЕсли; 
			Иначе
				Для Каждого ТекСтрока Из ВыбранноеЗначение.ВыбранныеУчастники Цикл
					НовСтрока = Объект.УчастникиПоЖеребьевке.Добавить();
					НовСтрока.РежимТура   	 = ВыбранноеЗначение.РежимТура;
					НовСтрока.НомерТура      = ВыбранноеЗначение.НомерТура;
					НовСтрока.НомерИгры		 = ТекСтрока.Номер;
					НовСтрока.Участник   	 	= ТекСтрока.Участник;
					НовСтрока.ТекущийРейтинг = ТекСтрока.Рейтинг;
					НовСтрока.Пропускает1Тур = ТекСтрока.Пропускает1Тур;
				КонецЦикла;
				Объект.НумерацияВСетке = ВыбранноеЗначение.Нумерация;
				ЭтотОбъект.Модифицированность = Истина;
				МассивСтрокЖеребьевки = Объект.УчастникиПоЖеребьевке.НайтиСтроки(Новый Структура("НомерТура,РежимТура",ВыбранноеЗначение.НомерТура,ВыбранноеЗначение.РежимТура));
				Если МассивСтрокЖеребьевки.Количество() > 0 Тогда
					ПараметрыФормы = Новый Структура;
					ПараметрыФормы.Вставить("НомерТура",ВыбранноеЗначение.НомерТура);
					ПараметрыФормы.Вставить("ОбъектДок",Объект);
					ПараметрыФормы.Вставить("РежимТура",ВыбранноеЗначение.РежимТура);
					ПараметрыФормы.Вставить("Коммент",ВыбранноеЗначение.Коммент);
					ПараметрыФормы.Вставить("КолПартий",глКолПартий);
					ПараметрыФормы.Вставить("СеткаНа",ВыбранноеЗначение.СеткаНа);
					//установим сетку
					СтрокиТура = Объект.ХодСоревнования.НайтиСтроки(Новый Структура("НомерСтроки",ВыбранноеЗначение.НомерТура));
					Если СтрокиТура.Количество() > 0 Тогда
						СтрокиТура[0].СеткаНа = ВыбранноеЗначение.СеткаНа;
					КонецЕсли; 
					ОткрытьФорму("Документ.ПроведениеСоревнования.Форма.ФормаМинус2ИОлимпийка",ПараметрыФормы,ЭтотОбъект);
				КонецЕсли;
			КонецЕсли;
		ИначеЕсли ВыбранноеЗначение.ВидСоревнований = ПредопределенноеЗначение("Перечисление.ВидыСоревнований.Командные") Тогда
			МассивСтрок = Объект.КомандыПоЖеребьевке.НайтиСтроки(Новый Структура("НомерТура,РежимТура",ВыбранноеЗначение.НомерТура,ВыбранноеЗначение.РежимТура));
			Для Каждого ТекСтрока Из МассивСтрок Цикл
				Объект.КомандыПоЖеребьевке.Удалить(Объект.КомандыПоЖеребьевке.Индекс(ТекСтрока));
			КонецЦикла;
			//по индексу найдем строчку 
			СтрокаХода = Объект.ХодСоревнованияКоманды.Получить(ВыбранноеЗначение.НомерТура-1);
			СтрокаХода.Жеребьевка = ВыбранноеЗначение.ЖеребьевкаКоманд;
			
			Если ВыбранноеЗначение.ЧисловоеЗначениеТура = 1 Тогда
				Для Каждого ТекСтрока Из ВыбранноеЗначение.ВыбранныеУчастники Цикл
					НовСтрока = Объект.КомандыПоЖеребьевке.Добавить();
					НовСтрока.РежимТура   	 = ВыбранноеЗначение.РежимТура;
					НовСтрока.НомерТура      = ВыбранноеЗначение.НомерТура;
					НовСтрока.НомерГруппы	 = ТекСтрока.Номер;
					НовСтрока.ТекущийРейтинг = ТекСтрока.Рейтинг;
					НовСтрока.НазваниеКоманды = ТекСтрока.НазваниеКоманды;
				КонецЦикла;
				ЭтотОбъект.Модифицированность = Истина;
				ПараметрыФормы = Новый Структура;
				ПараметрыФормы.Вставить("НомерТура",ВыбранноеЗначение.НомерТура);
				ПараметрыФормы.Вставить("ОбъектДок",Объект);
				ПараметрыФормы.Вставить("РежимТура",ВыбранноеЗначение.РежимТура);
				ПараметрыФормы.Вставить("Коммент",ВыбранноеЗначение.Коммент);
				ПараметрыФормы.Вставить("КолПартий",глКолПартий);
				ПараметрыФормы.Вставить("ВидСоревнований",ВыбранноеЗначение.ВидСоревнований);
				ПараметрыФормы.Вставить("ЖеребьевкаКоманд",ВыбранноеЗначение.ЖеребьевкаКоманд);
				ОткрытьФорму("Документ.ПроведениеСоревнования.Форма.ФормаПроведенияСоревнованияКоманды",ПараметрыФормы,ЭтотОбъект);
			Иначе
				Для Каждого ТекСтрока Из ВыбранноеЗначение.ВыбранныеУчастники Цикл
					НовСтрока = Объект.КомандыПоЖеребьевке.Добавить();
					НовСтрока.РежимТура   	 = ВыбранноеЗначение.РежимТура;
					НовСтрока.НомерТура      = ВыбранноеЗначение.НомерТура;
					НовСтрока.НомерИгры		 = ТекСтрока.Номер;
					НовСтрока.ТекущийРейтинг = ТекСтрока.Рейтинг;
					НовСтрока.Пропускает1Тур = ТекСтрока.Пропускает1Тур;
					НовСтрока.НазваниеКоманды = ТекСтрока.НазваниеКоманды;
				КонецЦикла;
				Объект.НумерацияВСетке = ВыбранноеЗначение.Нумерация;
				ЭтотОбъект.Модифицированность = Истина;
				ПараметрыФормы = Новый Структура;
				ПараметрыФормы.Вставить("НомерТура",ВыбранноеЗначение.НомерТура);
				ПараметрыФормы.Вставить("ОбъектДок",Объект);
				ПараметрыФормы.Вставить("РежимТура",ВыбранноеЗначение.РежимТура);
				ПараметрыФормы.Вставить("Коммент",ВыбранноеЗначение.Коммент);
				ПараметрыФормы.Вставить("КолПартий",глКолПартий);
				ПараметрыФормы.Вставить("ВидСоревнований",ВыбранноеЗначение.ВидСоревнований);
				ПараметрыФормы.Вставить("ЖеребьевкаКоманд",ВыбранноеЗначение.ЖеребьевкаКоманд);
				ОткрытьФорму("Документ.ПроведениеСоревнования.Форма.ФормаМинус2ИОлимпийкаКоманды",ПараметрыФормы,ЭтотОбъект);
			КонецЕсли;
		КонецЕсли; 
	ИначеЕсли ИсточникВыбора.ИмяФормы = "Документ.ПроведениеСоревнования.Форма.СписокУчастниковДляБыстрогоРежима" Тогда
		Если ИсточникВыбора.Выбран Тогда
			Если ИсточникВыбора.ТаблицаВызова = "Бонусы" Тогда
				ТекСтрока = Элементы.Бонусы.ТекущиеДанные;
				Если ТекСтрока <> Неопределено Тогда
					ТекСтрока.Участник = ВыбранноеЗначение.Участник;
				КонецЕсли; 
			Иначе
				ТекСтрока = Элементы.ТаблицаБыстрогоРасчета.ТекущиеДанные;
				Если ИсточникВыбора.ИсточникВызова = 1 Тогда
					Если ТекСтрока.Участник2 = ВыбранноеЗначение.Участник Тогда
						ПоказатьПредупреждение(Неопределено, ""+ВыбранноеЗначение.Участник+" уже указан вторым участником!");
						Возврат;
					КонецЕсли;
					ТекСтрока.Участник1 = ВыбранноеЗначение.Участник;
					ТекСтрока.ТекущийРейтинг1 = ВыбранноеЗначение.ТекущийРейтинг;
					ЭтотОбъект.ТекущийЭлемент = Элементы.ТаблицаБыстрогоРасчетаКолПартий1;
				Иначе
					Если ТекСтрока.Участник1 = ВыбранноеЗначение.Участник Тогда
						ПоказатьПредупреждение(Неопределено, ""+ВыбранноеЗначение.Участник+" уже указан первым участником!");
						Возврат;
					КонецЕсли;
					ТекСтрока.Участник2 = ВыбранноеЗначение.Участник;
					ТекСтрока.ТекущийРейтинг2 = ВыбранноеЗначение.ТекущийРейтинг;
					ЭтотОбъект.ТекущийЭлемент = Элементы.ТаблицаБыстрогоРасчетаУчастник2;
				КонецЕсли; 
				Если ПроверитьЗаполненностьУчастниковВСтроке() Тогда
					ПерерасчитатьПриростыИИтоговыйРейтинг();
				КонецЕсли;
			КонецЕсли; 
		КонецЕсли;
	ИначеЕсли ИсточникВыбора.ИмяФормы = "Документ.ПроведениеСоревнования.Форма.ФормаМинус2ИОлимпийкаКоманды" 
		Или ИсточникВыбора.ИмяФормы = "Документ.ПроведениеСоревнования.Форма.ФормаПроведенияСоревнованияКоманды" Тогда
		
		МассивСтрок = Объект.ОбщаяТаблицаДанныхПоКомандам.НайтиСтроки(Новый Структура("НомерТура",ИсточникВыбора.НомерТура));
		Для каждого ТекСтр Из МассивСтрок Цикл
			Объект.ОбщаяТаблицаДанныхПоКомандам.Удалить(ТекСтр);
		КонецЦикла; 
		Для каждого ТекСтр Из ВыбранноеЗначение Цикл
			НовСтрока = Объект.ОбщаяТаблицаДанныхПоКомандам.Добавить();
			ЗаполнитьЗначенияСвойств(НовСтрока,ТекСтр);
		КонецЦикла;
		Объект.ОбщаяТаблицаДанныхПоКомандам.Сортировать("НомерТура ВОЗР,НомерГруппы ВОЗР,НомерСета ВОЗР");
		ЭтотОбъект.Модифицированность = Истина;
		Если ИсточникВыбора.ПереоткрытьФорму Тогда
			КомандаОткрытьТурКомандный(Неопределено);
		КонецЕсли;
	ИначеЕсли ИсточникВыбора.ИмяФормы = "Документ.ПроведениеСоревнования.Форма.ИсторияСоставовКоманд" Тогда
		ОбработатьКомандыПриВыбореИзИстории(ВыбранноеЗначение);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьКомандыПриВыбореИзИстории(мВыбранныеКоманды = Неопределено)
	
	Если мВыбранныеКоманды = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	ВсеСтроки = мВыбранныеКоманды.ПолучитьЭлементы();
	Для Каждого втТекКоманда Из ВсеСтроки Цикл
		Если втТекКоманда.Пометка Тогда
			Искомая = Объект.НазванияКоманд.НайтиСтроки(Новый Структура("НазваниеКоманды",втТекКоманда.НазваниеКоманды));
			Если Искомая.Количество() = 0 Тогда
				НовСтрока = Объект.НазванияКоманд.Добавить();
				НовСтрока.НазваниеКоманды = втТекКоманда.НазваниеКоманды;
			КонецЕсли; 
			// делаем выборку участников
			СтрокиСУчастниками = втТекКоманда.ПолучитьЭлементы();
			Для Каждого втТекУчастник Из СтрокиСУчастниками Цикл
				Если втТекУчастник.Пометка Тогда //добавляем в таблицу команд
					НовСтрока = Объект.ТаблицаКоманд.Добавить();	
					НовСтрока.НазваниеКоманды 	= втТекКоманда.НазваниеКоманды;
					НовСтрока.Участник			= втТекУчастник.Участник;
					НовСтрока.ТекущийРейтинг		= СерверныеСервер.ПолучитьТекущийРейтингУчастника(НовСтрока.Участник, 
						СерверныеСервер.ДатаСеанса(), Объект.ВидРейтинга);
				КонецЕсли; 
			КонецЦикла; 
		КонецЕсли; 	
	КонецЦикла;
	ЭтотОбъект.Модифицированность = Истина;
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьФайлЭксель(ДанныеДляЭкспорта)
		
	ДанныеЗагрузки = ДанныеДляЭкспорта.ТаблицаЭкспорта;
	ДанныеЗагрузки.Очистить();
	
	ЗаполнитьТаблицуДанныхИзТабличногоДокумента(ДанныеДляЭкспорта, ДанныеЗагрузки);	
	ДобавитьВСписокЭкспортнуюТаблицу(ДанныеДляЭкспорта, ДанныеЗагрузки);
	
	РассчитатьСреднийРейтинг();

КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаполнитьТаблицуДанныхИзТабличногоДокумента(ДанныеДляЭкспорта,ДанныеЗагрузки)
	
	ТабДокДанных = ДанныеДляЭкспорта.ТабДокДанные;
	КоличествоСтрок = ТабДокДанных.ПолучитьРазмерОбластиДанныхПоВертикали();
	Для Сч = 2 По КоличествоСтрок Цикл
		парФИО 					= СокрЛП(ТабДокДанных.ПолучитьОбласть("R"+Сч+"C1").ТекущаяОбласть.Текст);		
		парДатаРождения 	= СокрЛП(ТабДокДанных.ПолучитьОбласть("R"+Сч+"C2").ТекущаяОбласть.Текст);
		НовСтрока = ДанныеЗагрузки.Добавить();
		Если ДанныеДляЭкспорта.ЗагружатьИЗФайлаРейтинг = 0 Тогда
			парРейтинг 				= ТабДокДанных.ПолучитьОбласть("R"+Сч+"C3").ТекущаяОбласть.Текст;
			НовСтрока.Рейтинг = парРейтинг;
		КонецЕсли;
		ИтоговыйПарДаты = ОбщийКлиентСервер.ПриведениеИзСтрокиВДату(парДатаРождения);
		НовСтрока.Участник				= парФИО;
		НовСтрока.ДатаРождения 	= ИтоговыйПарДаты;
		ФайлПол = ВРег(СокрЛП(ТабДокДанных.ПолучитьОбласть("R"+Сч+"C4").ТекущаяОбласть.Текст));
		Если ЗначениеЗаполнено(ФайлПол) Тогда
			НовСтрока.Пол = ?(ФайлПол = "М",Перечисления.ПолУчастника.Мужской, Перечисления.ПолУчастника.Женский);
		КонецЕсли; 
	КонецЦикла; 
	
КонецПроцедуры 

&НаСервере
Процедура ДобавитьВСписокЭкспортнуюТаблицу(ДанныеЭкспорта,ТаблицаЭкспорта)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Участники.Ссылка,
	|	Участники.ДатаРождения,
	|	Участники.Наименование
	|ИЗ
	|	Справочник.Участники КАК Участники
	|ГДЕ
	|	Участники.ПометкаУдаления = ЛОЖЬ
	|	И Участники.Наименование <> """"";
	РезультатВсехУчастников = Запрос.Выполнить().Выгрузить();
		
	Для Каждого ТекЗначение Из ТаблицаЭкспорта Цикл
		// попробуем найти
		ТекИмя = СокрЛП(ТекЗначение.Участник);
		ОтборСтрок = Новый Структура();
		ОтборСтрок.Вставить("Наименование", ТекИмя);
		ОтборСтрок.Вставить("ДатаРождения", ТекЗначение.ДатаРождения);
		ИскомаяСтрока = РезультатВсехУчастников.НайтиСтроки(ОтборСтрок);
		Если ИскомаяСтрока.Количество() = 0 Тогда
			Если ДанныеЭкспорта.СоздаватьУчастника Тогда
				НовЭлемент = Справочники.Участники.СоздатьЭлемент();
				НовЭлемент.Наименование 	= ТекИмя;		
				НовЭлемент.ДатаРождения	= ТекЗначение.ДатаРождения;
				НовЭлемент.Пол			= ТекЗначение.Пол;
				НовЭлемент.Записать();
				Участник = НовЭлемент.Ссылка;
			Иначе
				Сообщение = Новый СообщениеПользователю;
				Сообщение.ИдентификаторНазначения = УникальныйИдентификатор;
				Сообщение.Текст = "Участник "+ТекЗначение.Участник + " не найден в базе";
				Сообщение.Сообщить(); 
				Продолжить;
			КонецЕсли; 
		Иначе
			Участник = ИскомаяСтрока[0].Ссылка;
		КонецЕсли;
		Если ДанныеЭкспорта.ЗагружатьИЗФайлаРейтинг = 1 Тогда
			мРейтинг = СерверныеСервер.ПолучитьТекущийРейтингУчастника(Участник, 
				СерверныеСервер.ДатаСеанса(), Объект.ВидРейтинга);
		Иначе
			мРейтинг = ТекЗначение.Рейтинг;// из файла
		КонецЕсли; 
		НовСтрока = Объект.СписокУчастников.Добавить();
		НовСтрока.Участник = Участник;
		НовСтрока.ТекущийРейтинг = мРейтинг;
	КонецЦикла;
	
КонецПроцедуры
 
&НаКлиенте
Процедура УдалитьДанныеПоЭтапуНаКлиенте(НомерТура, Жеребьевка = Истина, ОбщиеДанные = Истина, ЭтоУдалениеИзТЧ = Истина)
	
	// удаляем из жеребьевки
	Если Жеребьевка Тогда
		МассивСтрокЖеребьевки = Объект.УчастникиПоЖеребьевке.НайтиСтроки(Новый Структура("НомерТура",НомерТура));
		Для Каждого ТекСтрока Из МассивСтрокЖеребьевки Цикл
			Объект.УчастникиПоЖеребьевке.Удалить(Объект.УчастникиПоЖеребьевке.Индекс(ТекСтрока));
		КонецЦикла;
	КонецЕсли; 
	
	Если ОбщиеДанные Тогда
		МассивСтрок = Объект.ОбщаяТаблицаДанных.НайтиСтроки(Новый Структура("НомерТура",НомерТура));
		Для Каждого ТекСтрока Из МассивСтрок Цикл
			Объект.ОбщаяТаблицаДанных.Удалить(Объект.ОбщаяТаблицаДанных.Индекс(ТекСтрока));
		КонецЦикла;
	КонецЕсли; 
	
	Если ЭтоУдалениеИзТЧ Тогда
		Если мНомерУдаляемойСтрокиИзХодаСоревнований <= Объект.ХодСоревнования.Количество() - 1 Тогда
			Для Каждого ТекСтрока Из Объект.УчастникиПоЖеребьевке Цикл
				Если ТекСтрока.НомерТура >= мНомерУдаляемойСтрокиИзХодаСоревнований Тогда
					ТекСтрока.НомерТура = ТекСтрока.НомерТура - 1;
				КонецЕсли;
			КонецЦикла;
			
			Для Каждого ТекСтрока Из Объект.ОбщаяТаблицаДанных Цикл
				Если ТекСтрока.НомерТура >= мНомерУдаляемойСтрокиИзХодаСоревнований Тогда
					ТекСтрока.НомерТура = ТекСтрока.НомерТура - 1;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли; 
	
	Если Жеребьевка Или ОбщиеДанные Или ЭтоУдалениеИзТЧ Тогда
		Модифицированность = Истина;
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ХодСоревнованияПередУдалениемЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	ТекСтрока = ДополнительныеПараметры.ТекСтрока;
	
	Ответ = РезультатВопроса;
	Если Ответ = КодВозвратаДиалога.Да Тогда
		УдалитьДанныеПоЭтапуНаКлиенте(ТекСтрока.НомерСтроки);
		Объект.ХодСоревнования.Удалить(ТекСтрока);
		Модифицированность = Истина;
	КонецЕсли;

КонецПроцедуры
 
&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	ОбновитьКнопкуПроведения();
	Если Объект.ОбщийРежимСоревнования = 1 Тогда
		ОбновитьНовыйРейтингВСпискеУчастников();
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ХодСоренованияРежимТураОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если мДанныеСтроки <> Неопределено Тогда
		Если мДанныеСтроки.РежимТура <> ПредопределенноеЗначение("Перечисление.РежимыТуровСоревнования.ПустаяСсылка") Тогда
			Если мДанныеСтроки.РежимТура <> ВыбранноеЗначение Тогда
				//проверяем есть ли уже строки по жеребьевке хотя бы
				МассивСтрок = Объект.УчастникиПоЖеребьевке.НайтиСтроки(мДанныеСтроки);
				Если МассивСтрок.Количество() >  0 Тогда
					СтандартнаяОбработка = Ложь;

					ПоказатьВопрос(Новый ОписаниеОповещения("ХодСоренованияРежимТураОбработкаВыбораЗавершение", ЭтотОбъект, Новый Структура("МассивСтрок", МассивСтрок)), "По этапу уже есть данные в жеребьевке. Удалить?
					|Так же будут удалены все игры по этапу.",РежимДиалогаВопрос.ДаНет);
				КонецЕсли; 
			КонецЕсли;
		КонецЕсли; 
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ХодСоренованияРежимТураОбработкаВыбораЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	МассивСтрок = ДополнительныеПараметры.МассивСтрок;
		
	Ответ = РезультатВопроса;
	Если Ответ = КодВозвратаДиалога.Да Тогда
		Для каждого ТекСтр  Из  МассивСтрок Цикл
			Объект.УчастникиПоЖеребьевке.Удалить(ТекСтр);
		КонецЦикла;
		//теперь ищем все игры
		МассивИгр = Объект.ОбщаяТаблицаДанных.НайтиСтроки(мДанныеСтроки);
		Для каждого ТекСтр Из МассивИгр Цикл
			Объект.ОбщаяТаблицаДанных.Удалить(ТекСтр);
		КонецЦикла; 
	Иначе
		ТекСтрока = Элементы.ХодСоревнования.ТекущиеДанные;
		ТекСтрока.РежимТура = мДанныеСтроки.РежимТура;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура РассчитатьСреднийРейтинг()
	
	ДанныеДляСреднегоРейтинга = Документы.ПроведениеСоревнования.РассчитатьСреднийРейтингВМодулеМенеджера(
		Объект.СписокУчастников.Выгрузить());
	СреднийРейтинг = ДанныеДляСреднегоРейтинга.ФорматСреднийРейтинг;	
	
КонецПроцедуры

&НаКлиенте
Функция ПоискРейтингаУчастника(перемУчастник)
	
	Искомые = Объект.СписокУчастников.НайтиСтроки(Новый Структура("Участник",перемУчастник));
	Если Искомые.Количество() > 0 Тогда
		Возврат Искомые[0].ТекущийРейтинг;
	Иначе
		Возврат 0;
	КонецЕсли;
	
КонецФункции

&НаСервере
Функция ПоискРейтингаУчастникаНаСервере(перемУчастник)
	
	Искомые = Объект.СписокУчастников.НайтиСтроки(Новый Структура("Участник",перемУчастник));
	Если Искомые.Количество() > 0 Тогда
		Возврат Искомые[0].ТекущийРейтинг;
	Иначе
		Возврат 0;
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Функция ПроверитьЗаполненностьУчастниковВСтроке()
	
	ТекСтрока = Элементы.ТаблицаБыстрогоРасчета.ТекущиеДанные;
	Если ТекСтрока <> Неопределено Тогда
		Если ЗначениеЗаполнено(ТекСтрока.Участник1) И ЗначениеЗаполнено(ТекСтрока.Участник2) Тогда
			Возврат Истина;
		Иначе
			Возврат Ложь;
		КонецЕсли; 
	Иначе
		Возврат Ложь;
	КонецЕсли; 
	
КонецФункции

//передается Идентификатор строки
&НаСервере
Процедура ПерерасчитатьПриростыИИтоговыйРейтинг(ИДСтрокиПерерасчета = Неопределено)
	
	Если ИДСтрокиПерерасчета = Неопределено Тогда
		ТекСтрокаИД = Элементы.ТаблицаБыстрогоРасчета.ТекущаяСтрока;
	Иначе
		ТекСтрокаИД = ИДСтрокиПерерасчета;
	КонецЕсли; 
	//сначала определим кто выиграл
	ТекСтрока = Объект.ТаблицаБыстрогоРасчета.НайтиПоИдентификатору(ТекСтрокаИД);
	Если (ТекСтрока.КолПартий1 = 0 И ТекСтрока.КолПартий2 = 0) Или (ТекСтрока.КолПартий1 = ТекСтрока.КолПартий2) Тогда
		Возврат;
	КонецЕсли; 
	
	Если ТекСтрока.КолПартий1 > ТекСтрока.КолПартий2 Тогда
		РейтВыиграв = ТекСтрока.ТекущийРейтинг1;
		РейтПроиграв = ТекСтрока.ТекущийРейтинг2;
	Иначе
		РейтВыиграв = ТекСтрока.ТекущийРейтинг2;
		РейтПроиграв = ТекСтрока.ТекущийРейтинг1;
	КонецЕсли; 
	
	мОбъект = РеквизитФормыВЗначение("Объект");
	
	ДанныеПоФормулам = СерверныеСервер.ПолучитьФормулыДляРасчетаРейтинга(Объект.Дата);
		
	Если ТекСтрока.КолПартий1 > ТекСтрока.КолПартий2 Тогда
		Если Объект.ВидКоэффициента = 0 Тогда
			мКэфВ 	= Объект.Коэфф;
			мКэфП	= Объект.Коэфф;
		ИначеЕсли Объект.ВидКоэффициента = 1 Тогда
			мКэфВ = РегистрыСведений.КоэффициентыРейтингаПоСчетуВстречи.НайтиКэфПоСчету(Объект.Дата,
				ТекСтрока.КолПартий1, ТекСтрока.КолПартий2);
			мКэфП = РегистрыСведений.КоэффициентыРейтингаПоСчетуВстречи.НайтиКэфПоСчету(Объект.Дата,
				ТекСтрока.КолПартий2, ТекСтрока.КолПартий1);
		КонецЕсли;

		ТекСтрока.Прирост1 = мКэфВ * мОбъект.РассчитатьПрирост(РейтВыиграв, РейтПроиграв, ,ДанныеПоФормулам);
		ТекСтрока.Прирост2 = мКэфП * мОбъект.РассчитатьПрирост(РейтВыиграв, РейтПроиграв, Ложь, ДанныеПоФормулам);
	Иначе
		Если Объект.ВидКоэффициента = 0 Тогда
			мКэфВ 	= Объект.Коэфф;
			мКэфП	= Объект.Коэфф;
		ИначеЕсли Объект.ВидКоэффициента = 1 Тогда
			мКэфВ = РегистрыСведений.КоэффициентыРейтингаПоСчетуВстречи.НайтиКэфПоСчету(Объект.Дата,
				ТекСтрока.КолПартий2, ТекСтрока.КолПартий1);
			мКэфП = РегистрыСведений.КоэффициентыРейтингаПоСчетуВстречи.НайтиКэфПоСчету(Объект.Дата,
				ТекСтрока.КолПартий1, ТекСтрока.КолПартий2);
		КонецЕсли;

		ТекСтрока.Прирост2 = мКэфВ * мОбъект.РассчитатьПрирост(РейтВыиграв, РейтПроиграв, ДанныеПоФормулам);
		ТекСтрока.Прирост1 = мКэфП * мОбъект.РассчитатьПрирост(РейтВыиграв, РейтПроиграв, Ложь, ДанныеПоФормулам);
	КонецЕсли;
	
	ОбновитьНовыйРейтингВСпискеУчастников();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьНовыйРейтингВСпискеУчастников()
	
	мОбъект = РеквизитФормыВЗначение("Объект");
	Результат = мОбъект.ПолучитьРасчетнуюТаблицуДляБыстрогоРежима();
	Для каждого ТекУчастник Из Объект.СписокУчастников Цикл
		Искомый = Результат.Найти(ТекУчастник.Участник);
		Если Искомый <> Неопределено Тогда
			перемНовыйРейтинг = Искомый.НовыйРейтинг;
			ТекУчастник.НовыйРейтинг = ?(перемНовыйРейтинг > 0,перемНовыйРейтинг,0);
		КонецЕсли; 
	КонецЦикла; 
	
КонецПроцедуры
 
&НаСервере
Процедура ПересчитатьВсеСтрокиБыстрогоРасчета()
	
	Для каждого ТекСтрока Из Объект.ТаблицаБыстрогоРасчета Цикл
		ПерерасчитатьПриростыИИтоговыйРейтинг(ТекСтрока.ПолучитьИдентификатор());
	КонецЦикла; 
	ОбновитьНовыйРейтингВСпискеУчастников();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗаполнитьБонусыЗавершение2(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Ответ = РезультатВопроса;
	Если Ответ = КодВозвратаДиалога.Да Тогда
		Объект.Бонусы.Очистить();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура КомандаЗаполнитьБонусыЗавершение1(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
	
	ВыбранныйЭтап = ВыбранныйЭлемент;
	
	КомандаЗаполнитьБонусыФрагмент1(ВыбранныйЭтап);

КонецПроцедуры

&НаКлиенте
Процедура КомандаЗаполнитьБонусыФрагмент1(Знач ВыбранныйЭтап)
	
	Перем ВсегоГруппТура, ГруппаТураДляЗаполнения, м, РежимТура, СписокГрупп, СтрокаТаблицы;

	Если ВыбранныйЭтап <> Неопределено Тогда
		СтрокаТаблицы = Объект.ХодСоревнования.Получить(ВыбранныйЭтап.Значение - 1);
		РежимТура = СтрокаТаблицы.РежимТура;
		Если РежимТура = ПредопределенноеЗначение("Перечисление.РежимыТуровСоревнования.Групповой") Тогда
			//еще узнаем из какой группы надо заполнить
			СписокГрупп = Новый СписокЗначений;
			ВсегоГруппТура = ПолучитьКоличествоГруппТура(ВыбранныйЭтап.Значение);
			Если ВсегоГруппТура = 1 Тогда
				ГруппаТураДляЗаполнения = 1;
			Иначе
				Для м = 1 По ВсегоГруппТура Цикл
					СписокГрупп.Добавить(м);
				КонецЦикла;

				СписокГрупп.ПоказатьВыборЭлемента(Новый ОписаниеОповещения("КомандаЗаполнитьБонусыЗавершение",
					ЭтотОбъект, Новый Структура("ВыбранныйЭтап", ВыбранныйЭтап)), "Выберите группу для бонусов");
				Возврат;
			КонецЕсли;
		Иначе
			ГруппаТураДляЗаполнения = 0;
		КонецЕсли;
		КомандаЗаполнитьБонусыФрагмент(ВыбранныйЭтап, ГруппаТураДляЗаполнения);

	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура КомандаЗаполнитьБонусыЗавершение(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
	
	ВыбранныйЭтап = ДополнительныеПараметры.ВыбранныйЭтап;
	
	
	ВыбраннаяГруппа = ВыбранныйЭлемент;
	Если ВыбраннаяГруппа = Неопределено Тогда
		Возврат;
	Иначе
		ГруппаТураДляЗаполнения = ВыбраннаяГруппа.Значение;	
	КонецЕсли; 
	
	КомандаЗаполнитьБонусыФрагмент(ВыбранныйЭтап, ГруппаТураДляЗаполнения);

КонецПроцедуры

&НаКлиенте
Процедура КомандаЗаполнитьБонусыФрагмент(Знач ВыбранныйЭтап, Знач ГруппаТураДляЗаполнения)
	
	ЗаполнитьУчастниковПоМестамИБонусам(ВыбранныйЭтап.Значение,ГруппаТураДляЗаполнения);

КонецПроцедуры

&НаСервере
Функция ПолучитьКоличествоГруппТура(НомТура)

	Возврат Документы.ПроведениеСоревнования.ОпределитьКоличествоГрупп(Объект.УчастникиПоЖеребьевке.Выгрузить(),
		НомТура, Перечисления.РежимыТуровСоревнования.Групповой);

КонецФункции

&НаСервере
Процедура ЗаполнитьУчастниковПоМестамИБонусам(НомЭтапа = 1,НомГруппы = 0)
	
	//найдем режим тура
	СтрокаТаблицы = Объект.ХодСоревнования.Получить(НомЭтапа - 1);
	РежимТура = СтрокаТаблицы.РежимТура;
	НомерТура = НомЭтапа;

	Если РежимТура = Перечисления.РежимыТуровСоревнования.Групповой Тогда
		//Н = 1;
		мОбщаяТаблицаПоТуру = Объект.ОбщаяТаблицаДанных.Выгрузить(Новый Структура("НомерТура,НомерГруппы", НомерТура,
			НомГруппы));
		ДанныеПоМестамУчастников = Новый ТаблицаЗначений;
		ДанныеПоМестамУчастников.Колонки.Добавить("Участник", Новый ОписаниеТипов("СправочникСсылка.Участники"));
		ДанныеПоМестамУчастников.Колонки.Добавить("Очки", Новый ОписаниеТипов("Число"));
		ДанныеПоМестамУчастников.Колонки.Добавить("Место", Новый ОписаниеТипов("Число"));
		ДанныеПоМестамУчастников.Колонки.Добавить("Соотношение", Новый ОписаниеТипов("Строка"));

		КоличествоУчастников = Объект.УчастникиПоЖеребьевке.НайтиСтроки(
			Новый Структура("НомерГруппы,НомерТура,РежимТура", НомГруппы, НомерТура,
			Перечисления.РежимыТуровСоревнования.Групповой));
		//заполним таблицу с местами
		Для Мест = 0 По КоличествоУчастников.ВГраница() Цикл
			НовСтрокаДанных = ДанныеПоМестамУчастников.Добавить();
			НовСтрокаДанных["Участник"] = КоличествоУчастников[Мест].Участник;
		КонецЦикла;
		ТаблицаСМестами = Документы.ПроведениеСоревнования.РасчетМестНаСервере(ДанныеПоМестамУчастников.Скопировать( ,
			"Участник"), мОбщаяТаблицаПоТуру, НомерТура);
		Для Каждого ТекСтрРасчета Из ТаблицаСМестами Цикл
			ИскомаяСтрока = ДанныеПоМестамУчастников.Найти(ТекСтрРасчета.Участник, "Участник");
			Если ИскомаяСтрока <> Неопределено Тогда
				ЗаполнитьЗначенияСвойств(ИскомаяСтрока, ТекСтрРасчета);
			КонецЕсли;
		КонецЦикла;
		ДанныеПоМестамУчастников.Сортировать("Место ВОЗВ");
	Иначе
		//-------------------------для сеток
		мОбщаяТаблицаПоТуру = Объект.ОбщаяТаблицаДанных.Выгрузить(Новый Структура("НомерТура",НомерТура));
		ДанныеПоМестамУчастников = Новый ТаблицаЗначений;
		ДанныеПоМестамУчастников.Колонки.Добавить("Участник",Новый ОписаниеТипов("СправочникСсылка.Участники"));
		ДанныеПоМестамУчастников.Колонки.Добавить("Очки",Новый ОписаниеТипов("Число"));
		ДанныеПоМестамУчастников.Колонки.Добавить("Место",Новый ОписаниеТипов("Число"));
		ДанныеПоМестамУчастников.Колонки.Добавить("Соотношение",Новый ОписаниеТипов("Строка"));
		
		КоличествоУчастников = Объект.УчастникиПоЖеребьевке.НайтиСтроки(Новый Структура("НомерТура,РежимТура",НомерТура,РежимТура));
		//заполним таблицу с местами
		Для Мест = 0 По КоличествоУчастников.ВГраница() Цикл
			НовСтрокаДанных = ДанныеПоМестамУчастников.Добавить();
			НовСтрокаДанных["Участник"] = КоличествоУчастников[Мест].Участник; 
		КонецЦикла;
		ТаблицаМестИгр = Новый ТаблицаЗначений;
		ТаблицаМестИгр.Колонки.Добавить("НомерИгры");
		//расчет мест
		Если ЗначениеЗаполнено(СтрокаТаблицы.СеткаНа) Тогда
			ЧислоУчастников = СтрокаТаблицы.СеткаНа;
		Иначе
			ЧислоУчастников = КоличествоУчастников.Количество();
		КонецЕсли; 
		Если ЧислоУчастников >= 4 И ЧислоУчастников <= 8 Тогда //схема 8
			Документы.ПроведениеСоревнования.ТаблицаМестКонечныхИгр(ТаблицаМестИгр,РежимТура,8);
		ИначеЕсли ЧислоУчастников > 8 И ЧислоУчастников <= 16 Тогда //схема на 16
			Документы.ПроведениеСоревнования.ТаблицаМестКонечныхИгр(ТаблицаМестИгр,РежимТура,16);
		ИначеЕсли ЧислоУчастников > 16 И ЧислоУчастников <= 24 Тогда
			Документы.ПроведениеСоревнования.ТаблицаМестКонечныхИгр(ТаблицаМестИгр,РежимТура,24);
		ИначеЕсли ЧислоУчастников > 24 И ЧислоУчастников <= 32 Тогда
			Документы.ПроведениеСоревнования.ТаблицаМестКонечныхИгр(ТаблицаМестИгр,РежимТура,32);
		ИначеЕсли ЧислоУчастников > 32 И ЧислоУчастников <= 48 Тогда
			Документы.ПроведениеСоревнования.ТаблицаМестКонечныхИгр(ТаблицаМестИгр,РежимТура,48);
		ИначеЕсли ЧислоУчастников > 48 И ЧислоУчастников <= 64 Тогда
			Документы.ПроведениеСоревнования.ТаблицаМестКонечныхИгр(ТаблицаМестИгр,РежимТура,64);
		КонецЕсли;
		СчМест = 0;
		//вся таблица идет по порядку мест
		Для каждого ТекИгра Из ТаблицаМестИгр Цикл
			//ищем по номеру игры выигравшего и програвшего из общей таблицы
			ДанныеСтрокиТаблицы = мОбщаяТаблицаПоТуру.НайтиСтроки(Новый Структура("НомерГруппы",ТекИгра.НомерИгры));
			Если ДанныеСтрокиТаблицы.Количество() > 0 Тогда
				СчМест = СчМест + 1;
				перемВыигравший = ДанныеСтрокиТаблицы[0].Выигравший;
				//устанавливаем место
				СтрокаСВыигравшим = ДанныеПоМестамУчастников.Найти(перемВыигравший);
				Если СтрокаСВыигравшим <> Неопределено Тогда
					СтрокаСВыигравшим.Место = СчМест;
				КонецЕсли; 
				СчМест = СчМест + 1;
				перемПроигравший = ДанныеСтрокиТаблицы[0].Проигравший;
				СтрокаСПроигрвшим = ДанныеПоМестамУчастников.Найти(перемПроигравший);
				Если СтрокаСПроигрвшим <> Неопределено Тогда
					СтрокаСПроигрвшим.Место = СчМест;
				КонецЕсли; 
			Иначе
				//возможно еще не сыграли
				Продолжить;
			КонецЕсли; 
		КонецЦикла; 
		ДанныеПоМестамУчастников.Сортировать("Место ВОЗВ");
	КонецЕсли; 
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = "ВЫБРАТЬ * ПОМЕСТИТЬ втТЗ ИЗ &Внеш КАК Внеш";
	Запрос.УстановитьПараметр("Внеш", ДанныеПоМестамУчастников);
	Запрос.Выполнить();
	
	Запрос.УстановитьПараметр("Кэф", Объект.Коэфф);
	Запрос.УстановитьПараметр("ДатаДока", Объект.Дата);
	Текст = "ВЫБРАТЬ
	|	БонусныеОчкиСрезПоследних.Место,
	|	БонусныеОчкиСрезПоследних.БонусОчков
	|ПОМЕСТИТЬ втТаблицаБонусов
	|ИЗ
	|	РегистрСведений.БонусныеОчки.СрезПоследних(&ДатаДока, &Кэф
	|		МЕЖДУ КоэффициентСоревнования И КоэффициентСоревнованияДо) КАК БонусныеОчкиСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втТЗ.Участник КАК Участник,
	|	втТЗ.Место КАК Место,
	|	ЕСТЬNULL(втТаблицаБонусов.БонусОчков, 0) КАК КоличествоБонуса
	|ИЗ
	|	втТЗ КАК втТЗ
	|		ЛЕВОЕ СОЕДИНЕНИЕ втТаблицаБонусов КАК втТаблицаБонусов
	|		ПО втТЗ.Место = втТаблицаБонусов.Место
	|
	|УПОРЯДОЧИТЬ ПО
	|	Место,
	|	Участник";
	Запрос.Текст = Текст;
	Результат = Запрос.Выполнить().Выгрузить();
	Для каждого ТекСтр Из Результат Цикл
		НовСтрока = Объект.Бонусы.Добавить();
		ЗаполнитьЗначенияСвойств(НовСтрока,ТекСтр);
	КонецЦикла; 
	
	ЭтотОбъект.Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Функция ПодготовитьДанныеДляПоиска(ТекстПоиска)
	
	СтруктураПоиска = Новый Структура;
	СтруктураПоиска.Вставить("Текст", ТекстПоиска);
	МассивУчастников = Новый Массив;
	Если Объект.ОбщийРежимСоревнования = 0 Или Объект.ОбщийРежимСоревнования = 1 Тогда
		Для Каждого ТекУчастик Из Объект.СписокУчастников Цикл
			МассивУчастников.Добавить(ТекУчастик.Участник);
		КонецЦикла;
	ИначеЕсли Объект.ОбщийРежимСоревнования = 2 Тогда
		Для Каждого ТекУчастик Из Объект.ТаблицаКоманд Цикл
			МассивУчастников.Добавить(ТекУчастик.Участник);
		КонецЦикла;
	КонецЕсли; 
	
	СтруктураПоиска.Вставить("Участники", МассивУчастников);
	
	Возврат СтруктураПоиска;
	
КонецФункции

&НаСервереБезКонтекста
Функция ВозвратДанных(СтруктураПоиска)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("СписокУчастников", СтруктураПоиска.Участники);
	Текст = 
	"ВЫБРАТЬ
	|	Участники.Ссылка КАК Участник,
	|	Участники.ДатаРождения КАК ДатаРождения
	|ИЗ
	|	Справочник.Участники КАК Участники
	|ГДЕ
	|	Участники.Ссылка В (&СписокУчастников)
	|УПОРЯДОЧИТЬ ПО
	|	Участники.Наименование,
	|	ДатаРождения";
	
	Запрос.Текст = Текст;
	Результат = Запрос.Выполнить().Выгрузить();
	
	Список = Новый СписокЗначений;
	Для Каждого ТекСтр Из Результат Цикл
		ТекстПредставление = "";
		Если ЗначениеЗаполнено(ТекСтр.ДатаРождения) Тогда
			ТекстПредставление = "" + ТекСтр.Участник + " (" + Формат(ТекСтр.ДатаРождения, "ДФ=dd.MM.yy") + ")";
		Иначе
			ТекстПредставление = "" + ТекСтр.Участник;
		КонецЕсли;
		ИтоговаяСтрока = СтрНайтиИВыделитьОформлением(ТекстПредставление, СтруктураПоиска.Текст);
		Если ИтоговаяСтрока <> Неопределено Тогда
			Список.Добавить(ТекСтр.Участник, ИтоговаяСтрока, , БиблиотекаКартинок.Реквизит);
		КонецЕсли;
	КонецЦикла;

	Возврат Список;
	
КонецФункции

&НаКлиенте
Процедура ОчиститьБыстрыйРасчетЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Ответ = РезультатВопроса;
	Если Ответ = КодВозвратаДиалога.Да Тогда
		Объект.ТаблицаБыстрогоРасчета.Очистить();
		ЭтотОбъект.Модифицированность = Истина;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура КомандаОбновитьРейтингЗавершение(Дата, ДополнительныеПараметры) Экспорт
	
	мТекДата = ?(Дата = Неопределено, ДополнительныеПараметры.мТекДата, Дата);
		
	Если (Дата <> Неопределено) Тогда
		ОбновитьРейтингВСпискеУчастников(мТекДата);
		ЭтотОбъект.Модифицированность = Истина;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ОбновитьРейтингВСпискеУчастников(мДатаОбновления = Неопределено)
	Для Каждого ТекСтр Из Объект.СписокУчастников Цикл
		ТекСтр.ТекущийРейтинг = СерверныеСервер.ПолучитьТекущийРейтингУчастника(ТекСтр.Участник, ?(мДатаОбновления
			= Неопределено, ТекущаяДатаСеанса(), мДатаОбновления), Объект.ВидРейтинга);
	КонецЦикла; 	
	РассчитатьСреднийРейтинг();
КонецПроцедуры

&НаКлиенте
Процедура КомандаПеренестиЛичныеИгрыВБыстрыйРасчетЗавершение1(Список, ДополнительныеПараметры) Экспорт
	
	СписокТуров = ДополнительныеПараметры.СписокТуров;
	
	Если Объект.ТаблицаБыстрогоРасчета.Количество() > 0 Тогда
		СписокКнопок = Новый СписокЗначений;
		СписокКнопок.Добавить("Добавить", "Добавить к существующим");
		СписокКнопок.Добавить("УдалитьИДобавить", "Удалить и добавить");

		ПоказатьВопрос(Новый ОписаниеОповещения("КомандаПеренестиЛичныеИгрыВБыстрыйРасчетЗавершение", ЭтотОбъект,
			Новый Структура("СписокТуров", СписокТуров)), "В быстром расчете уже есть данные, что будем делать?",
			СписокКнопок, 40);
		Возврат; 
	КонецЕсли; 
	КомандаПеренестиЛичныеИгрыВБыстрыйРасчетФрагмент(СписокТуров);
		
КонецПроцедуры

&НаКлиенте
Процедура КомандаПеренестиЛичныеИгрыВБыстрыйРасчетЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	СписокТуров = ДополнительныеПараметры.СписокТуров;
	
	Ответ = РезультатВопроса;
	Если Ответ = "УдалитьИДобавить" Тогда
		Объект.ТаблицаБыстрогоРасчета.Очистить();	
	КонецЕсли; 
	
	КомандаПеренестиЛичныеИгрыВБыстрыйРасчетФрагмент(СписокТуров);

КонецПроцедуры

&НаКлиенте
Процедура КомандаПеренестиЛичныеИгрыВБыстрыйРасчетФрагмент(Знач СписокТуров)
	
	ПеренестиЛичныеВстречи(СписокТуров);

КонецПроцедуры

&НаСервере
Процедура ПеренестиЛичныеВстречи(парСписокТуров)
	
	втСписокТуров = Новый СписокЗначений;
	Для каждого ТекТурСписка Из парСписокТуров Цикл
		Если ТекТурСписка.Пометка Тогда
			втСписокТуров.Добавить(ТекТурСписка.Значение);
		КонецЕсли; 
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = "ВЫБРАТЬ * ПОМЕСТИТЬ втОбщая ИЗ &Внеш КАК Внеш";
	Запрос.УстановитьПараметр("Внеш",Объект.ОбщаяТаблицаДанных.Выгрузить());
	Запрос.Выполнить();
	
	Запрос.Текст = "ВЫБРАТЬ
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Выигравший КАК Участник1,
	|	СУММА(ПроведениеСоревнованияОбщаяТаблицаДанных.ОчкиВыигравшего) КАК КолПартий1,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Проигравший КАК Участник2,
	|	СУММА(ПроведениеСоревнованияОбщаяТаблицаДанных.ОчкиПроигравшего) КАК КолПартий2,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.НомерТура КАК НомерТура,
	|	0 КАК ТекущийРейтинг1,
	|	0 КАК ТекущийРейтинг2,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.НомерГруппы КАК НомерГруппы
	|ИЗ
	|	втОбщая КАК ПроведениеСоревнованияОбщаяТаблицаДанных
	|ГДЕ
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.ТехническоеВ = ЛОЖЬ
	|	И ПроведениеСоревнованияОбщаяТаблицаДанных.ТехническоеП = ЛОЖЬ
	|	И ПроведениеСоревнованияОбщаяТаблицаДанных.НомерТура В(&НомераТура)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Выигравший,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Проигравший,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.НомерТура,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.НомерГруппы
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерТура,
	|	НомерГруппы,
	|	Участник1";
	Запрос.УстановитьПараметр("НомераТура",втСписокТуров);
	Результат = Запрос.Выполнить().Выгрузить();
	Для каждого ТекСтр Из Результат Цикл
		НовСтрока = Объект.ТаблицаБыстрогоРасчета.Добавить();
		ЗаполнитьЗначенияСвойств(НовСтрока,ТекСтр);
		НовСтрока.ТекущийРейтинг1 = ПоискРейтингаУчастникаНаСервере(НовСтрока.Участник1);
		НовСтрока.ТекущийРейтинг2 = ПоискРейтингаУчастникаНаСервере(НовСтрока.Участник2);
	КонецЦикла;
	
	ПересчитатьВсеСтрокиБыстрогоРасчета();
	
	Объект.ОбщийРежимСоревнования = 1;
	ОбработатьФормуПриИзмененииРежима();
	ЭтотОбъект.Модифицированность = Истина;
	
КонецПроцедуры
  
&НаКлиенте
Процедура ХодСоревнованияКомандыКолПартийНачалоВыбораЗавершение(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
	
	ВыбранноеЗначение = ВыбранныйЭлемент;
	Если ВыбранноеЗначение <> Неопределено Тогда
		Элементы.ХодСоревнованияКоманды.ТекущиеДанные.КолПартий = ВыбранноеЗначение.Значение;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОбновитьИтоговыйРейтингПоКоманде(парКоманды = Неопределено)
	
	Если парКоманды = Неопределено Тогда
		Отбор = Новый Структура("НазваниеКоманды",ТекКоманда);
	Иначе
		Отбор = Новый Структура("НазваниеКоманды",парКоманды);		
	КонецЕсли; 
	МассивСтрок = Объект.ТаблицаКоманд.НайтиСтроки(Отбор);
	ИтогРейтингаПоКоманде = 0;
	СчУч = 0;
	Для каждого ТекСтр Из МассивСтрок Цикл
		ИтогРейтингаПоКоманде = ИтогРейтингаПоКоманде + ТекСтр.ТекущийРейтинг;
		СчУч = СчУч + 1;
		Если СчУч = фКоличествоУчастниковДляПодсчета Тогда
			Прервать;
		КонецЕсли; 
	КонецЦикла;
	
	//попробуем найти строку с командой в ТЗ формы
	Искомые = Объект.НазванияКоманд.НайтиСтроки(Отбор);
	Если Искомые.Количество() > 0 Тогда
		Искомые[0].ТекущийРейтинг = ИтогРейтингаПоКоманде;
	КонецЕсли; 
	ИскомыеВЖеребьевке = Объект.КомандыПоЖеребьевке.НайтиСтроки(Отбор);
	Для Каждого ТекСтр Из ИскомыеВЖеребьевке Цикл
		ТекСтр.ТекущийРейтинг = ИтогРейтингаПоКоманде;
	КонецЦикла; 
	
КонецПроцедуры
 
&НаКлиенте
Процедура ХодСоревнованияКомандыПередУдалениемЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	ТекСтрока = ДополнительныеПараметры.ТекСтрока;
	Ответ = РезультатВопроса;
	Если Ответ = КодВозвратаДиалога.Да Тогда
		УдалитьДанныеПоЭтапуКоманды(ТекСтрока.НомерСтроки);
		Модифицированность = Истина;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура УдалитьДанныеПоЭтапуКоманды(НомерТура)
	
	//удаляем из жеребьевки
	МассивСтрокЖеребьевки = Объект.КомандыПоЖеребьевке.НайтиСтроки(Новый Структура("НомерТура",НомерТура));
	Для Каждого ТекСтрока Из МассивСтрокЖеребьевки Цикл
		Объект.КомандыПоЖеребьевке.Удалить(Объект.КомандыПоЖеребьевке.Индекс(ТекСтрока));
	КонецЦикла;
	
	МассивСтрок = Объект.ОбщаяТаблицаДанныхПоКомандам.НайтиСтроки(Новый Структура("НомерТура",НомерТура));
	Для Каждого ТекСтрока Из МассивСтрок Цикл
		Объект.ОбщаяТаблицаДанныхПоКомандам.Удалить(Объект.ОбщаяТаблицаДанныхПоКомандам.Индекс(ТекСтрока));
	КонецЦикла;
		
КонецПроцедуры

&НаКлиенте
Процедура СдвинутьСтрокуТаблицыКоманды(ЗначСдвига = 1)
	
	ТекСтрока = Элементы.ТаблицаКоманд1.ТекущиеДанные;
	Если ТекСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Объект.ТаблицаКоманд.Сдвинуть(Объект.ТаблицаКоманд.Индекс(ТекСтрока),ЗначСдвига);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьСписокКоманд()
	
	ТЗ = Объект.ТаблицаКоманд.Выгрузить(,"НазваниеКоманды");
	ТЗ.Свернуть("НазваниеКоманды");
	втСписок = Новый СписокЗначений;
	Для Каждого ТекСтр Из ТЗ Цикл
		втСписок.Добавить(ТекСтр.НазваниеКоманды);
	КонецЦикла; 
	Возврат втСписок;
	
КонецФункции

&НаСервере
Функция ВернутьАдресСпискаУчастников()
	Возврат ПоместитьВоВременноеХранилище(Объект.СписокУчастников.Выгрузить(),ЭтотОбъект.УникальныйИдентификатор);
КонецФункции

&НаКлиенте
Процедура ПослеВыбораНастроекЗагрузки(Результат, ДопПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		ЗагрузитьФайлЭксель(Результат);	
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти // СлужебныеПроцедурыИФункции

#Область ПодключаемыеКоманды
// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
#КонецОбласти