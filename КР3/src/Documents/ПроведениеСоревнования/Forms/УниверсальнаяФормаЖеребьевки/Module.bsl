
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	//разбираем параметры
	ВнестиДанные = Ложь;
	СсылкаНаДок = ДанныеФормыВЗначение(Параметры.ОбъектДок,Тип("ДокументОбъект.ПроведениеСоревнования"));
	ЗначениеВРеквизитФормы(СсылкаНаДок,"ОбъектДок");
	НомерТура   = Параметры.НомерТура;
	РежимТура   = Параметры.РежимТура;
	Коммент		= Параметры.Коммент;
	НумерацияСетки = ОбъектДок.НумерацияВСетке;
	
	ВидСоревнований = Параметры.ВидСоревнований;
	ЖеребьевкаКоманд = Параметры.ЖеребьевкаКоманд;
	
	Если РежимТура = ПредопределенноеЗначение("Перечисление.РежимыТуровСоревнования.Групповой") Тогда
		Элементы.ВариантПревью.Видимость = Ложь;	
	КонецЕсли; 
	
	ПустаяСсылкаУчастника = Справочники.Участники.ПустаяСсылка();
	Заголовок = "Жеребьевка " + НомерТура + " тура, " + НРег(РежимТура);
	
	Если ВидСоревнований = Перечисления.ВидыСоревнований.Личные Тогда
		ОбработатьФормуДляЛичныхСоревнований();
	ИначеЕсли ВидСоревнований = Перечисления.ВидыСоревнований.Командные Тогда
		ОбработатьФормуДляКомандныхСоревнований();
	КонецЕсли; 
	
	Если Параметры.Свойство("Команда") Тогда
		Если Параметры.Команда = "РезультатЖеребьевки" Тогда
			Если ВидСоревнований = Перечисления.ВидыСоревнований.Личные Тогда
				//заполним уже имеющихся игроков в жребьевке
				ТЗЖеребьевки = СсылкаНаДок.УчастникиПоЖеребьевке.Выгрузить(Новый Структура("НомерТура",НомерТура));
				//ТЗЖеребьевки.Сортировать("НомерГруппы ВОЗР");
				УчастникиВСледующийТур.Очистить();
				Для Каждого ТекСтрока Из ТЗЖеребьевки Цикл
					НовСтрока = УчастникиВСледующийТур.Добавить();
					ЗаполнитьЗначенияСвойств(НовСтрока, ТекСтрока);
					НовСтрока.Рейтинг = ТекСтрока.ТекущийРейтинг;
					Если ЧисловоеЗначениеТура = 1 Тогда
						НовСтрока.Номер    = ТекСтрока.НомерГруппы;
					Иначе
						НовСтрока.Номер    = ТекСтрока.НомерИгры;
					КонецЕсли;
					ИскомыйУчастник = ИсходныеИгроки.НайтиСтроки(Новый Структура("Участник",ТекСтрока.Участник));
					Если ИскомыйУчастник.Количество() > 0 Тогда
						//удалим его
						ИсходныеИгроки.Удалить(ИсходныеИгроки.Индекс(ИскомыйУчастник[0]));
					КонецЕсли;
				КонецЦикла;
				ОбновитьСписокВыбораСеток();
				втСеткаНа = 0;
				Параметры.Свойство("СеткаНа", втСеткаНа);
				Если втСеткаНа <> 0 Тогда
					СеткаНа = втСеткаНа;
				КонецЕсли; 
			ИначеЕсли ВидСоревнований = Перечисления.ВидыСоревнований.Командные Тогда 
				//заполним уже имеющихся игроков в жребьевке
				ТЗЖеребьевки = СсылкаНаДок.КомандыПоЖеребьевке.Выгрузить(Новый Структура("НомерТура",НомерТура));
				//ТЗЖеребьевки.Сортировать("НомерГруппы ВОЗР");
				УчастникиВСледующийТур.Очистить();
				Для Каждого ТекСтрока Из ТЗЖеребьевки Цикл
					НовСтрока = УчастникиВСледующийТур.Добавить();
					ЗаполнитьЗначенияСвойств(НовСтрока,ТекСтрока);
					НовСтрока.Рейтинг = ТекСтрока.ТекущийРейтинг;
					Если ЧисловоеЗначениеТура = 1 Тогда
						НовСтрока.Номер    = ТекСтрока.НомерГруппы;
					Иначе
						НовСтрока.Номер    = ТекСтрока.НомерИгры;
					КонецЕсли;
					ИскомыйУчастник = ИсходныеИгроки.НайтиСтроки(Новый Структура("НазваниеКоманды",ТекСтрока.НазваниеКоманды));
					Если ИскомыйУчастник.Количество() > 0 Тогда
						//удалим его
						ИсходныеИгроки.Удалить(ИсходныеИгроки.Индекс(ИскомыйУчастник[0]));
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли; 
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьФормуДляЛичныхСоревнований()
	
	ВариантРаскраски = 1;
	Элементы.ЖеребьвкаКоманд.Видимость = Ложь;
	// Групповой 	 = 1
	// Система -2 	 = 2
	// Олимпийка 	 = 3
	// Прогрессивная = 4
	Если НомерТура > 1 Тогда
		МестаИзТура = НомерТура - 1;
	Иначе
		МестаИзТура = НомерТура;
	КонецЕсли; 
	ЗаполнитьИсходныхУчастниковСМестами();
	Если РежимТура = Перечисления.РежимыТуровСоревнования.Групповой Тогда
		ЧисловоеЗначениеТура = 1;
		ВыполнитьПодготовкуКГрупповомуРежиму();
	ИначеЕсли РежимТура =  Перечисления.РежимыТуровСоревнования.МинусДва Тогда
		ЧисловоеЗначениеТура = 2;
		ВыполнитьПодготовкуКРежимуСистемаМинус2();
	ИначеЕсли РежимТура =  Перечисления.РежимыТуровСоревнования.Олимпийка Тогда
		ЧисловоеЗначениеТура = 3;
		ВыполнитьПодготовкуКРежимуСистемаМинус2(); //пока так оставим
	ИначеЕсли РежимТура = Перечисления.РежимыТуровСоревнования.Прогрессивная Тогда
		ЧисловоеЗначениеТура = 4;
		ВыполнитьПодготовкуКРежимуСистемаМинус2();
	КонецЕсли;
	ОбновитьСписокВыбораСеток();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСписокВыбораСеток()
	
	Элементы.СеткаНа.СписокВыбора.Очистить();
	
	мКолУчастников = УчастникиВСледующийТур.Количество();
	
	Если ЧисловоеЗначениеТура <> 1 Тогда //групповой не берем
		//по -2 и олимпийке есть все
		//по прогрессивке только 8 и 16
		СписокВыбораСеток = Новый Массив;
		Если ЧисловоеЗначениеТура = 2 Или ЧисловоеЗначениеТура = 3 Тогда
			ДобавитьВМассивСетку(СписокВыбораСеток,мКолУчастников,8);
			ДобавитьВМассивСетку(СписокВыбораСеток,мКолУчастников,16);
			ДобавитьВМассивСетку(СписокВыбораСеток,мКолУчастников,24);
			ДобавитьВМассивСетку(СписокВыбораСеток,мКолУчастников,32);
			ДобавитьВМассивСетку(СписокВыбораСеток,мКолУчастников,48);
			ДобавитьВМассивСетку(СписокВыбораСеток,мКолУчастников,64);
		Иначе
			ДобавитьВМассивСетку(СписокВыбораСеток,мКолУчастников,8);
			ДобавитьВМассивСетку(СписокВыбораСеток,мКолУчастников,16);
			ДобавитьВМассивСетку(СписокВыбораСеток,мКолУчастников,24);
			ДобавитьВМассивСетку(СписокВыбораСеток,мКолУчастников,32);
		КонецЕсли; 
		Если СписокВыбораСеток.Количество() > 0 Тогда
			Элементы.СеткаНа.СписокВыбора.ЗагрузитьЗначения(СписокВыбораСеток);
			Если ЧисловоеЗначениеТура = 2 Или ЧисловоеЗначениеТура = 3 Тогда
				Если мКолУчастников >= 4 И мКолУчастников <= 8 Тогда //схема 8
					СеткаНа = 8;	
				ИначеЕсли мКолУчастников > 8 И мКолУчастников <= 16 Тогда //схема на 16
					СеткаНа = 16;	
				ИначеЕсли мКолУчастников > 16 И мКолУчастников <= 24 Тогда
					СеткаНа = 24;	
				ИначеЕсли мКолУчастников > 24 И мКолУчастников <= 32 Тогда
					СеткаНа = 32;	
				ИначеЕсли мКолУчастников > 32 И мКолУчастников <= 48 Тогда
					СеткаНа = 48;	
				ИначеЕсли мКолУчастников > 48 И мКолУчастников <= 64 Тогда
					СеткаНа = 64;	
				КонецЕсли;
			Иначе  //прогрессивная система
				Если мКолУчастников >= 4 И мКолУчастников <= 8 Тогда //схема 8
					СеткаНа = 8;	
				ИначеЕсли мКолУчастников > 8 И мКолУчастников <= 16 Тогда //схема на 16
					СеткаНа = 16;	
				ИначеЕсли мКолУчастников > 16 И мКолУчастников <= 24 Тогда //схема на 24
					СеткаНа = 24;	
				ИначеЕсли мКолУчастников > 16 И мКолУчастников <= 32 Тогда //схема на 32
					СеткаНа = 32;	
			КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
		
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ДобавитьВМассивСетку(МассивСеток,КолУч,ДобавляемаяСетка)
	
	Если КолУч <= ДобавляемаяСетка Тогда
		МассивСеток.Добавить(ДобавляемаяСетка)	
	КонецЕсли; 
	
КонецПроцедуры
 
&НаСервере
Процедура ОбработатьФормуДляКомандныхСоревнований()
	
	ВариантРаскраски = 99;
	
	Элементы.МестаИзЭтапа.Видимость = Ложь;
	Элементы.ВариантРаскраски.Видимость = Ложь;
	Элементы.Превью.Видимость = Ложь;
	Элементы.СеткаНа.Видимость = Ложь;
	
	Элементы.ИсходныеИгрокиМестоВГруппе.Видимость = Ложь;
	Элементы.ИсходныеИгрокиУчастник.Видимость = Ложь;
	Элементы.ИсходныеИгрокиУчастникКлуб.Видимость = Ложь;
	
	Элементы.ИсходныеИгрокиУчастникГород.Видимость = Ложь;
	Элементы.ИсходныеИгрокиУчастникТренер.Видимость = Ложь;
	
	Элементы.ИсходныеИгрокиНазваниеКоманды.Видимость = Истина;
	
	Элементы.УчастникиВСледующийТурУчастник.Видимость = Ложь;
	Элементы.УчастникиВСледующийТурУчастникКлуб.Видимость = Ложь;
	
	Элементы.УчастникиВСледующийТурУчастникГород.Видимость = Ложь;
	Элементы.УчастникиВСледующийТурУчастникТренер.Видимость = Ложь;
	
	Элементы.УчастникиВСледующийТурНазваниеКоманды.Видимость = Истина;
	
	Элементы.ФормаСервисная.Заголовок = "Все команды";
	Элементы.Группа1.Заголовок = "Все команды";
	Элементы.Группа4.Заголовок = "Команды тура";
	ЗаполнитьВсеКоманды();
	Если РежимТура = Перечисления.РежимыТуровСоревнования.Групповой Тогда
		ЧисловоеЗначениеТура = 1;
		ВыполнитьПодготовкуКГрупповомуРежиму();
	ИначеЕсли РежимТура =  Перечисления.РежимыТуровСоревнования.МинусДва Тогда
		ЧисловоеЗначениеТура = 2;
		ВыполнитьПодготовкуКРежимуСистемаМинус2();
	ИначеЕсли РежимТура =  Перечисления.РежимыТуровСоревнования.Олимпийка Тогда
		ЧисловоеЗначениеТура = 3;
		ВыполнитьПодготовкуКРежимуСистемаМинус2();
	ИначеЕсли РежимТура = Перечисления.РежимыТуровСоревнования.Прогрессивная Тогда
		ЧисловоеЗначениеТура = 4;
		ВыполнитьПодготовкуКРежимуСистемаМинус2();
	КонецЕсли;
	
КонецПроцедуры
 
&НаСервере
Процедура ЗаполнитьИсходныхУчастниковСМестами()
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = "ВЫБРАТЬ * ПОМЕСТИТЬ втСписок ИЗ &Внеш КАК Внеш";
	Запрос.УстановитьПараметр("Внеш", ОбъектДок.УчастникиПоЖеребьевке.Выгрузить());
	Запрос.Выполнить();
	ТЗХодСоревнования = ОбъектДок.ХодСоревнования.Выгрузить();
	Запрос.Текст = "ВЫБРАТЬ * ПОМЕСТИТЬ втХодСоревнования ИЗ &Внеш КАК Внеш";
	Запрос.УстановитьПараметр("Внеш", ТЗХодСоревнования);
	Запрос.Выполнить();
	Запрос.УстановитьПараметр("НомерТура", МестаИзТура);
	
	Текст = "ВЫБРАТЬ
	|	ПроведениеСоревнованияХодСоревнования.НомерСтроки КАК НомерТура,
	|	ПроведениеСоревнованияХодСоревнования.РежимТура КАК РежимТура,
	|	ПроведениеСоревнованияХодСоревнования.СеткаНа КАК СеткаНа
	|ПОМЕСТИТЬ втНомераТуров
	|ИЗ
	|	втХодСоревнования КАК ПроведениеСоревнованияХодСоревнования
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПроведениеСоревнованияУчастникиПоЖеребьевке.НомерТура КАК НомерТура,
	|	ПроведениеСоревнованияУчастникиПоЖеребьевке.РежимТура КАК РежимТура,
	|	ПроведениеСоревнованияУчастникиПоЖеребьевке.Участник КАК Участник,
	|	ПроведениеСоревнованияУчастникиПоЖеребьевке.ТекущийРейтинг КАК ТекущийРейтинг,
	|	ПроведениеСоревнованияУчастникиПоЖеребьевке.НомерИгры КАК НомерИгры,
	|	ПроведениеСоревнованияУчастникиПоЖеребьевке.НомерГруппы КАК НомерГруппы,
	|	ПроведениеСоревнованияУчастникиПоЖеребьевке.Пропускает1Тур КАК Пропускает1Тур
	|ПОМЕСТИТЬ втОбщийСписок
	|ИЗ
	|	втСписок КАК ПроведениеСоревнованияУчастникиПоЖеребьевке
	|ГДЕ
	|	ПроведениеСоревнованияУчастникиПоЖеребьевке.РежимТура = ЗНАЧЕНИЕ(Перечисление.РежимыТуровСоревнования.Групповой)
	|	И ПроведениеСоревнованияУчастникиПоЖеребьевке.НомерТура = &НомерТура
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПроведениеСоревнованияУчастникиПоЖеребьевке.НомерТура,
	|	ПроведениеСоревнованияУчастникиПоЖеребьевке.РежимТура,
	|	ПроведениеСоревнованияУчастникиПоЖеребьевке.Участник,
	|	ПроведениеСоревнованияУчастникиПоЖеребьевке.ТекущийРейтинг,
	|	ПроведениеСоревнованияУчастникиПоЖеребьевке.НомерИгры,
	|	ПроведениеСоревнованияУчастникиПоЖеребьевке.НомерГруппы,
	|	ПроведениеСоревнованияУчастникиПоЖеребьевке.Пропускает1Тур
	|ИЗ
	|	втСписок КАК ПроведениеСоревнованияУчастникиПоЖеребьевке
	|ГДЕ
	|	ПроведениеСоревнованияУчастникиПоЖеребьевке.РежимТура <> ЗНАЧЕНИЕ(Перечисление.РежимыТуровСоревнования.Групповой)
	|	И ПроведениеСоревнованияУчастникиПоЖеребьевке.НомерТура = &НомерТура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(втОбщийСписок.НомерТура) КАК НомерТура,
	|	втОбщийСписок.Участник КАК Участник
	|ПОМЕСТИТЬ втСвернутаяТаблица
	|ИЗ
	|	втОбщийСписок КАК втОбщийСписок
	|СГРУППИРОВАТЬ ПО
	|	втОбщийСписок.Участник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втСвернутаяТаблица.НомерТура КАК НомерТура,
	|	втОбщийСписок.РежимТура КАК РежимТура,
	|	втСвернутаяТаблица.Участник КАК Участник,
	|	втОбщийСписок.ТекущийРейтинг КАК Рейтинг,
	|	втОбщийСписок.НомерИгры КАК НомерИгры,
	|	втОбщийСписок.НомерГруппы КАК НомерГруппы,
	|	0 КАК МестоВГруппе,
	|	ЕСТЬNULL(втНомераТуров.СеткаНа, 0) КАК СеткаНа,
	|	втОбщийСписок.Пропускает1Тур
	|ИЗ
	|	втСвернутаяТаблица КАК втСвернутаяТаблица
	|		ЛЕВОЕ СОЕДИНЕНИЕ втОбщийСписок КАК втОбщийСписок
	|		ПО втСвернутаяТаблица.НомерТура = втОбщийСписок.НомерТура
	|		И втСвернутаяТаблица.Участник = втОбщийСписок.Участник
	|		ЛЕВОЕ СОЕДИНЕНИЕ втНомераТуров КАК втНомераТуров
	|		ПО втСвернутаяТаблица.НомерТура = втНомераТуров.НомерТура
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерТура,
	|	НомерИгры,
	|	НомерГруппы";
	Запрос.Текст = Текст;
	Результат = Запрос.Выполнить().Выгрузить();
	//теперь для каждого участника нужно определить его место в этапе
	Для каждого ТекСтр Из Результат Цикл
		Если ТекСтр.РежимТура = Перечисления.РежимыТуровСоревнования.Групповой Тогда
			
			мОбщаяТаблицаПоТуру = ОбъектДок.ОбщаяТаблицаДанных.Выгрузить(Новый Структура("НомерТура,НомерГруппы",
				ТекСтр.НомерТура, ТекСтр.НомерГруппы));
			ДанныеПоМестамУчастников = Новый ТаблицаЗначений;
			ДанныеПоМестамУчастников.Колонки.Добавить("Участник",Новый ОписаниеТипов("СправочникСсылка.Участники"));
			ДанныеПоМестамУчастников.Колонки.Добавить("Очки",Новый ОписаниеТипов("Число"));
			ДанныеПоМестамУчастников.Колонки.Добавить("Место",Новый ОписаниеТипов("Число"));
			ДанныеПоМестамУчастников.Колонки.Добавить("Соотношение",Новый ОписаниеТипов("Строка"));
			
			КоличествоУчастников = ОбъектДок.УчастникиПоЖеребьевке.НайтиСтроки(
				Новый Структура("НомерГруппы,НомерТура,РежимТура",ТекСтр.НомерГруппы,ТекСтр.НомерТура,Перечисления.РежимыТуровСоревнования.Групповой));

			//заполним таблицу с местами
			Для Мест = 0 По КоличествоУчастников.ВГраница() Цикл
				НовСтрокаДанных = ДанныеПоМестамУчастников.Добавить();
				НовСтрокаДанных["Участник"] = КоличествоУчастников[Мест].Участник; 
			КонецЦикла;
			ТаблицаСМестами = Документы.ПроведениеСоревнования.РасчетМестНаСервере(
				ДанныеПоМестамУчастников.Скопировать( , "Участник"), мОбщаяТаблицаПоТуру, МестаИзТура);
			Для Каждого ТекСтрРасчета Из ТаблицаСМестами Цикл
				ИскомаяСтрока = ДанныеПоМестамУчастников.Найти(ТекСтрРасчета.Участник,"Участник");
				Если ИскомаяСтрока <> Неопределено Тогда
					ЗаполнитьЗначенияСвойств(ИскомаяСтрока,ТекСтрРасчета);
				КонецЕсли; 
			КонецЦикла;  
			
			ДанныеПоМестамУчастников.Сортировать("Место ВОЗВ");
			//ищем нашего участника
			ИскомыйУчастник = ДанныеПоМестамУчастников.Найти(ТекСтр.Участник,"Участник");
			Если ИскомыйУчастник <> Неопределено Тогда
				ТекСтр.МестоВГруппе = ИскомыйУчастник.Место;
			КонецЕсли; 
		Иначе
			мОбщаяТаблицаПоТуру = ОбъектДок.ОбщаяТаблицаДанных.Выгрузить(Новый Структура("НомерТура",ТекСтр.НомерТура));				
			ДанныеПоМестамУчастников = Новый ТаблицаЗначений;
			ДанныеПоМестамУчастников.Колонки.Добавить("Участник",Новый ОписаниеТипов("СправочникСсылка.Участники"));
			ДанныеПоМестамУчастников.Колонки.Добавить("Очки",Новый ОписаниеТипов("Число"));
			ДанныеПоМестамУчастников.Колонки.Добавить("Место",Новый ОписаниеТипов("Число"));
			ДанныеПоМестамУчастников.Колонки.Добавить("Соотношение",Новый ОписаниеТипов("Строка"));
			
			КоличествоУчастников = ОбъектДок.УчастникиПоЖеребьевке.НайтиСтроки(Новый Структура("НомерТура,РежимТура",
				ТекСтр.НомерТура, ТекСтр.РежимТура));
			//заполним таблицу с местами
			Для Мест = 0 По КоличествоУчастников.ВГраница() Цикл
				НовСтрокаДанных = ДанныеПоМестамУчастников.Добавить();
				НовСтрокаДанных["Участник"] = КоличествоУчастников[Мест].Участник; 
			КонецЦикла;
			ТаблицаМестИгр = Новый ТаблицаЗначений;
			ТаблицаМестИгр.Колонки.Добавить("НомерИгры");
			//расчет мест
			Если ЗначениеЗаполнено(ТекСтр.СеткаНа) Тогда
				ЧислоУчастников = ТекСтр.СеткаНа;
			Иначе
				ЧислоУчастников = КоличествоУчастников.Количество();
			КонецЕсли; 
			Если ЧислоУчастников >= 4 И ЧислоУчастников <= 8 Тогда //схема 8
				Документы.ПроведениеСоревнования.ТаблицаМестКонечныхИгр(ТаблицаМестИгр,ТекСтр.РежимТура,8);
			ИначеЕсли ЧислоУчастников > 8 И ЧислоУчастников <= 16 Тогда //схема на 16
				Документы.ПроведениеСоревнования.ТаблицаМестКонечныхИгр(ТаблицаМестИгр,ТекСтр.РежимТура,16);
			ИначеЕсли ЧислоУчастников > 16 И ЧислоУчастников <= 24 Тогда
				Документы.ПроведениеСоревнования.ТаблицаМестКонечныхИгр(ТаблицаМестИгр,ТекСтр.РежимТура,24);
			ИначеЕсли ЧислоУчастников > 24 И ЧислоУчастников <= 32 Тогда
				Документы.ПроведениеСоревнования.ТаблицаМестКонечныхИгр(ТаблицаМестИгр,ТекСтр.РежимТура,32);
			ИначеЕсли ЧислоУчастников > 32 И ЧислоУчастников <= 48 Тогда
				Документы.ПроведениеСоревнования.ТаблицаМестКонечныхИгр(ТаблицаМестИгр,ТекСтр.РежимТура,48);
			ИначеЕсли ЧислоУчастников > 48 И ЧислоУчастников <= 64 Тогда
				Документы.ПроведениеСоревнования.ТаблицаМестКонечныхИгр(ТаблицаМестИгр,ТекСтр.РежимТура,64);
			КонецЕсли;
			СчМест = 0;
			//вся таблица идет по порядку мест
			Для каждого ТекИгра Из ТаблицаМестИгр Цикл
				//ищем по номеру игры выигравшего и програвшего из общей таблицы
				ДанныеСтрокиТаблицы = мОбщаяТаблицаПоТуру.НайтиСтроки(Новый Структура("НомерГруппы",ТекИгра.НомерИгры));
				Если ДанныеСтрокиТаблицы.Количество() > 0 Тогда
					СчМест = СчМест + 1;
					перемВыигравший = ДанныеСтрокиТаблицы[0].Выигравший;
					//устанавливаем место
					СтрокаСВыигравшим = ДанныеПоМестамУчастников.Найти(перемВыигравший);
					Если СтрокаСВыигравшим <> Неопределено Тогда
						СтрокаСВыигравшим.Место = СчМест;
					КонецЕсли; 
					СчМест = СчМест + 1;
					перемПроигравший = ДанныеСтрокиТаблицы[0].Проигравший;
					СтрокаСПроигрвшим = ДанныеПоМестамУчастников.Найти(перемПроигравший);
					Если СтрокаСПроигрвшим <> Неопределено Тогда
						СтрокаСПроигрвшим.Место = СчМест;
					КонецЕсли; 
				Иначе
					//возможно еще не сыграли
					Продолжить;
				КонецЕсли; 
			КонецЦикла; 
			ДанныеПоМестамУчастников.Сортировать("Место ВОЗВ");
			//ищем нашего участника
			ИскомыйУчастник = ДанныеПоМестамУчастников.Найти(ТекСтр.Участник,"Участник");
			Если ИскомыйУчастник <> Неопределено Тогда
				ТекСтр.МестоВГруппе = ИскомыйУчастник.Место;
			КонецЕсли; 
		КонецЕсли; 
	КонецЦикла;
	СтрокаХодаСоревнования = ТЗХодСоревнования.Найти(МестаИзТура, "НомерСтроки");
	Если СтрокаХодаСоревнования <> Неопределено Тогда
		Элементы.ИсходныеИгрокиНомерГруппы.Видимость = СтрокаХодаСоревнования.РежимТура = Перечисления.РежимыТуровСоревнования.Групповой;		
	КонецЕсли;
	ИсходныеИгроки.Очистить();
	Для каждого СтрДанных Из Результат Цикл
		НовСтрока = ИсходныеИгроки.Добавить();
		ЗаполнитьЗначенияСвойств(НовСтрока,СтрДанных);
	КонецЦикла; 
	Для Каждого ТекСтрока Из ОбъектДок.СписокУчастников Цикл
		Искомый = ИсходныеИгроки.НайтиСтроки(Новый Структура("Участник", ТекСтрока.Участник));
		Если Искомый.Количество() = 0 Тогда
			НовСтрока = ИсходныеИгроки.Добавить();
			ЗаполнитьЗначенияСвойств(НовСтрока,ТекСтрока);
			НовСтрока.Рейтинг = ТекСтрока.ТекущийРейтинг;
		КонецЕсли; 
	КонецЦикла;
	
	Если Элементы.ИсходныеИгрокиНомерГруппы.Видимость Тогда
		ИсходныеИгроки.Сортировать("НомерГруппы ВОЗР, МестоВГруппе ВОЗР");
	КонецЕсли;
	
КонецПроцедуры

//ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ГРУППОВОГО РЕЖИМА
&НаСервере
Процедура ВыполнитьПодготовкуКГрупповомуРежиму()
	
	Элементы.УчастникиВСледующийТурПропускает1Тур.Видимость = Ложь;
	Элементы.УчастникиВСледующийТурНомер.КнопкаВыбора = Истина;
	Элементы.УчастникиВСледующийТурНомер.Видимость = Истина;
	Элементы.ФормаГрупповойЗмейка.Видимость = Истина;	
	Элементы.СеткаНа.Видимость = Ложь;
	Элементы.Декорация5.Видимость = Ложь;
	Элементы.ИсходныеИгрокиСобратьГруппы.Видимость = Истина;
	ЗаполнитьУсловноеОформлениеДляГрупповогоЭтапа();
	
КонецПроцедуры
 
//процедура раскрашивает участников групп в мягкие цвета
&НаСервере
Процедура ЗаполнитьУсловноеОформлениеДляГрупповогоЭтапа()

	УО = ЭтотОбъект.УсловноеОформление.Элементы;
	УО.Очистить();
	ГСЧ = Новый ГенераторСлучайныхЧисел;
	//сделаем цветов для 20 групп думаю больше врятли будет
	МассивЦветов = Новый Массив;
	Для Н = 1 По 20 Цикл
		ЦветПодошел = Ложь;
		Пока Не ЦветПодошел Цикл
			Р = ГСЧ.СлучайноеЧисло(235,255);
			Г = ГСЧ.СлучайноеЧисло(235,255);
			Б = ГСЧ.СлучайноеЧисло(235,255); 
			//надеюсь это будут только светлые цвета
			ЦветРаскраскиГруппы = Новый Цвет(Р,Г,Б);
			Если МассивЦветов.Найти(ЦветРаскраскиГруппы) = Неопределено Тогда
				МассивЦветов.Добавить(ЦветРаскраскиГруппы);
				ЦветПодошел = Истина;
			КонецЕсли;
		КонецЦикла;
		
		ЭлементУО = УО.Добавить();
		ЭлементУО.Оформление.УстановитьЗначениеПараметра("ЦветФона",ЦветРаскраскиГруппы);
		ЭлементУсловие = ЭлементУО.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементУсловие.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("УчастникиВСледующийТур.Номер");
		ЭлементУсловие.ВидСравнения  = ВидСравненияКомпоновкиДанных.Равно;
		ЭлементУсловие.ПравоеЗначение= Н;//для черных квадратиков
		//ОформляемоеПоле = ЭлементУО.Поля.Элементы.Добавить();
		//ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("УчастникиВСледующийТурУчастник");
		//ОформляемоеПоле = ЭлементУО.Поля.Элементы.Добавить();
		//ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("УчастникиВСледующийТурРейтинг");
		ОформляемоеПоле = ЭлементУО.Поля.Элементы.Добавить();
		ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("УчастникиВСледующийТурНомер");
	КонецЦикла;
	ЗаполнитьУФОформлениеОдноклубников(МассивЦветов);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьУФОформлениеОдноклубников(МассивЦветов = Неопределено)
	
	Если МассивЦветов = Неопределено Тогда
		МассивЦветов = Новый Массив;
	КонецЕсли; 
	
	//получим все клубы
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = "ВЫБРАТЬ * ПОМЕСТИТЬ втТЗ ИЗ &Внеш КАК Внеш";
	Запрос.УстановитьПараметр("Внеш",ОбъектДок.СписокУчастников.Выгрузить());
	Запрос.Выполнить();
	Текст = "ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА &Раскраска = 0
	|			ТОГДА ПроведениеСоревнованияСписокУчастников.Участник.Город
	|		КОГДА &Раскраска = 1
	|			ТОГДА ПроведениеСоревнованияСписокУчастников.Участник.Клуб
	|		ИНАЧЕ ПроведениеСоревнованияСписокУчастников.Участник.Тренер
	|	КОНЕЦ КАК ЗначениеРаскраски,
	|	ПроведениеСоревнованияСписокУчастников.Участник
	|ИЗ
	|	втТЗ КАК ПроведениеСоревнованияСписокУчастников
	|
	|СГРУППИРОВАТЬ ПО
	|	ПроведениеСоревнованияСписокУчастников.Участник,
	|	ВЫБОР
	|		КОГДА &Раскраска = 0
	|			ТОГДА ПроведениеСоревнованияСписокУчастников.Участник.Город
	|		КОГДА &Раскраска = 1
	|			ТОГДА ПроведениеСоревнованияСписокУчастников.Участник.Клуб
	|		ИНАЧЕ ПроведениеСоревнованияСписокУчастников.Участник.Тренер
	|	КОНЕЦ
	|ИТОГИ ПО
	|	ЗначениеРаскраски";
	Запрос.Текст = Текст;
	Запрос.УстановитьПараметр("Раскраска",ВариантРаскраски);
	ТаблицаКлубов = Запрос.Выполнить();
	Выборка = ТаблицаКлубов.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	УО = ЭтотОбъект.УсловноеОформление.Элементы;
	Если МассивЦветов.Количество() = 0 Тогда
		УО.Очистить();		
	КонецЕсли; 
	
	ГСЧ = Новый ГенераторСлучайныхЧисел;
	
	Пока Выборка.Следующий() Цикл
		Если Не ЗначениеЗаполнено(Выборка.ЗначениеРаскраски) Тогда
			Продолжить;
		КонецЕсли; 
		
		СписокУчастниковКлуба = Новый СписокЗначений;
		ВыборкаУчастников = Выборка.Выбрать();
		Пока ВыборкаУчастников.Следующий() Цикл
			СписокУчастниковКлуба.Добавить(ВыборкаУчастников.Участник);
		КонецЦикла; 
		ЦветПодошел = Ложь;
		Пока Не ЦветПодошел Цикл
			//что бы цвета не повторялись
			Р = ГСЧ.СлучайноеЧисло(215,255);
			Г = ГСЧ.СлучайноеЧисло(215,255);
			Б = ГСЧ.СлучайноеЧисло(173,255); 
			//надеюсь это будут только светлые цвета
			ЦветРаскраскиГруппы = Новый Цвет(Р,Г,Б);
			Если МассивЦветов.Найти(ЦветРаскраскиГруппы) = Неопределено Тогда
				МассивЦветов.Добавить(ЦветРаскраскиГруппы);
				ЦветПодошел = Истина;
			КонецЕсли;
		КонецЦикла;
		
		ЭлементУО = УО.Добавить();
		ЭлементУО.Оформление.УстановитьЗначениеПараметра("ЦветФона",ЦветРаскраскиГруппы);
		ЭлементУсловие = ЭлементУО.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементУсловие.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("УчастникиВСледующийТур.Участник");
		ЭлементУсловие.ВидСравнения  = ВидСравненияКомпоновкиДанных.ВСписке;
		ЭлементУсловие.ПравоеЗначение= СписокУчастниковКлуба;
		ОформляемоеПоле = ЭлементУО.Поля.Элементы.Добавить();
		ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("УчастникиВСледующийТурУчастник");
		ОформляемоеПоле = ЭлементУО.Поля.Элементы.Добавить();
		ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("УчастникиВСледующийТурУчастникКлуб");
		ОформляемоеПоле = ЭлементУО.Поля.Элементы.Добавить();
		ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("УчастникиВСледующийТурУчастникГород");
		ОформляемоеПоле = ЭлементУО.Поля.Элементы.Добавить();
		ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("УчастникиВСледующийТурУчастникТренер");
		
		ЭлементУО = УО.Добавить();
		ЭлементУО.Оформление.УстановитьЗначениеПараметра("ЦветФона",ЦветРаскраскиГруппы);
		ЭлементУсловие = ЭлементУО.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементУсловие.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ИсходныеИгроки.Участник");
		ЭлементУсловие.ВидСравнения  = ВидСравненияКомпоновкиДанных.ВСписке;
		ЭлементУсловие.ПравоеЗначение= СписокУчастниковКлуба;
		ОформляемоеПоле = ЭлементУО.Поля.Элементы.Добавить();
		ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("ИсходныеИгрокиУчастник");
		ОформляемоеПоле = ЭлементУО.Поля.Элементы.Добавить();
		ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("ИсходныеИгрокиУчастникГород");
		ОформляемоеПоле = ЭлементУО.Поля.Элементы.Добавить();
		ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("ИсходныеИгрокиУчастникКлуб");
		ОформляемоеПоле = ЭлементУО.Поля.Элементы.Добавить();
		ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("ИсходныеИгрокиУчастникТренер");
	КонецЦикла; 
	Если Выборка.Количество() = 1 И МассивЦветов.Количество() = 0 Тогда
		УО.Очистить();
	КонецЕсли;
	
КонецПроцедуры
 
&НаКлиенте
Процедура ГрупповойЗмейка(Команда)
	ПеремГруппы = 2;
	ПоказатьВводЧисла(Новый ОписаниеОповещения("ГрупповойЗмейкаЗавершение", ЭтотОбъект, Новый Структура("ПеремГруппы", ПеремГруппы)), ПеремГруппы,"Количество групп",2,0);
КонецПроцедуры

&НаКлиенте
Процедура ГрупповойЗмейкаЗавершение(Число, ДополнительныеПараметры) Экспорт
	
	ПеремГруппы = ?(Число = Неопределено, ДополнительныеПараметры.ПеремГруппы, Число);
	
	Если (Число <> Неопределено) Тогда
		ПровестиЖеребьевкуНаСервереЗмейка(ПеремГруппы);
		ОбновитьИтогиСписков();
		ОбновитьПревью();
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПровестиЖеребьевкуНаСервереЗмейка(ВведенноеКолГрупп)
	
	//1 2 3 4 5 6 6 5 4 3 2 1 1 2 и т.д.
	ПервыйНомерГр = 0;
	МаксНомерГр   = ВведенноеКолГрупп+1;
	ПоВозрастанию = Истина;
	ИсходныеИгроки.Сортировать("Рейтинг УБЫВ");
	//заполним табличную часть
	Для Каждого ТекУчастник Из ИсходныеИгроки Цикл
		Если ПоВозрастанию Тогда
			//добавляем участников в группы
			ПервыйНомерГр = ПервыйНомерГр +1;
			НовСтрока = УчастникиВСледующийТур.Добавить();
			НовСтрока.Номер	      = ПервыйНомерГр;
			НовСтрока.Участник    = ТекУчастник.Участник;
			НовСтрока.Рейтинг 	  = ТекУчастник.Рейтинг;
			НовСтрока.НазваниеКоманды = ТекУчастник.НазваниеКоманды;
			Если ПервыйНомерГр = ВведенноеКолГрупп Тогда
				ПоВозрастанию = Ложь;
				ПервыйНомерГр = 0;
			КонецЕсли;
		Иначе
			МаксНомерГр = МаксНомерГр -1;
			НовСтрока = УчастникиВСледующийТур.Добавить();
			НовСтрока.Номер 	  = МаксНомерГр;
			НовСтрока.Участник    = ТекУчастник.Участник;
			НовСтрока.Рейтинг     = ТекУчастник.Рейтинг;
			НовСтрока.НазваниеКоманды = ТекУчастник.НазваниеКоманды;
			Если МаксНомерГр = 1 Тогда
				ПоВозрастанию = Истина;
				МаксНомерГр = ВведенноеКолГрупп+1;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	ИсходныеИгроки.Очистить();
	УчастникиВСледующийТур.Сортировать("Номер Возр,Рейтинг УБЫВ");
	
КонецПроцедуры

//ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ РЕЖИМА СИСТЕМЫ -2
&НаСервере
Процедура ВыполнитьПодготовкуКРежимуСистемаМинус2()
	
	Элементы.УчастникиВСледующийТурНомер.Видимость = Истина;
	Элементы.УчастникиВСледующийТурНомер.КнопкаВыбора = Истина;
	// установим надпись для автоматической установки номеров
	Если НумерацияСетки = Перечисления.НумерацияВСетке.ПервыйПоследний Тогда
		Элементы.Декорация4.Видимость = Истина;
	ИначеЕсли НумерацияСетки = Перечисления.НумерацияВСетке.ПоПорядку Тогда
		Элементы.Декорация4.Видимость = Ложь;
		Элементы.Декорация5.Видимость = Ложь;
	КонецЕсли;
	Элементы.ГруппаУстановитьНомераУчастников.Видимость = Истина;
	ЗаполнитьУФОформлениеОдноклубников();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаУстановитьПоПорядку(Команда)
	УстановитьНомераГруппЗавершение(ПредопределенноеЗначение("Перечисление.НумерацияВСетке.ПоПорядку"));
КонецПроцедуры

&НаКлиенте
Процедура КомандаУстановитьНомераПервыйПоследний(Команда)
	УстановитьНомераГруппЗавершение(ПредопределенноеЗначение("Перечисление.НумерацияВСетке.ПервыйПоследний"));	
КонецПроцедуры

//ОБЩИЕ ПРОЦЕДУРЫ
&НаКлиенте
Процедура Вправо(Команда)
	
	ТекДанные = Элементы.ИсходныеИгроки.ТекущиеДанные;
	Отбор = Новый Структура;
	Если ВидСоревнований = ПредопределенноеЗначение("Перечисление.ВидыСоревнований.Личные") Тогда
		Отбор.Вставить("Участник",ТекДанные.Участник);
		СтрокаОшибки = Строка(ТекДанные.Участник)+" уже есть в выбранных участниках";
	ИначеЕсли ВидСоревнований = ПредопределенноеЗначение("Перечисление.ВидыСоревнований.Командные") Тогда
		Отбор.Вставить("НазваниеКоманды",ТекДанные.НазваниеКоманды);
		СтрокаОшибки = Строка(ТекДанные.НазваниеКоманды)+" уже есть в выбранных командах";
	КонецЕсли; 
	Искомый = УчастникиВСледующийТур.НайтиСтроки(Отбор);
	Если Искомый.Количество() = 0 Тогда
		Если ТекДанные <> Неопределено Тогда
			ИДСтроки  = Элементы.ИсходныеИгроки.ТекущаяСтрока;
			НовСтрока = УчастникиВСледующийТур.Добавить();
			ЗаполнитьЗначенияСвойств(НовСтрока,ТекДанные);
			//ПроставитьНомерУчастникамВСледТур();
			//удалим строчку в исходниках
			ИсходныеИгроки.Удалить(ИсходныеИгроки.НайтиПоИдентификатору(ИДСтроки));
			//ИсходныеИгроки.Сортировать("МестоВГруппе Возр,Рейтинг Убыв,Участник Возр");
			//УчастникиВСледующийТур.Сортировать("Номер ВОЗР, Рейтинг УБЫВ");	
		КонецЕсли;
	Иначе
		НовСообщение = Новый СообщениеПользователю;
		НовСообщение.Текст = СтрокаОшибки;
		НовСообщение.УстановитьДанные(ЭтотОбъект);
		НовСообщение.Сообщить();
	КонецЕсли;
	ОбновитьИтогиСписков();
	ОбновитьСписокВыбораСеток();
	
КонецПроцедуры

&НаКлиенте
Процедура ПроставитьНомерУчастникамВСледТур()
	
	//проверим стоят ли номер у у частников
	//если хоть один стоит тогда не будем ничего сами проставлять
	ПроставлятьНомера = Истина;
	Для Каждого ТекСтрока Из УчастникиВСледующийТур Цикл
		Если ТекСтрока.Номер <> 0 Тогда
			ПроставлятьНомера = Ложь;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если ПроставлятьНомера Тогда
		УчастникиВСледующийТур.Сортировать("Рейтинг УБЫВ");
		Сч = 1;
		Для Каждого ТекСтрока Из УчастникиВСледующийТур Цикл
			ТекСтрока.Номер = Сч;
			Сч = Сч + 1;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьИтогиСписков()
	
	ИтогоИсходных = ИсходныеИгроки.Количество();
	ИтогоУчастниковТура = УчастникиВСледующийТур.Количество();
	//ОбновитьНадписьИгр();
	
КонецПроцедуры

&НаКлиенте
Процедура Влево(Команда)
	
	ТекДанные = Элементы.УчастникиВСледующийТур.ТекущиеДанные;
	Если ТекДанные <> Неопределено Тогда
		ИДСтроки  = Элементы.УчастникиВСледующийТур.ТекущаяСтрока;
		НовСтрока = ИсходныеИгроки.Добавить();
		ЗаполнитьЗначенияСвойств(НовСтрока,ТекДанные);
		//удалим строчку в исходниках
		УчастникиВСледующийТур.Удалить(УчастникиВСледующийТур.НайтиПоИдентификатору(ИДСтроки));
		
		//ИсходныеИгроки.Сортировать("МестоВГруппе Возр,Рейтинг Убыв,Участник Возр");
		//УчастникиВСледующийТур.Сортировать("Номер ВОЗР, Рейтинг УБЫВ");
	КонецЕсли;
	ОбновитьИтогиСписков();
	ОбновитьСписокВыбораСеток();
	ОбновитьПревью();
КонецПроцедуры

&НаКлиенте
Процедура ВнестиДанные(Команда)
	
	ВнестиДанные = Истина;
	Если ЧисловоеЗначениеТура = 1 Тогда //групповой
		УстановитьПервуюГруппу = Истина;
		Для Каждого ТекСтр Из УчастникиВСледующийТур Цикл
			Если ТекСтр.Номер <> 0 Тогда
				УстановитьПервуюГруппу = Ложь;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		Если УстановитьПервуюГруппу Тогда
			Для Каждого ТекСтр Из УчастникиВСледующийТур Цикл
				ТекСтр.Номер = 1;
			КонецЦикла;
		КонецЕсли;
	ИначеЕсли ЧисловоеЗначениеТура = 2 Или ЧисловоеЗначениеТура = 3 Тогда 
		ПроставитьНомерУчастникамВСледТур();
	КонецЕсли;
	Если ВидСоревнований = ПредопределенноеЗначение("Перечисление.ВидыСоревнований.Командные") 
			И Не ЗначениеЗаполнено(ЖеребьевкаКоманд) Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Заполните шаблон для жеребьевки";
		Сообщение.Поле = "ЖеребьевкаКоманд"; //имя реквизита 
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли; 
	СтруктураПередачи = Новый Структура;
	СтруктураПередачи.Вставить("ВыбранныеУчастники",УчастникиВСледующийТур);
	СтруктураПередачи.Вставить("НомерТура",НомерТура);
	СтруктураПередачи.Вставить("ЧисловоеЗначениеТура",ЧисловоеЗначениеТура);
	СтруктураПередачи.Вставить("РежимТура",РежимТура);
	СтруктураПередачи.Вставить("Коммент",Коммент);
	СтруктураПередачи.Вставить("Нумерация",НумерацияСетки);
	СтруктураПередачи.Вставить("ВидСоревнований",ВидСоревнований);
	СтруктураПередачи.Вставить("ЖеребьевкаКоманд",ЖеребьевкаКоманд);
	СтруктураПередачи.Вставить("СеткаНа",СеткаНа);//Сетка на количество
	ОповеститьОВыборе(СтруктураПередачи);
	
КонецПроцедуры

&НаКлиенте
Процедура УчастникиВСледующийТурПередУдалением(Элемент, Отказ)
	//Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура УчастникиВСледующийТурПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура УчастникиВСледующийТурНомерНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	СписокКоличестваГрупп = Новый СписокЗначений;
	Для Н = 1 По ИтогоУчастниковТура Цикл
		СписокКоличестваГрупп.Добавить(Н);
	КонецЦикла;

	ПоказатьВыборИзСписка(Новый ОписаниеОповещения("УчастникиВСледующийТурНомерНачалоВыбораЗавершение", ЭтотОбъект),
		СписокКоличестваГрупп, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура УчастникиВСледующийТурНомерНачалоВыбораЗавершение(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
	
	ВыбранноеЗначение = ВыбранныйЭлемент;
	Если ВыбранноеЗначение <> Неопределено Тогда
		ТекСтрока = Элементы.УчастникиВСледующийТур.ТекущиеДанные;
		ТекСтрока.Номер = ВыбранноеЗначение.Значение;
	КонецЕсли;
	//КонецЕсли;
	ОбновитьПревью();

КонецПроцедуры

&НаКлиенте
Процедура Сервисная(Команда)
	
	ИсходныеИгроки.Очистить();
	Если ВидСоревнований = ПредопределенноеЗначение("Перечисление.ВидыСоревнований.Личные") Тогда
		ЗаполнитьИсходныхУчастниковСМестами();
		Для каждого ТекСтр Из ОбъектДок.СписокУчастников Цикл
			Искомая = ИсходныеИгроки.НайтиСтроки(Новый Структура("Участник",ТекСтр.Участник));	
			Если Искомая.Количество() = 0 Тогда
				НовСтрока = ИсходныеИгроки.Добавить();
				НовСтрока.Участник 	= ТекСтр.Участник;
				НовСтрока.Рейтинг	 	= ТекСтр.ТекущийРейтинг;
			КонецЕсли; 
		КонецЦикла; 
	ИначеЕсли ВидСоревнований = ПредопределенноеЗначение("Перечисление.ВидыСоревнований.Командные") Тогда 
		ЗаполнитьВсеКоманды();
	КонецЕсли; 
	ИтогоИсходных = ИсходныеИгроки.Количество();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьВсеКоманды()
	
	КолУч = Константы.КоличествоУчастниковДляПодсчетаСреднегоРейтинга.Получить();
	ВсеКоманды = ОбъектДок.ТаблицаКоманд.Выгрузить(,"НазваниеКоманды");
	ВсеКоманды.Свернуть("НазваниеКоманды");
	Сч = 0;
	Для каждого ТекСтр Из ВсеКоманды Цикл
		МассивСтрок = ОбъектДок.ТаблицаКоманд.Выгрузить(Новый Структура("НазваниеКоманды",ТекСтр.НазваниеКоманды));
		МассивСтрок.Сортировать("НомерСтроки");
		мОбщийРейтинг = 0;
		Сч = 0;
		Для Каждого ТекСтр Из МассивСтрок Цикл
			мОбщийРейтинг = мОбщийРейтинг + ТекСтр.ТекущийРейтинг;
			Сч = Сч + 1;
			Если Сч = КолУч Тогда
				Прервать;
			КонецЕсли; 
		КонецЦикла; 
		НовСтрока = ИсходныеИгроки.Добавить();
		НовСтрока.НазваниеКоманды = ТекСтр.НазваниеКоманды;
		НовСтрока.Рейтинг = мОбщийРейтинг;
	КонецЦикла; 
	ИсходныеИгроки.Сортировать("Рейтинг УБЫВ");
	
КонецПроцедуры
  
&НаКлиенте
Процедура УчастникиВСледующийТурНомерПриИзменении(Элемент)
	Если ЧисловоеЗначениеТура <> 1 Тогда
		ТекЗначение = Элементы.УчастникиВСледующийТур.ТекущиеДанные;
		НомерУчастника = ТекЗначение.Номер;
		КолНомеров = 0;
		Для Каждого ТекЗнач Из УчастникиВСледующийТур Цикл
			Если ТекЗнач.Номер = НомерУчастника Тогда
				КолНомеров = КолНомеров + 1;
			КонецЕсли;
		КонецЦикла;
		Если КолНомеров > 1 Тогда
			ПоказатьПредупреждение(Новый ОписаниеОповещения("УчастникиВСледующийТурНомерПриИзмененииЗавершение", ЭтотОбъект, Новый Структура("ТекЗначение", ТекЗначение)), "Такой номер уже установлен!");
            Возврат;
		КонецЕсли;
	КонецЕсли;
	УчастникиВСледующийТурНомерПриИзмененииФрагмент();
КонецПроцедуры

&НаКлиенте
Процедура УчастникиВСледующийТурНомерПриИзмененииЗавершение(ДополнительныеПараметры) Экспорт
	
	ТекЗначение = ДополнительныеПараметры.ТекЗначение;
	
	ТекЗначение.Номер = 0;
	
	УчастникиВСледующийТурНомерПриИзмененииФрагмент();

КонецПроцедуры

&НаКлиенте
Процедура УчастникиВСледующийТурНомерПриИзмененииФрагмент()
	
	ОбновитьПревью();
	//УчастникиВСледующийТур.Сортировать("Номер ВОЗР, Рейтинг УБЫВ");

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если ИсходныеИгроки.Количество() = 0 Тогда
		//Сервисная(Неопределено);	
	КонецЕсли; 
	ОбновитьИтогиСписков();
КонецПроцедуры

&НаКлиенте
Процедура ВправоВсех(Команда)
	
	Для Каждого ТекДанные Из ИсходныеИгроки Цикл
		//сначала проверяем список в выбранных
		Отбор = Новый Структура;
		Если ВидСоревнований = ПредопределенноеЗначение("Перечисление.ВидыСоревнований.Личные") Тогда
			Отбор.Вставить("Участник",ТекДанные.Участник);
		ИначеЕсли ВидСоревнований = ПредопределенноеЗначение("Перечисление.ВидыСоревнований.Командные") Тогда
			Отбор.Вставить("НазваниеКоманды",ТекДанные.НазваниеКоманды);
		КонецЕсли; 
		Искомый = УчастникиВСледующийТур.НайтиСтроки(Отбор);
		Если Искомый.Количество() = 0 Тогда
			НовСтрока = УчастникиВСледующийТур.Добавить();
			ЗаполнитьЗначенияСвойств(НовСтрока,ТекДанные);
		КонецЕсли;
	КонецЦикла;
	ИсходныеИгроки.Очистить();
	ОбновитьИтогиСписков();
	ОбновитьСписокВыбораСеток();
КонецПроцедуры

&НаКлиенте
Процедура ВлевоВсех(Команда)
	
	Для Каждого ТекУчастник Из УчастникиВСледующийТур Цикл
		//сначала проверяем список в выбранных
		Отбор = Новый Структура;
		Если ВидСоревнований = ПредопределенноеЗначение("Перечисление.ВидыСоревнований.Личные") Тогда
			Отбор.Вставить("Участник",ТекУчастник.Участник);
		ИначеЕсли ВидСоревнований = ПредопределенноеЗначение("Перечисление.ВидыСоревнований.Командные") Тогда
			Отбор.Вставить("НазваниеКоманды",ТекУчастник.НазваниеКоманды);
		КонецЕсли; 
		Искомый = ИсходныеИгроки.НайтиСтроки(Отбор);
		Если Искомый.Количество() = 0 Тогда
			НовСтрока = ИсходныеИгроки.Добавить();
			ЗаполнитьЗначенияСвойств(НовСтрока,ТекУчастник);
		КонецЕсли;
	КонецЦикла;
	УчастникиВСледующийТур.Очистить();
	ИсходныеИгроки.Сортировать("МестоВГруппе ВОЗР, Рейтинг УБЫВ,Участник Возр");
	ОбновитьИтогиСписков();
	ОбновитьПревью();
	ОбновитьСписокВыбораСеток();
КонецПроцедуры

&НаКлиенте
Процедура ИсходныеИгрокиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Вправо(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура УчастникиВСледующийТурВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Влево(Неопределено);	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьНомераГруппЗавершение(парНумерация) Экспорт
	
	Если УчастникиВСледующийТур.Количество() = 0 Тогда
		ВправоВсех(Неопределено);
	КонецЕсли;
	
	Если УчастникиВСледующийТур.Количество() > 0 Тогда
		Если парНумерация <> Неопределено Тогда
			НумерацияСетки = парНумерация;
			УстановитьНомераЖеребьевки();
			ОбновитьПревью();
		КонецЕсли;
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Процедура УстановитьНомераЖеребьевки()
	
	Если НумерацияСетки = Перечисления.НумерацияВСетке.ПервыйПоследний Тогда
		Элементы.Декорация4.Видимость = Истина;
	ИначеЕсли НумерацияСетки = Перечисления.НумерацияВСетке.ПоПорядку Тогда
		Элементы.Декорация4.Видимость = Ложь;
		Элементы.Декорация5.Видимость = Ложь;
	КонецЕсли;
	
	Если НумерацияСетки = Перечисления.НумерацияВСетке.ПервыйПоследний Тогда
		ВариантПревью = 1;
		Для Каждого ТекСтрока Из УчастникиВСледующийТур Цикл
			Если ТекСтрока.Пропускает1Тур Тогда
				ИндексСтроки = УчастникиВСледующийТур.Индекс(ТекСтрока);
				УчастникиВСледующийТур.Вставить(ИндексСтроки+1);
			КонецЕсли;
		КонецЦикла;
		мКолУчастниковТура = ИтогоУчастниковТура;
		Если СеткаНа <> 0 Тогда
			мКолУчастниковТура = СеткаНа;	
		КонецЕсли; 
		Если мКолУчастниковТура <= 8 Тогда 
			//создали полноценную таблицу
			УстановитьНомерУчастника(0,1,1,8);
			УстановитьНомерУчастника(2,3,5,4);
			УстановитьНомерУчастника(4,5,3,6);
			УстановитьНомерУчастника(6,7,7,2);
		//ИначеЕсли мКолУчастниковТура > 8 И мКолУчастниковТура <= 16 Тогда
		ИначеЕсли мКолУчастниковТура = 16 Тогда
			УстановитьНомерУчастника(0,1,		1,16);
			УстановитьНомерУчастника(2,3,		9,8);
			УстановитьНомерУчастника(4,5,		5,12);
			УстановитьНомерУчастника(6,7,		13,4);
			УстановитьНомерУчастника(8,9,		3,14);
			УстановитьНомерУчастника(10,11,	11,6);
			УстановитьНомерУчастника(12,13,	7,10);
			УстановитьНомерУчастника(14,15,	15,2);
		//ИначеЕсли мКолУчастниковТура > 16 И мКолУчастниковТура <= 24 Тогда
		ИначеЕсли мКолУчастниковТура = 24 Тогда
			УстановитьНомерУчастника(0,9999,		1,0);//1
			УстановитьНомерУчастника(1,2,		17,16);//17-16
			УстановитьНомерУчастника(3,4,		9,24);
			УстановитьНомерУчастника(5,9999,	8,0);//8
			УстановитьНомерУчастника(6,9999,	5,0);//5
			УстановитьНомерУчастника(7,8,		21,12);
			УстановитьНомерУчастника(9,10,	13,20);
			УстановитьНомерУчастника(11,9999,	4,0);//4
			УстановитьНомерУчастника(12,9999,	3,0);//3
			УстановитьНомерУчастника(13,14,	19,14);
			УстановитьНомерУчастника(15,16,	11,22);
			УстановитьНомерУчастника(17,9999,	6,0);//6
			УстановитьНомерУчастника(18,9999,	7,0);//7
			УстановитьНомерУчастника(19,20,	23,10);
			УстановитьНомерУчастника(21,22,	15,18);
			УстановитьНомерУчастника(23,9999,	2,0);//2
		//ИначеЕсли мКолУчастниковТура > 24 И мКолУчастниковТура <= 32 Тогда
		ИначеЕсли мКолУчастниковТура = 32 Тогда
			УстановитьНомерУчастника(0,1,		1,32);
			УстановитьНомерУчастника(2,3,		17,16);
			УстановитьНомерУчастника(4,5,		9,24);
			УстановитьНомерУчастника(6,7,		25,8);
			УстановитьНомерУчастника(8,9,		5,28);
			УстановитьНомерУчастника(10,11,	21,12);
			УстановитьНомерУчастника(12,13,	13,20);
			УстановитьНомерУчастника(14,15,	29,4);
			УстановитьНомерУчастника(16,17,		3,30);
			УстановитьНомерУчастника(18,19,		19,14);
			УстановитьНомерУчастника(20,21,		11,22);
			УстановитьНомерУчастника(22,23,		27,6);
			УстановитьНомерУчастника(24,25,		7,26);
			УстановитьНомерУчастника(26,27,	23,10);
			УстановитьНомерУчастника(28,29,	15,18);
			УстановитьНомерУчастника(30,31,	31,2);
		//ИначеЕсли мКолУчастниковТура > 32 И мКолУчастниковТура <= 48 Тогда
		ИначеЕсли мКолУчастниковТура = 48 Тогда
			УстановитьНомерУчастника(0,9999,		1,0);
			УстановитьНомерУчастника(1,2,		32,33);
			УстановитьНомерУчастника(3,4,		17,48);
			УстановитьНомерУчастника(5,9999,	16,0);
			УстановитьНомерУчастника(6,9999,	9,0);
			УстановитьНомерУчастника(7,8,		24,41);
			УстановитьНомерУчастника(9,10,	25,40);
			УстановитьНомерУчастника(11,9999,	8,0);//8
			УстановитьНомерУчастника(12,9999,	5,0);//5
			УстановитьНомерУчастника(13,14,	28,37);
			УстановитьНомерУчастника(15,16,	21,44);
			УстановитьНомерУчастника(17,9999,	12,0);
			УстановитьНомерУчастника(18,9999,	13,0);
			УстановитьНомерУчастника(19,20,	20,45);
			УстановитьНомерУчастника(21,22,	29,36);
			УстановитьНомерУчастника(23,9999,	4,0);
			УстановитьНомерУчастника(24,9999,	3,0);
			УстановитьНомерУчастника(25,26,		30,35);
			УстановитьНомерУчастника(27,28,		19,46);
			УстановитьНомерУчастника(29,9999,	14,0);
			УстановитьНомерУчастника(30,9999,	11,0);
			УстановитьНомерУчастника(31,32,		22,43);
			УстановитьНомерУчастника(33,34,	27,38);
			УстановитьНомерУчастника(35,9999,	6,0);
			УстановитьНомерУчастника(36,9999,	7,0);
			УстановитьНомерУчастника(37,38,	26,39);
			УстановитьНомерУчастника(39,40,	23,42);
			УстановитьНомерУчастника(41,9999,	10,0);
			УстановитьНомерУчастника(42,9999,	15,0);
			УстановитьНомерУчастника(43,44,	18,47);
			УстановитьНомерУчастника(45,46,	31,34);
			УстановитьНомерУчастника(47,9999,	2,0);
		//ИначеЕсли мКолУчастниковТура > 48 И мКолУчастниковТура <= 64 Тогда
		ИначеЕсли мКолУчастниковТура = 64 Тогда
			УстановитьНомерУчастника(0,1,		1,64);
			УстановитьНомерУчастника(2,3,		33,32);
			УстановитьНомерУчастника(4,5,		17,48);
			УстановитьНомерУчастника(6,7,		49,16);
			УстановитьНомерУчастника(8,9,		9,56);
			УстановитьНомерУчастника(10,11,	41,24);
			УстановитьНомерУчастника(12,13,	25,40);
			УстановитьНомерУчастника(14,15,	57,8);
			УстановитьНомерУчастника(16,17,	5,60);
			УстановитьНомерУчастника(18,19,	37,28);
			УстановитьНомерУчастника(20,21,	21,44);
			УстановитьНомерУчастника(22,23,	53,12);
			УстановитьНомерУчастника(24,25,	13,52);
			УстановитьНомерУчастника(26,27,	45,20);
			УстановитьНомерУчастника(28,29,	29,36);
			УстановитьНомерУчастника(30,31,	61,4);
			УстановитьНомерУчастника(32,33,	3,62);
			УстановитьНомерУчастника(34,35,	35,30);
			УстановитьНомерУчастника(36,37,	19,46);
			УстановитьНомерУчастника(38,39,	51,14);
			УстановитьНомерУчастника(40,41,	11,54);
			УстановитьНомерУчастника(42,43,	43,22);
			УстановитьНомерУчастника(44,45,	27,38);
			УстановитьНомерУчастника(46,47,	59,6);
			УстановитьНомерУчастника(48,49,	7,58);
			УстановитьНомерУчастника(50,51,	39,26);
			УстановитьНомерУчастника(52,53,	23,42);
			УстановитьНомерУчастника(54,55,	55,10);
			УстановитьНомерУчастника(56,57,	15,50);
			УстановитьНомерУчастника(58,59,	47,18);
			УстановитьНомерУчастника(60,61,	31,34);
			УстановитьНомерУчастника(62,63,	63,2);
		КонецЕсли;
		//а теперь удаляем пустышки
		Если ВидСоревнований = Перечисления.ВидыСоревнований.Личные Тогда
			Для Каждого ТекСтрока Из УчастникиВСледующийТур Цикл
				Если ТекСтрока.Участник = Справочники.Участники.ПустаяСсылка() Тогда
					УчастникиВСледующийТур.Удалить(УчастникиВСледующийТур.Индекс(ТекСтрока));
				КонецЕсли;
			КонецЦикла;
		КонецЕсли; 
	ИначеЕсли НумерацияСетки = Перечисления.НумерацияВСетке.ПоПорядку Тогда
		ВариантПревью = 0;
		СчНомеров = 1;
		Для Каждого ТекСтрока Из УчастникиВСледующийТур Цикл
			ТекСтрока.Номер = СчНомеров;
			СчНомеров = СчНомеров + 1;
			Если ТекСтрока.Пропускает1Тур Тогда
				СчНомеров = СчНомеров + 1;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура УстановитьНомерУчастника(Индекс1,Индекс2,Номер1,Номер2)
	
	Попытка
		Строка1 = УчастникиВСледующийТур.Получить(Индекс1);
		Строка1.Номер = Номер1;
	Исключение
		ОбщийКлиентСервер.СообщитьПользователю("Ошибка получения участника", "", "");
	КонецПопытки;
	Попытка
		Строка2 = УчастникиВСледующийТур.Получить(Индекс2);
		Строка2.Номер = Номер2;
	Исключение
		ОбщийКлиентСервер.СообщитьПользователю("Ошибка получения участника", "", "");
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура СортироватьПоГруппеИРейтингу(Команда)
	УчастникиВСледующийТур.Сортировать("Номер ВОЗР,Рейтинг УБЫВ");
	ОбновитьПревью();
КонецПроцедуры

&НаКлиенте
Процедура Декорация5Нажатие(Элемент)
	Если Элементы.Декорация4.Видимость Тогда
		Элементы.Декорация4.Видимость = Ложь;
	Иначе
		Элементы.Декорация4.Видимость = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КинутьМонетку(Команда)
	ОткрытьФорму("Документ.ПроведениеСоревнования.Форма.ФормаЖребия",,ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура СобратьГруппы(Команда)
	
	ОткрытьФорму("Документ.ПроведениеСоревнования.Форма.СборГрупп",,ЭтотОбъект);	
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ИсточникВыбора.ИмяФормы = "Документ.ПроведениеСоревнования.Форма.СборГрупп" Тогда
		Для каждого ТекНастройка Из ВыбранноеЗначение Цикл
			ПоместитьВГруппу = ТекНастройка.НомерГруппы;
			Для СчМест = ТекНастройка.СМеста По ТекНастройка.ПоМесто Цикл
				ОтборСтрок = Новый Структура("МестоВГруппе",СчМест);
				МассивСтрок = ИсходныеИгроки.НайтиСтроки(ОтборСтрок);
				Для каждого ТекСтр Из МассивСтрок Цикл
					НовСтрока = УчастникиВСледующийТур.Добавить();
					ЗаполнитьЗначенияСвойств(НовСтрока,ТекСтр);
					НовСтрока.Номер = ПоместитьВГруппу;
					ИсходныеИгроки.Удалить(ТекСтр);
				КонецЦикла; 
			КонецЦикла; 	
		КонецЦикла;
		УчастникиВСледующийТур.Сортировать("Номер ВОЗР,Рейтинг УБЫВ");
		ОбновитьПревью();
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ВариантРаскраскиПриИзменении(Элемент)
	//перезаполним УФ по оформлению групп
	Если ЧисловоеЗначениеТура = 1 Тогда
		ЗаполнитьУсловноеОформлениеДляГрупповогоЭтапа();
	Иначе
		ЗаполнитьУФОформлениеОдноклубников(Неопределено);
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьПревью()
	
	Если Превью Тогда
		Если УчастникиВСледующийТур.Количество() = 0 Тогда
			ВывестиПревью(,Истина);
			Возврат;
		КонецЕсли; 
		ДанныеРежимаТура = ПолучитьИсходныеДанныеДляПревью();
		Если РежимТура = ПредопределенноеЗначение("Перечисление.РежимыТуровСоревнования.Групповой") Тогда
			ВывестиПревью(ДанныеРежимаТура.ТабДокумент);	
		Иначе
			втДокОбъект.НумерацияВСетке = НумерацияСетки;
			ПараметрыФормы = Новый Структура;
			ПараметрыФормы.Вставить("НомерТура",НомерТура);
			ПараметрыФормы.Вставить("ОбъектДок",втДокОбъект);
			ПараметрыФормы.Вставить("РежимТура",РежимТура);
			ПараметрыФормы.Вставить("Коммент",ДанныеРежимаТура.Комментарий);
			ПараметрыФормы.Вставить("КолПартий",ДанныеРежимаТура.КолПартий);
			ПараметрыФормы.Вставить("ВидСоревнований",ВидСоревнований);
			ПараметрыФормы.Вставить("СеткаНа",СеткаНа);
			Форма = ПолучитьФорму("Документ.ПроведениеСоревнования.Форма.ФормаМинус2ИОлимпийка",ПараметрыФормы,ЭтотОбъект);
			ВывестиПревью(Форма.ТабДок);
		КонецЕсли; 
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ВывестиПревью(мМакетТабДок,ОчиститьПревью = Ложь)
	Если ОчиститьПревью Тогда
		ТабДокПревью.Очистить();
	Иначе
		ТабДокПревью.Вывести(мМакетТабДок);
	КонецЕсли; 
КонецПроцедуры 
 
&НаСервере
Функция ПолучитьИсходныеДанныеДляПревью()
	
	СтрокаЭтапа = ОбъектДок.ХодСоревнования.НайтиСтроки(Новый Структура("НомерСтроки",НомерТура))[0];
	
	перемОбъект = РеквизитФормыВЗначение("ОбъектДок");
	ЗначениеВРеквизитФормы(перемОбъект,"втДокОбъект");
	втДокОбъект.УчастникиПоЖеребьевке.Очистить();
	
	Если РежимТура = Перечисления.РежимыТуровСоревнования.Групповой Тогда
		Для каждого ТекСтрока Из УчастникиВСледующийТур Цикл
			Если ТекСтрока.Номер = 0 Тогда
				Продолжить;
			КонецЕсли; 
			НовСтрока = втДокОбъект.УчастникиПоЖеребьевке.Добавить();
			НовСтрока.РежимТура   			= РежимТура;
			НовСтрока.НомерТура      		= НомерТура;
			НовСтрока.НомерГруппы	 		= ТекСтрока.Номер;
			НовСтрока.Участник   		 		= ТекСтрока.Участник;
			НовСтрока.ТекущийРейтинг 	= ТекСтрока.Рейтинг;
			НовСтрока.Пропускает1Тур 	= ТекСтрока.Пропускает1Тур;
		КонецЦикла;
		Данные = Новый Структура;
		Данные.Вставить("НомерСтроки",СтрокаЭтапа.НомерСтроки);
		Данные.Вставить("Комментарий",СтрокаЭтапа.Комментарий);
		Данные.Вставить("ТабДокумент",Документы.ПроведениеСоревнования.ФормированиеТаблицГрупп(Данные,Ложь,втДокОбъект));
		ТабДокПревью.Очистить();
		Возврат Данные;
	Иначе
		Для каждого ТекСтрока Из УчастникиВСледующийТур Цикл
			НовСтрока = втДокОбъект.УчастникиПоЖеребьевке.Добавить();
			НовСтрока.РежимТура   			= РежимТура;
			НовСтрока.НомерТура      		= НомерТура;
			НовСтрока.НомерИгры		 		= ТекСтрока.Номер;
			НовСтрока.Участник   	 			= ТекСтрока.Участник;
			НовСтрока.ТекущийРейтинг 	= ТекСтрока.Рейтинг;
			НовСтрока.Пропускает1Тур 	= ТекСтрока.Пропускает1Тур;
		КонецЦикла; 
	КонецЕсли; 
	
	Данные = Новый Структура;
	Данные.Вставить("Комментарий",СтрокаЭтапа.Комментарий);
	Данные.Вставить("КолПартий",СтрокаЭтапа.КолПартий);
	ТабДокПревью.Очистить();
	
	Возврат Данные;
	
КонецФункции

&НаКлиенте
Процедура ТабДокПревьюОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура УчастникиВСледующийТурПропускает1ТурПриИзменении(Элемент)
	ОбновитьПревью();
КонецПроцедуры

&НаКлиенте
Процедура ПревьюПриИзменении(Элемент)
	Элементы.ГруппаПревью.Видимость = Превью;
	Элементы.ОбновитьПревью.Видимость = Превью;
	Если РежимТура = ПредопределенноеЗначение("Перечисление.РежимыТуровСоревнования.Групповой") Тогда
		Элементы.ВариантПревью.Видимость = Ложь;	
	КонецЕсли; 
	ОбновитьПревью();
КонецПроцедуры

&НаКлиенте
Процедура КомандаОбновитьПревью(Команда)
	ОбновитьПревью();
КонецПроцедуры

&НаКлиенте
Процедура ТабДокПревьюПриАктивизацииОбласти(Элемент)
	
	ТекТекст = Элементы.ТабДокПревью.ТекущаяОбласть.Текст;
	Если ТекТекст = "" Тогда
		Возврат;
	КонецЕсли; 
	Фамилия = ОбщийКлиентСервер.ВыделитьСлово(ТекТекст," ");
	Для каждого ТекУчастник Из УчастникиВСледующийТур Цикл
		Если Найти(Строка(ТекУчастник.Участник),Фамилия) > 0 Тогда
			Элементы.УчастникиВСледующийТур.ТекущаяСтрока = ТекУчастник.ПолучитьИдентификатор();
			Прервать;
		КонецЕсли; 
	КонецЦикла; 
	
КонецПроцедуры

&НаКлиенте
Процедура ВариантПревьюПриИзменении(Элемент)
	
	Если ВариантПревью = 0 Тогда //по порядку
		НумерацияСетки = ПредопределенноеЗначение("Перечисление.НумерацияВСетке.ПоПорядку");
	Иначе
		НумерацияСетки = ПредопределенноеЗначение("Перечисление.НумерацияВСетке.ПервыйПоследний");
	КонецЕсли; 
	ОбновитьПревью();
	
КонецПроцедуры

&НаКлиенте
Процедура МестаИзЭтапаПриИзменении(Элемент)
	ЗаполнитьИсходныхУчастниковСМестами();
КонецПроцедуры

&НаКлиенте
Процедура СеткаНаПриИзменении(Элемент)
	ОбновитьПревью();
КонецПроцедуры

&НаКлиенте
Процедура УчастникиВСледующийТурПослеУдаления(Элемент)
	ОбновитьИтогиСписков();	
КонецПроцедуры

&НаКлиенте
Процедура ИсходныеИгрокиПослеУдаления(Элемент)
	ОбновитьИтогиСписков();	
КонецПроцедуры

//&НаКлиенте
//Процедура РассеиваниеПоКлассификации(Команда)
//	
//	Если УчастникиВСледующийТур.Количество() = 0 Тогда
//		ВправоВсех(Неопределено);	
//	КонецЕсли; 
//	РассеиваниеПоКлассификацииНаСервере();
//	
//КонецПроцедуры

//&НаСервере
//Процедура РассеиваниеПоКлассификацииНаСервере()
//	
//	//будем делать жеребьевку по сетке
//	Если СеткаНа = 24 Или СеткаНа = 48 Тогда
//		Возврат;
//	КонецЕсли;
//	УчастникиВСледующийТур.Сортировать("Рейтинг УБЫВ");
//	
//КонецПроцедуры
 
 

