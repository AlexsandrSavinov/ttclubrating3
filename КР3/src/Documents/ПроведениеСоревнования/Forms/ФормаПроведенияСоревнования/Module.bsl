
&НаКлиенте
Перем глСтароеЗначениеКолонки;
&НаКлиенте
Перем глЗачеркнутыйШрифт;
&НаКлиенте
Перем глТекущийНомерСтола;
&НаКлиенте
Перем мЗакрытиеФормы;

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
		
	//заполним параметры
	ПеремОбъектДокумента = ДанныеФормыВЗначение(Параметры.ОбъектДок, Тип("ДокументОбъект.ПроведениеСоревнования")); 
	ЗначениеВРеквизитФормы(ПеремОбъектДокумента,"СсылкаНаСоревнование");
	НомерТура		 = Параметры.НомерТура;
	РежимТура		 = Параметры.РежимТура;
	КолПартий		 = Параметры.КолПартий;
	КолСтолов		 = СсылкаНаСоревнование.КолСтолов;
	
	ТЧУчастников = СсылкаНаСоревнование.УчастникиПоЖеребьевке.Выгрузить();
	
	АдресТаблицаУчастников = ПоместитьВоВременноеХранилище(ТЧУчастников,ЭтотОбъект.УникальныйИдентификатор);
	АдресКопииТаблицыГрупп = ПоместитьВоВременноеХранилище(ТаблицаГруппы.Выгрузить(), ЭтотОбъект.УникальныйИдентификатор);
	
	//получим какие группы завели
	ВсегоКолГрупп = Документы.ПроведениеСоревнования.ОпределитьКоличествоГрупп(ТЧУчастников, НомерТура, РежимТура);
	
	Для Гр = 1 По ВсегоКолГрупп Цикл
		Элементы.СписокГруппПереключатели.СписокВыбора.Добавить(Гр, "Группа №" + Гр);
	КонецЦикла;
	
	Если ВсегоКолГрупп > 1 Тогда
		Элементы.СписокГруппПереключатели.СписокВыбора.Добавить(99, "Все группы");
	КонецЕсли; 
	
	ЭтотОбъект.Заголовок = СсылкаНаСоревнование.НазваниеСоревнования + " " + Параметры.Коммент;
	                           
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = "ВЫБРАТЬ * ПОМЕСТИТЬ ТЗ ИЗ &Внеш КАК Внеш";
	Запрос.УстановитьПараметр("Внеш",СсылкаНаСоревнование.ОбщаяТаблицаДанных.Выгрузить());
	Запрос.Выполнить();
	Текст = "ВЫБРАТЬ
	        |	*
	        |ИЗ
	        |	ТЗ КАК ТЗ
	        |ГДЕ
	        |	ТЗ.НомерТура = &НомТура
	        |	И ТЗ.РежимТура = &РежимТура";
	Запрос.УстановитьПараметр("НомТура",НомерТура);
	Запрос.УстановитьПараметр("РежимТура",РежимТура);
	Запрос.Текст = Текст;
	Результат = Запрос.Выполнить().Выгрузить();
	ЗначениеВРеквизитФормы(Результат,"ТаблицаОбщихДанных");
	
	АдресОбщейТаблицыДанных = ПоместитьВоВременноеХранилище(ТаблицаОбщихДанных.Выгрузить(),ЭтотОбъект.УникальныйИдентификатор);
	
	//продумать если 2 групповой, 3 групповой, нужен только 3
	Для Каждого ТекСтрока Из СсылкаНаСоревнование.ХодСоревнования Цикл
		Если ТекСтрока.РежимТура = Перечисления.РежимыТуровСоревнования.Групповой 
			И ТекСтрока.НомерСтроки <> НомерТура Тогда
			ЗаголовокВСписке = ""+ТекСтрока.НомерСтроки+" "+НРег(ТекСтрока.Комментарий);
			СписокГрупповыхЭтапов.Добавить(ТекСтрока.НомерСтроки,ЗаголовокВСписке);
		КонецЕсли;
	КонецЦикла;
	
	Если СписокГрупповыхЭтапов.Количество() >= 1 Тогда
		Элементы.СУчетомИгр.Видимость = Истина;
	КонецЕсли;
	СУчетомИгр = Ложь;
	ПереоткрытьФорму = Ложь;
		
	ЗаполнитьМониторинг();
	
	СписокГруппПереключатели = 1;
	Если Элементы.СписокГруппПереключатели.СписокВыбора.Количество() = 1 Тогда
		Элементы.СписокГруппПереключатели.Видимость = Ложь;
	КонецЕсли; 

КонецПроцедуры

//ПРОЦЕДУРЫ И ФУНКЦИИ ОСНОВНОЙ ТАБЛИЦЫ
//

&НаКлиенте
Процедура ТаблицаГруппыКолонкаИгрыОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если Элементы.ТаблицаГруппы.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	
	ТекЯчейка = СтрЗаменить(Элемент.Имя,"ТаблицаГруппы","");
	Если Элементы.ТаблицаГруппы.ТекущиеДанные[ТекЯчейка] = "X" Или СтрНайти(ТекЯчейка,"СписокОчков") > 0 Тогда
		Возврат;
	КонецЕсли;
		
	НомерТекКолонки = СтрЗаменить(ТекЯчейка,"КолонкаИгры","");
	ТекЗначение = Элементы.ТаблицаГруппы.ТекущиеДанные[ТекЯчейка];
	
	Если ТекЗначение = "2" Или ТекЗначение = "" Тогда //по этой строке выигравший
		ВыигравшийИгрок	= Элементы.ТаблицаГруппы.ТекущиеДанные.Участник;
		НомерВ						= Элементы.ТаблицаГруппы.ТекущиеДанные.НомерУчастника;
		ПроигравшийИгрок = ТаблицаГруппы.Получить(НомерТекКолонки-1).Участник;
		НомерП						= ТаблицаГруппы.Получить(НомерТекКолонки-1).НомерУчастника;
	ИначеЕсли ТекЗначение = "1" Или ТекЗначение = "0" Тогда //тогда эта строка проигравший
		ПроигравшийИгрок = Элементы.ТаблицаГруппы.ТекущиеДанные.Участник;
		НомерП						= Элементы.ТаблицаГруппы.ТекущиеДанные.НомерУчастника;
		ВыигравшийИгрок  = ТаблицаГруппы.Получить(НомерТекКолонки-1).Участник;
		НомерВ						= ТаблицаГруппы.Получить(НомерТекКолонки-1).НомерУчастника;;
	КонецЕсли;
	
	ДляЗаполненияРезультата = ОбщийКлиентСервер.ШаблонСтруктураДляВыбораРезультата();
	ДляЗаполненияРезультата.НомерТура 			= НомерТура;
	ДляЗаполненияРезультата.НомерГруппы 		= Число(ОпределитьНомерГруппыПоЭлементу());
	ДляЗаполненияРезультата.Выигравший			= ВыигравшийИгрок;
	ДляЗаполненияРезультата.Проигравший		= ПроигравшийИгрок;
	ДляЗаполненияРезультата.НомерВ					= НомерВ;
	ДляЗаполненияРезультата.НомерП					= НомерП;
	ДляЗаполненияРезультата.АдресОбщейТаблицы = АдресОбщейТаблицыДанных;
	ДляЗаполненияРезультата.КолПартий			= КолПартий;
	
	ОткрытьФорму("Документ.ПроведениеСоревнования.Форма.ВыборРезультата",ДляЗаполненияРезультата,ЭтотОбъект,УникальныйИдентификатор,,,Новый ОписаниеОповещения("ПослеЗакрытияФормыВыбораРезультата",ЭтотОбъект));
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияФормыВыбораРезультата(Результат, ДопПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		
		Модифицированность = Истина;
		//попробуем найти эту пару
		Отбор = Новый Структура;                               
		Отбор.Вставить("Выигравший",Результат.Выигравший);
		Отбор.Вставить("Проигравший",Результат.Проигравший);
		Отбор.Вставить("НомерТура",Результат.НомерТура);
		Отбор.Вставить("НомерГруппы",Результат.НомерГруппы);
		ИскомыеСтроки = ТаблицаОбщихДанных.НайтиСтроки(Отбор);
		Если ИскомыеСтроки.Количество() > 0 Тогда //строки уже есть перезаполняем
			Для Каждого ТекСтрока Из ИскомыеСтроки Цикл
				ТаблицаОбщихДанных.Удалить(ТаблицаОбщихДанных.Индекс(ТекСтрока));
			КонецЦикла;
		ИначеЕсли ИскомыеСтроки.Количество() = 0 Тогда
			///попробуем другой вариант вдруг выигравший изменился
			Отбор = Новый Структура;                               
			Отбор.Вставить("Выигравший",Результат.Проигравший);
			Отбор.Вставить("Проигравший",Результат.Выигравший);
			Отбор.Вставить("НомерТура",Результат.НомерТура);
			Отбор.Вставить("НомерГруппы",Результат.НомерГруппы);
			ИскомыеСтроки = ТаблицаОбщихДанных.НайтиСтроки(Отбор);
			Если ИскомыеСтроки.Количество() > 0 Тогда //строки уже есть перезаполняем
				Для Каждого ТекСтрока Из ИскомыеСтроки Цикл
					ТаблицаОбщихДанных.Удалить(ТаблицаОбщихДанных.Индекс(ТекСтрока));
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
		
		Если Результат.Удалить Тогда //тогда уже все сделано
			
		ИначеЕсли Не Результат.ЕстьДанныеПоОчкам Или Результат.ТехПоражение Тогда
			НовСтрока = ТаблицаОбщихДанных.Добавить();
			НовСтрока.РежимТура 				= РежимТура;
			НовСтрока.НомерТура 				= Результат.НомерТура;
			НовСтрока.НомерГруппы 			= Результат.НомерГруппы;
			НовСтрока.НомерСета 		 		= 0;
			НовСтрока.Выигравший  			= Результат.Выигравший;
			НовСтрока.Проигравший	 		= Результат.Проигравший;
			НовСтрока.КолШаров	   			= 0;
			НовСтрока.ОчкиВыигравшего = Результат.КолПартийВ;
			НовСтрока.ОчкиПроигравшего = Результат.КолПартийП;
			НовСтрока.ТехническоеВ 		= Ложь;
			НовСтрока.ТехническоеП 		= Результат.ТехПоражение; 
		ИначеЕсли Результат.ЕстьДанныеПоОчкам Тогда 
			
			Если Результат.ТаблицаОчков[0].Участник = Результат.Выигравший Тогда
				стрВыигравшего 	= Результат.ТаблицаОчков[0];
				стрПроигравшего	= Результат.ТаблицаОчков[1];
			Иначе
				стрВыигравшего 	= Результат.ТаблицаОчков[1];
				стрПроигравшего	= Результат.ТаблицаОчков[0];
			КонецЕсли; 
			
			Для Н = 1 По Результат.КолПартий Цикл
				
				Знач1В = стрВыигравшего["Игра"+Н];
				Знач2П = стрПроигравшего["Игра"+Н];
				Если Знач1В = 0 И Знач2П = 0 Тогда
					Продолжить;
				КонецЕсли;
				НовСтрока = ТаблицаОбщихДанных.Добавить();
				НовСтрока.РежимТура = РежимТура;
				НовСтрока.НомерТура = Результат.НомерТура;
				НовСтрока.НомерГруппы = Результат.НомерГруппы;
				НовСтрока.НомерСета = Н;
				НовСтрока.Выигравший  = Результат.Выигравший;
				НовСтрока.Проигравший = Результат.Проигравший;
				Если Знач1В > Знач2П Тогда //первый победил
					НовСтрока.КолШаров	   = Знач2П;
					НовСтрока.ОчкиВыигравшего = 1;
					НовСтрока.ОчкиПроигравшего= 0;
				Иначе //второй победил
					НовСтрока.КолШаров	   = -Знач1В;
					НовСтрока.ОчкиВыигравшего = 0;
					НовСтрока.ОчкиПроигравшего= 1;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли; 
		//теперь найдем в таблице их игру и проставим победу и поражение
		//ПроставитьЗначенияВыигрышаИПроигрышаВТаблице(Результат.Выигравший,Результат.Проигравший,Результат.НомерГруппы,,Результат.ТехПоражение);
		ОбновитьАдресаТаблиц();
		ПроставитьЗначенияПоМониторингу(ТаблицаМониторинга,Результат.Выигравший,Результат.Проигравший,Результат.КолПартийВ,Результат.КолПартийП,Ложь,Результат.ТехПоражение);
		ВывестиАктивностьСтолов();
		ЗаполнитьТаблицуПоНомеруГруппы(СписокГруппПереключатели);	
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаДобавленияУдаления(Элемент,Отказ)
	Отказ = Истина;	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииЯчейкиОсновнойТаблицы(Элемент)
	
	ТекИмяЭлемента = Элемент.Имя;    
	НомГруппыЭл = ОпределитьНомерГруппыПоЭлементу();
	НомКолонкиЭл = Число(СтрЗаменить(ТекИмяЭлемента,"ТаблицаГруппыКолонкаИгры",""));

	ТаблицаПартийПоГруппе = ТаблицаГруппы;
	ТекСтрока = Элементы.ТаблицаГруппы.ТекущиеДанные;
	
	ИндексТекСтроки 	= ТаблицаГруппы.Индекс(ТекСтрока);
	ИндексСледСтроки	= ИндексТекСтроки + 1;
	
	Если ИндексСледСтроки > ТаблицаГруппы.Количество() -1 Тогда
		ИндексСледСтроки = ТаблицаГруппы.Количество() - 1;
	КонецЕсли; 
	
	ВведенноеЗначение = ТекСтрока["КолонкаИгры"+НомКолонкиЭл];
	СколькоДолжноБытьПартий = ОпределитьКолПартий();
	
	//варианты ввода
	//мы вводим это количество всегда выигравшему
	//0,1,2,3 - это кол. партий которые участник проиграл (т.е. в итоге он выиграл)
	//Т - русская, техническое поражение
	//-0,-1,-2,-3 - это кол. партий которые участник выиграл (т.е. в итоге он проиграл)
	
	//по номеру колонки определяем вторую строчку		
	ВтораяСтрокаПроигравшего = ТаблицаПартийПоГруппе.Получить(Число(НомКолонкиЭл)-1);
	//участники
	ВыигравшийУчастник 	= ТекСтрока.Участник;
	ПроигравшийУчастник 	= ВтораяСтрокаПроигравшего.Участник;
	
	Если ВРег(ВведенноеЗначение) = "Т"  Тогда
		ИтогВ = СколькоДолжноБытьПартий;
		ИтогП = 0;
		ТехВ = Ложь;
		ТехП = Истина;
		//обнуляем
		//ТекСтрока["Реквизит"+ТекИмяЭлемента] = "2";
	Иначе
		ПервыйСимвол = Сред(ВведенноеЗначение,1,1);
		Если ПервыйСимвол = "-" Тогда 
			ОтрицательноеЧисло = Истина;
		Иначе
			ОтрицательноеЧисло = Ложь;
		КонецЕсли; 
		ВведенноеЗначение = Число(ВведенноеЗначение);
		Если ВведенноеЗначение >= СколькоДолжноБытьПартий 
			Или -ВведенноеЗначение >= СколькоДолжноБытьПартий Тогда
			ДопКол = "";
			Если КолПартий = 3 Тогда
				ДопКол = "0 или 1";
			ИначеЕсли КолПартий = 5 Тогда
				ДопКол = "0,1 или 2";
			ИначеЕсли КолПартий = 7 Тогда
				ДопКол = "0,1,2 или 3";
			КонецЕсли;
			ПоказатьПредупреждение(Новый ОписаниеОповещения("ПриИзмененииЯчейкиОсновнойТаблицыЗавершение", ЭтотОбъект, Новый Структура("НомКолонкиЭл, ТекСтрока", НомКолонкиЭл, ТекСтрока)), "Количество проигранных партий может быть равно "+ДопКол);
			Возврат;
		КонецЕсли;
		//определим какое кол. партий будем ставить
		ИтогВ = СколькоДолжноБытьПартий;
		ИтогП = ВведенноеЗначение;
		Если ОтрицательноеЧисло Тогда
			//нужно поменять участников
			втВыигравший = ВыигравшийУчастник;
			втПроигравший = ПроигравшийУчастник;
			втИтогВ = ИтогВ;
			втИтогП = -ВведенноеЗначение;
			//меняем все
			ВыигравшийУчастник = втПроигравший;
			ПроигравшийУчастник = втВыигравший;
			ИтогВ = втИтогВ;
			ИтогП = втИтогП;
		КонецЕсли; 
		ТехВ = Ложь;
		ТехП = Ложь;
	КонецЕсли;
	
	ЭтотОбъект.Модифицированность = Истина;
	ТЧДока = ТаблицаОбщихДанных;
	//попробуем найти эту пару
	Отбор = Новый Структура;                               
	Отбор.Вставить("Выигравший",ВыигравшийУчастник);
	Отбор.Вставить("Проигравший",ПроигравшийУчастник);
	Отбор.Вставить("НомерТура",НомерТура);
	Отбор.Вставить("НомерГруппы",Число(НомГруппыЭл));
	ИскомыеСтроки = ТЧДока.НайтиСтроки(Отбор);
	Если ИскомыеСтроки.Количество() > 0 Тогда //строки уже есть перезаполняем
		Для Каждого ТекСтрокаИскомая Из ИскомыеСтроки Цикл
			ТЧДока.Удалить(ТЧДока.Индекс(ТекСтрокаИскомая));
		КонецЦикла;
	ИначеЕсли ИскомыеСтроки.Количество() = 0 Тогда
		///попробуем другой вариант вдруг выигравший изменился
		Отбор = Новый Структура;                               
		Отбор.Вставить("Выигравший",ПроигравшийУчастник);
		Отбор.Вставить("Проигравший",ВыигравшийУчастник);
		Отбор.Вставить("НомерТура",НомерТура);
		Отбор.Вставить("НомерГруппы",Число(НомГруппыЭл));
		ИскомыеСтроки = ТЧДока.НайтиСтроки(Отбор);
		Если ИскомыеСтроки.Количество() > 0 Тогда //строки уже есть перезаполняем
			Для Каждого ТекСтрокаИскомая Из ИскомыеСтроки Цикл
				ТЧДока.Удалить(ТЧДока.Индекс(ТекСтрокаИскомая));
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	НовСтрока = ТЧДока.Добавить();
	НовСтрока.РежимТура = РежимТура;
	НовСтрока.НомерТура = НомерТура;
	НовСтрока.НомерГруппы = Число(НомГруппыЭл);
	НовСтрока.НомерСета = 0;//ТекСет.НомерСета;
	НовСтрока.Выигравший  = ВыигравшийУчастник;
	НовСтрока.Проигравший = ПроигравшийУчастник;
	НовСтрока.КолШаров	   = 0;
	НовСтрока.ОчкиВыигравшего = ИтогВ;
	НовСтрока.ОчкиПроигравшего= ИтогП;
	НовСтрока.ТехническоеВ = ТехВ;
	НовСтрока.ТехническоеП = ТехП; 
	
	//теперь найдем в таблице их игру и проставим победу и поражение
	ПроставитьЗначенияВыигрышаИПроигрышаВТаблице(ВыигравшийУчастник,ПроигравшийУчастник,НомГруппыЭл,,ТехП);
	
	ОбновитьОчкиТаблицы(НомГруппыЭл);
	ПроставитьЗначенияПоМониторингу(ТаблицаМониторинга,ВыигравшийУчастник,ПроигравшийУчастник,ИтогВ,ИтогП,ТехВ,ТехП);
	ВывестиАктивностьСтолов();
	
	//теперь переходим на следующую колонку
	
	КолУчастников = ТаблицаПартийПоГруппе.Количество();
	СледНомКолонки = Число(НомКолонкиЭл)+1;
	Если СледНомКолонки <= КолУчастников Тогда
		Элементы.ТаблицаГруппы.ТекущаяСтрока = ТаблицаГруппы.Получить(ИндексТекСтроки).ПолучитьИдентификатор();
		ЭтотОбъект.ТекущийЭлемент = Элементы["ТаблицаГруппыКолонкаИгры"+СледНомКолонки];
	Иначе
		//переходим на след. строчку
		//ИндексТекСтроки = ТаблицаПартийПоГруппе.Индекс(ТекСтрока);
		Если КолУчастников > (ИндексТекСтроки+1) Тогда //переходим
			СледСтрока = ТаблицаПартийПоГруппе.Получить(ИндексТекСтроки+1); 
			Элементы.ТаблицаГруппы.ТекущаяСтрока = СледСтрока.ПолучитьИдентификатор();
			//и переходим на не занятую колонку
			ДелатьПереход = Истина;
			Если СледНомКолонки <= КолУчастников Тогда
				ДелатьПереход = Ложь;
			КонецЕсли;
			Пока ДелатьПереход Цикл
				//получаем значение первой колонки
				Для Кол = 1 По КолУчастников Цикл
					Если Не ЗначениеЗаполнено(СледСтрока["КолонкаИгры"+Кол]) Тогда
						ДелатьПереход = Ложь;
						ЭтотОбъект.ТекущийЭлемент  = Элементы["ТаблицаГруппыКолонкаИгры"+Кол];
						Прервать;
					ИначеЕсли Кол = КолУчастников Тогда
						ДелатьПереход = Ложь;
						Прервать;//все значения заполнены
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииЯчейкиОсновнойТаблицыЗавершение(ДополнительныеПараметры) Экспорт
	
	НомКолонкиЭл = ДополнительныеПараметры.НомКолонкиЭл;
	ТекСтрока = ДополнительныеПараметры.ТекСтрока;
	
	
	ТекСтрока["КолонкаИгры"+НомКолонкиЭл] = "";

КонецПроцедуры

&НаКлиенте
Функция ОпределитьКолПартий()
	
	Если КолПартий = 3 Тогда
		ИтогСтроки = 2;
	ИначеЕсли КолПартий = 5 Тогда
		ИтогСтроки = 3;
	ИначеЕсли КолПартий = 7 Тогда
		ИтогСтроки = 4;
	КонецЕсли;
	Возврат ИтогСтроки;
	
КонецФункции

&НаКлиенте
Процедура ОбновитьОчкиТаблицы(НомГр)
	
	ТаблицаДанных = ТаблицаГруппы;
	КолКолонок = ТаблицаДанных.Количество();
	Если КолКолонок > 0 Тогда
		Для Каждого ТекСтрока Из ТаблицаДанных Цикл
			ВсегоОчков = 0;
			Для Кол = 1 По КолКолонок Цикл
				ЗначениеКолонки = ТекСтрока["КолонкаИгры"+Формат(Кол,"ЧГ=0")];
				Если ЗначениеКолонки = "X" Или ЗначениеКолонки = "Х" Или ЗначениеКолонки = "" Тогда
				Иначе
					ВсегоОчков = ВсегоОчков + Число(ЗначениеКолонки);
				КонецЕсли;
			КонецЦикла;
			//устанавливаем количество
			ТекСтрока.Очки = ВсегоОчков;
		КонецЦикла;
		////рассчитываем приблизительны места 
		//ТаблицаСМестами = Документы.ПроведениеСоревнования.РасчетМестНаСервере(ТаблицаДанных.Выгрузить().Скопировать(,"Участник"),ТаблицаОбщихДанных.Выгрузить(),НомерТура);
		//Для каждого ТекСтрРасчета Из ТаблицаСМестами Цикл
		//	ИскомаяСтрока = ТаблицаДанных.НайтиСтроки(Новый Структура("Участник",ТекСтрРасчета.Участник));
		//	Если ИскомаяСтрока.Количество() > 0 Тогда
		//		ЗаполнитьЗначенияСвойств(ИскомаяСтрока[0],ТекСтрРасчета);
		//	КонецЕсли; 
		//КонецЦикла;  
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ПроставитьЗначенияВыигрышаИПроигрышаВТаблице(Победитель,Проигравший,НомГруппы,УдалитьЗачеркивание = Ложь,ПроигравшийПоТехническому = Ложь)
	
	СтрокаПобедителя = ТаблицаГруппы.НайтиСтроки(Новый Структура("Участник",Победитель))[0];
	СтрокаПроигравшего = ТаблицаГруппы.НайтиСтроки(Новый Структура("Участник",Проигравший))[0];
	
	ДанныеПоДетализацииОчков = ПолучитьСписокОчковДляУчастников(Победитель,Проигравший,НомГруппы);
	
	//сначала поставим победителю 2 очка
	НомПроигравшего = СтрокаПроигравшего.НомерУчастника;
	//если удаляем зачеркивание значит удалили игру
	СтрокаПобедителя["КолонкаИгры"+НомПроигравшего] = ?(УдалитьЗачеркивание,"",2);
	СтрокаПобедителя["СписокОчков"+НомПроигравшего] = ДанныеПоДетализацииОчков.ДетализацияВыигравшего;
	
	НомВыигравшего = СтрокаПобедителя.НомерУчастника;
	Если ПроигравшийПоТехническому Тогда
		КолОчковДляПроигравшего = 0;
	Иначе
		КолОчковДляПроигравшего = 1;
	КонецЕсли; 
	
	СтрокаПроигравшего["КолонкаИгры"+НомВыигравшего] = ?(УдалитьЗачеркивание,"",КолОчковДляПроигравшего);
	СтрокаПроигравшего["СписокОчков"+НомВыигравшего] = ДанныеПоДетализацииОчков.ДетализацияПроигравшего;
			
КонецПроцедуры

&НаСервере
Функция ПолучитьСписокОчковДляУчастников(мВыигравший,мПроигравший,мНомерГруппы)
	
	мОбщаяТаблицаПоТуру = ТаблицаОбщихДанных.Выгрузить(Новый Структура("НомерТура,НомерГруппы",НомерТура,Число(мНомерГруппы)));
	//ВЫИГРАВШИЙ
	//детализация по очкам или мячикам
	ДанныеДляОтбора = Новый Структура;
	ДанныеДляОтбора.Вставить("Первый",мВыигравший);
	ДанныеДляОтбора.Вставить("Второй",мПроигравший);
	ДанныеДляОтбора.Вставить("НомерТура",НомерТура);
	ПараметрыДетализации = Документы.ПроведениеСоревнования.ПолучитьДетализациюПоИгре(ДанныеДляОтбора,мОбщаяТаблицаПоТуру);
	Если ПараметрыДетализации.Количество() > 0 Тогда
		СтрокаДетализацииВыигравшего = ПараметрыДетализации[0].Мячики;
	Иначе
		СтрокаДетализацииВыигравшего = "";
	КонецЕсли;
	
	//ПРОИГРАВШИЙ
	ДанныеДляОтбора = Новый Структура;
	ДанныеДляОтбора.Вставить("Первый",мПроигравший);
	ДанныеДляОтбора.Вставить("Второй",мВыигравший);
	ДанныеДляОтбора.Вставить("НомерТура",НомерТура);
	ПараметрыДетализации = Документы.ПроведениеСоревнования.ПолучитьДетализациюПоИгре(ДанныеДляОтбора,мОбщаяТаблицаПоТуру);
	Если ПараметрыДетализации.Количество() > 0 Тогда
		СтрокаДетализации = ПараметрыДетализации[0];
		Если Найти(СтрокаДетализации.Мячики,"Техн.") > 0 Тогда
			мСписокОчковПроигравшего = СтрокаДетализации.Мячики;
		Иначе
			мСписокОчковПроигравшего = ""+ПараметрыДетализации[0].ОчкиПроигравшего+" : "+ПараметрыДетализации[0].ОчкиВыигравшего;
		КонецЕсли; 
	Иначе
		мСписокОчковПроигравшего = "";
	КонецЕсли;
	
	Возврат Новый Структура("ДетализацияВыигравшего,ДетализацияПроигравшего",СтрокаДетализацииВыигравшего,мСписокОчковПроигравшего);
	
КонецФункции
                                                                      
&НаКлиенте
Процедура ЗаписатьДанные(Команда)
	
	//все данные внесем в табличную часть документа
	Если ЭтотОбъект.Модифицированность Тогда
		//ЭтотОбъект.Закрыть();
		ЭтотОбъект.Модифицированность = Ложь;
		ОповеститьОВыборе(ТаблицаОбщихДанных);
		//ЭтотОбъект.Модифицированность = Ложь;
	Иначе
		ЭтотОбъект.Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьБезЗакрытия(Команда)
	
	Если ЭтотОбъект.Модифицированность Тогда
		ЭтотОбъект.ЗакрыватьПриВыборе = Ложь;
		ОповеститьОВыборе(ТаблицаОбщихДанных);
		ПоказатьОповещениеПользователя("Внимание",,"Данные таблицы успешно записаны",БиблиотекаКартинок.Информация);
		ЭтотОбъект.ЗакрыватьПриВыборе = Истина;
		ЭтотОбъект.Модифицированность = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьФорму(Команда)
	
	ЭтотОбъект.Закрыть();
	
КонецПроцедуры
 
//ИмяЭлемента - строка из которой нужно выбрать данные
//ОпрГруппу - значение что нужно выбрать из Имени элемента
//ОпрНомерКолонки тоже самое что и ОпрГруппу
&НаКлиенте
Функция ОпределитьНомерГруппыПоЭлементу(ИмяЭлемента = Неопределено,ОпрГруппу = Ложь,ОпрНомерКолонки = Ложь)
	
	Возврат СписокГруппПереключатели;	
	
КонецФункции

&НаКлиенте
Процедура СУчетомИгр(Команда)
	
	ТекНомерГруппы = глТекГруппа;

	СписокГрупповыхЭтапов.ПоказатьВыборЭлемента(Новый ОписаниеОповещения("СУчетомИгрЗавершение", ЭтотОбъект),
		"Выберите тур для зачета игр в Группе № " + ТекНомерГруппы);

КонецПроцедуры

&НаКлиенте
Процедура СУчетомИгрЗавершение(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
	
	ЭтапДляСУчетом = ВыбранныйЭлемент;
	Если ЭтапДляСУчетом <> Неопределено Тогда
		ДобавитьИгрыСЭтапа(ЭтапДляСУчетом.Значение);
		ЗаписатьДанные(Неопределено);
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ДобавитьИгрыСЭтапа(парНомерЭтапа)
	
	ТекНомерГруппы = глТекГруппа;
	Отбор = Новый Структура;
	Отбор.Вставить("НомерТура",парНомерЭтапа);
	ТаблицаИгрВыбранногоЭтапа = СсылкаНаСоревнование.ОбщаяТаблицаДанных.Выгрузить(Отбор);
	//дальше найдем всех участников группы и их сыгранные игры в другом этапе
	Отбор2 = Новый Структура;
	Отбор2.Вставить("НомерТура",НомерТура);
	Отбор2.Вставить("НомерГруппы",ТекНомерГруппы);
	УчастникиТура = СсылкаНаСоревнование.УчастникиПоЖеребьевке.Выгрузить(Отбор2);
	УчастникиТура.Свернуть("Участник");
	МассивСтрок = УчастникиТура.ВыгрузитьКолонку("Участник");
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = "ВЫБРАТЬ * ПОМЕСТИТЬ втОбщиеДанные Из &Внеш КАК Внеш";
	Запрос.УстановитьПараметр("Внеш",ТаблицаИгрВыбранногоЭтапа);
	Запрос.Выполнить();
	
	Текст = "ВЫБРАТЬ
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.НомерСтроки,
	|	&НомТура КАК НомерТура,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.РежимТура,
	|	&НомГруппы КАК НомерГруппы,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.НомерСета,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Выигравший,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Проигравший,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.КолШаров,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.ОчкиВыигравшего,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.ОчкиПроигравшего,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.ТехническоеВ,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.ТехническоеП,
	|	Истина КАК ЗачтеннаяИграГрупповой
	|ИЗ
	|	втОбщиеДанные КАК ПроведениеСоревнованияОбщаяТаблицаДанных
	|ГДЕ
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Выигравший В(&Списке)
	|	И ПроведениеСоревнованияОбщаяТаблицаДанных.Проигравший В(&Списке)";
	
	Запрос.Текст = Текст;
	Запрос.УстановитьПараметр("Списке",МассивСтрок);
	Запрос.УстановитьПараметр("НомТура",НомерТура);
	Запрос.УстановитьПараметр("НомГруппы",ТекНомерГруппы);
	Результат = Запрос.Выполнить().Выгрузить();
	Если Результат.Количество() > 0 Тогда
		МассивСтрокПоТекущейГруппе = ТаблицаОбщихДанных.НайтиСтроки(Отбор2);
		Для каждого ТекСтр Из МассивСтрокПоТекущейГруппе Цикл
			ТаблицаОбщихДанных.Удалить(ТекСтр);
		КонецЦикла; 
		Для каждого ТекСтр Из Результат Цикл
			НовСтрока = ТаблицаОбщихДанных.Добавить();
			ЗаполнитьЗначенияСвойств(НовСтрока,ТекСтр);
		КонецЦикла; 
	КонецЕсли;
	ЭтотОбъект.Модифицированность = Истина;
	СУчетомИгр = Истина;
	ПереоткрытьФорму = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьДанныеИгры(Команда)
	
	ТекНомерГруппы = глТекГруппа;

	ПоказатьВопрос(Новый ОписаниеОповещения("УдалитьДанныеИгрыЗавершение", ЭтотОбъект,
		Новый Структура("ТекНомерГруппы", ТекНомерГруппы)), "Все игры в группе № " + ТекНомерГруппы
		+ " будут удалены. Продолжить?", РежимДиалогаВопрос.ДаНет);

КонецПроцедуры

&НаКлиенте
Процедура УдалитьДанныеИгрыЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	ТекНомерГруппы = ДополнительныеПараметры.ТекНомерГруппы;
		
	Ответ = РезультатВопроса;
	Если Ответ = КодВозвратаДиалога.Да Тогда
		Отбор = Новый Структура;
		Отбор.Вставить("НомерГруппы",ТекНомерГруппы);
		Отбор.Вставить("НомерТура",НомерТура);
		МассивСтрок = ТаблицаОбщихДанных.НайтиСтроки(Отбор);
		Для Каждого ТекСтрока Из МассивСтрок Цикл
			ТаблицаОбщихДанных.Удалить(ТекСтрока);
		КонецЦикла;
		ПереоткрытьФорму = Истина;
		ЭтотОбъект.Модифицированность = Истина;
		ЗаписатьДанные(Неопределено);
	КонецЕсли;

КонецПроцедуры
	
&НаКлиенте
Процедура КомандаБегунки(Команда)
	
	ТекНомерГруппы = глТекГруппа;
	ДанныеДляФормы = Новый Структура;
	ДанныеДляФормы.Вставить("ТабДок",ПолучитьТабличныйДокументПоБегункам(ТекНомерГруппы));
	ДанныеДляФормы.Вставить("Заголовок","Бегунки для группы № "+ТекНомерГруппы);
	ДанныеДляФормы.Вставить("Ссылка",СсылкаНаСоревнование.Ссылка);
	ОткрытьФорму("ОбщаяФорма.ФормаВыводаНаПечать",ДанныеДляФормы,ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьТабличныйДокументПоБегункам(мНомерГруппы)
	
	ТаблицаУчастниковГруппы = ТаблицаГруппы;
	КоличествоВГруппе = ТаблицаУчастниковГруппы.Количество();
	
	ТаблицаПорядкаИгр = Документы.ПроведениеСоревнования.ПолучитьТаблицуИгрТура(КоличествоВГруппе);
	
	Макет = Документы.ПроведениеСоревнования.ПолучитьМакет("Бегунки");
		
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.АвтоМасштаб = Истина;
	ТабДок.ПолеСверху = 0;
	ТабДок.ПолеСлева = 0;
	ТабДок.ПолеСнизу = 0;
	ТабДок.ПолеСправа = 0;
	
	МассивДляПечати = Новый Массив;
	СчИгр = 1;
	СЧБегунков = 0;
	Для каждого ТекСтрокаИгры Из ТаблицаПорядкаИгр Цикл
		//печатаем только те, которые полностью заполнены	
		Попытка
			ПервыйУчастникПары = ТаблицаУчастниковГруппы.Получить(ТекСтрокаИгры.Первый-1)["Участник"];
		Исключение
		    ПервыйУчастникПары = Неопределено;
		КонецПопытки; 
		Попытка
			ВторойУчастникПары = ТаблицаУчастниковГруппы.Получить(ТекСтрокаИгры.Второй-1)["Участник"];
		Исключение
		    ВторойУчастникПары = Неопределено;
		КонецПопытки; 
		Если ПервыйУчастникПары = Неопределено Или ВторойУчастникПары = Неопределено Тогда
			Продолжить; //нет смысла его печатать	
		КонецЕсли; 
		ПервыйБегунок	= Макет.ПолучитьОбласть("ГоризонтальнаяОбластьБегунка | ПервыйБегунок");
		ПервыйБегунок.Параметры.ДатаВремя 				= Формат(СерверныеСервер.ДатаСеанса(), "ДФ=dd.MM.yy");
		ПервыйБегунок.Параметры.НазваниеСоревнования	= СсылкаНаСоревнование.НазваниеСоревнования;
		ПервыйБегунок.Параметры.НомУчастника1			= "";
		ПервыйБегунок.Параметры.НомУчастника2			= "";
		ПервыйБегунок.Параметры.НомерМатча				= СчИгр;
		ПервыйБегунок.Параметры.НомерТура				= ТекСтрокаИгры.НомерТура;
		ПервыйБегунок.Параметры.Участник1				= ОбщийКлиентСервер.СформироватьИмяИгрока(ПервыйУчастникПары);
		ПервыйБегунок.Параметры.Участник2				= ОбщийКлиентСервер.СформироватьИмяИгрока(ВторойУчастникПары);
				
		МассивДляПечати.Добавить(ПервыйБегунок);
		Если МассивДляПечати.Количество() = 2 Тогда
			Если СЧБегунков = 5 Тогда
				ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
				СЧБегунков = 0;
			КонецЕсли;
			СЧБегунков = СЧБегунков + 1;;
			ТабДок.Вывести(МассивДляПечати.Получить(0));
			ТабДок.Присоединить(МассивДляПечати.Получить(1));
			МассивДляПечати.Очистить();
		КонецЕсли;
		СчИгр = СчИгр + 1;
	КонецЦикла;
	//выводим остаток
	Если МассивДляПечати.Количество() = 1 Тогда
		ТабДок.Вывести(МассивДляПечати.Получить(0));
	КонецЕсли;
	
	Возврат ТабДок;
	
КонецФункции

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если мЗакрытиеФормы Тогда
		Если ЭтотОбъект.Модифицированность Тогда
			СтандартнаяОбработка = Ложь;
			Отказ = Истина;
			ПоказатьВопрос(Новый ОписаниеОповещения("ПередЗакрытиемЗавершение", ЭтотОбъект), "Данные не будут сохранены. Вы уверены что хотите закрыть форму?",РежимДиалогаВопрос.ДаНет);
		КонецЕсли;
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытиемЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Ответ = РезультатВопроса;
	Если Ответ = КодВозвратаДиалога.Да Тогда
		мЗакрытиеФормы = Ложь;
		ЭтотОбъект.Закрыть();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура КомандаПоказатьПротокол(Команда)
	
	Искомая = СсылкаНаСоревнование.ХодСоревнования.НайтиСтроки(Новый Структура("НомерСтроки",НомерТура));
	Если Искомая.Количество() > 0 Тогда
		ПараметрыСтроки = Новый Структура;
		ПараметрыСтроки.Вставить("НомерСтроки",НомерТура);
		ПараметрыСтроки.Вставить("РежимТура",Искомая[0].РежимТура);
		ПараметрыСтроки.Вставить("КолПартий",Искомая[0].КолПартий);
		ПараметрыСтроки.Вставить("Комментарий", Искомая[0].Комментарий);
		ПараметрыСтроки.Вставить("СеткаНа", Искомая[0].СеткаНа);
		ОткрытьФорму("ОбщаяФорма.ФормаВыводаНаПечать", Новый Структура("ТабДок,Заголовок,Ссылка",
			ФормированиеТаблицГрупп(ПараметрыСтроки), Искомая[0].Комментарий, СсылкаНаСоревнование.Ссылка), ЭтотОбъект,
			Новый УникальныйИдентификатор);
	КонецЕсли; 
	
КонецПроцедуры
 
&НаСервере
Функция ФормированиеТаблицГрупп(парСтроки)
		
	мДокОбъектЗнач = РеквизитФормыВЗначение("СсылкаНаСоревнование");
	мДокОбъект = мДокОбъектЗнач.Скопировать();
	мДокОбъект.ОбщаяТаблицаДанных.Очистить();
	Для каждого ТекСтр Из ТаблицаОбщихДанных Цикл
		ЗаполнитьЗначенияСвойств(мДокОбъект.ОбщаяТаблицаДанных.Добавить(),ТекСтр);
	КонецЦикла; 
	
	Возврат Документы.ПроведениеСоревнования.ФормированиеТаблицГрупп(парСтроки,Истина,мДокОбъект);
	
КонецФункции

&НаКлиенте
Процедура ФильтроватьТаблицуМониторинга()
	
	Если СписокГруппПереключатели = 99 Тогда
		Элементы.ТаблицаМониторинга.ОтборСтрок = Неопределено;		
	Иначе
		Элементы.ТаблицаМониторинга.ОтборСтрок = Новый ФиксированнаяСтруктура("НомерГруппы",СписокГруппПереключатели);		
	КонецЕсли; 
	
КонецПроцедуры
 
&НаКлиенте
Процедура ЗаполнитьТаблицуПоНомеруГруппы(парНомерГруппы)
	
	Данные = Новый Структура;
	Если парНомерГруппы <> 99 Тогда
		глТекГруппа = парНомерГруппы;
	КонецЕсли;
	Данные.Вставить("НомГруппы", парНомерГруппы);
	Данные.Вставить("НомерТура", НомерТура);
	Данные.Вставить("РежимТура", РежимТура);
	Данные.Вставить("АдресОбщейТаблицыДанных", АдресОбщейТаблицыДанных);
	Данные.Вставить("АдресТаблицаУчастников", АдресТаблицаУчастников);

	ДанныеЗаполнения = ПолучитьКонечныйТабличныйДокумент(Данные);
	ОбновитьТабличныйДокументГрупп(ТабличныйДокументГрупп, ДанныеЗаполнения.ТабДок);
	
	РасчетнаяТаблица.Очистить();
	
	Для каждого ТекСтрока Из ДанныеЗаполнения.РасчетнаяТаблица Цикл
		
		НовСтрока = РасчетнаяТаблица.Добавить();
		ЗаполнитьЗначенияСвойств(НовСтрока, ТекСтрока);
		
	КонецЦикла; 
	
КонецПроцедуры
 
&НаСервереБезКонтекста
Функция ПолучитьКонечныйТабличныйДокумент(ДанныеДляПолучения)
	
	ТЧДока = ПолучитьИзВременногоХранилища(ДанныеДляПолучения.АдресОбщейТаблицыДанных);
	ТЧУчастников = ПолучитьИзВременногоХранилища(ДанныеДляПолучения.АдресТаблицаУчастников);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = "ВЫБРАТЬ * ПОМЕСТИТЬ ВсяТаблица ИЗ &Внеш КАК Внеш;
	|ВЫБРАТЬ * ПОМЕСТИТЬ втУчастники ИЗ &Внеш1 КАК Внеш1";
	Запрос.УстановитьПараметр("Внеш",ТЧДока);
	Запрос.УстановитьПараметр("Внеш1", ТЧУчастников);
	Запрос.Выполнить();
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	втУчастники.НомерГруппы КАК НомерГруппы
	|ИЗ
	|	втУчастники КАК втУчастники
	|ГДЕ
	|	ВЫБОР
	|			КОГДА &НомГруппы = 99
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ втУчастники.НомерГруппы = &НомГруппы
	|		КОНЕЦ
	|	И втУчастники.НомерТура = &НомерТура
	|	И втУчастники.НомерГруппы <> 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерГруппы";
	Запрос.УстановитьПараметр("НомГруппы",Число(ДанныеДляПолучения.НомГруппы));
	Запрос.УстановитьПараметр("НомерТура", ДанныеДляПолучения.НомерТура);
	РезультатПоНомерамГруппы = Запрос.Выполнить().Выгрузить();
	
	Макет  = Документы.ПроведениеСоревнования.ПолучитьМакет("ГрупповойМакет");
	
	НомерТура	= Число(ДанныеДляПолучения.НомерТура);
	
	ИтоговыеТабличныйДокумент 	= Новый ТабличныйДокумент;
	ИтоговаяИсходныеСтроки			= Неопределено;
	
	Для каждого СтрокаРезультата Из РезультатПоНомерамГруппы Цикл
		
		ТекНомерГруппы = СтрокаРезультата.НомерГруппы;
		
		ИсходныеСтроки = ТЧУчастников.Скопировать(Новый Структура("НомерГруппы,НомерТура,РежимТура",ТекНомерГруппы,ДанныеДляПолучения.НомерТура,ДанныеДляПолучения.РежимТура));
		
		Ном = 1;
		
		//подготовим таблицу исходных игроков
		мИсходныеСтроки = ИсходныеСтроки.СкопироватьКолонки("Участник, НомерГруппы");	 
		мИсходныеСтроки.Колонки.Добавить("НомерУчастника");
		мИсходныеСтроки.Колонки.Добавить("РейтингУчастника");
		
		Для Кол = 1 По ИсходныеСтроки.Количество() Цикл
			мИсходныеСтроки.Колонки.Добавить("КолонкаИгры"+Кол);
			мИсходныеСтроки.Колонки.Добавить("СписокОчков"+Кол);
			мИсходныеСтроки.Колонки.Добавить("ЗачтеннаяИграГрупповой"+Кол);
		КонецЦикла; 
		
		мИсходныеСтроки.Колонки.Добавить("Место");
		мИсходныеСтроки.Колонки.Добавить("Очки");
		мИсходныеСтроки.Колонки.Добавить("Соотношение");
		
		ТабДок = Новый ТабличныйДокумент;
		
		мОбщаяТаблицаПоТуру = ТЧДока.Скопировать(Новый Структура("НомерТура,НомерГруппы",НомерТура,ТекНомерГруппы));
		
		//а теперь все остальные игры
		Для Каждого ТекСтрока Из ИсходныеСтроки Цикл
			НовСтрока = мИсходныеСтроки.Добавить();
			НовСтрока.НомерГруппы		= ТекНомерГруппы;
			НовСтрока.НомерУчастника 	= Ном;
			НовСтрока.Участник 			= ТекСтрока.Участник;
			НовСтрока.РейтингУчастника 	= ТекСтрока.ТекущийРейтинг;
			НовСтрока["КолонкаИгры"+Ном] = "X";// за место "X" ячейка будет закрашена  ЛАТ
			
			Запрос.Текст = "ВЫБРАТЬ
			|	ВсяТаблица.НомерТура КАК НомерТура,
			|	ВсяТаблица.НомерГруппы КАК НомерГруппы,
			|	ВсяТаблица.Выигравший КАК Выигравший,
			|	0 КАК НомерВТаблицеВыигр,
			|	ВсяТаблица.Проигравший КАК Проигравший,
			|	0 КАК НомерВТаблицеПроигр,
			|	СУММА(ВсяТаблица.ОчкиВыигравшего) КАК ОчкиВыигравшего,
			|	СУММА(ВсяТаблица.ОчкиПроигравшего) КАК ОчкиПроигравшего,
			|	ВсяТаблица.ТехническоеВ КАК ТехническоеВ,
			|	ВсяТаблица.ТехническоеП КАК ТехническоеП,
			|	ВсяТаблица.ЗачтеннаяИграГрупповой КАК ЗачтеннаяИграГрупповой
			|ИЗ
			|	ВсяТаблица КАК ВсяТаблица
			|ГДЕ
			|	ВсяТаблица.НомерТура = &НомерТура
			|	И ВсяТаблица.НомерГруппы = &НомГруппы
			|	И (ВсяТаблица.Выигравший = &Участник
			|			ИЛИ ВсяТаблица.Проигравший = &Участник)
			|
			|СГРУППИРОВАТЬ ПО
			|	ВсяТаблица.НомерГруппы,
			|	ВсяТаблица.Выигравший,
			|	ВсяТаблица.Проигравший,
			|	ВсяТаблица.НомерТура,
			|	ВсяТаблица.ТехническоеВ,
			|	ВсяТаблица.ТехническоеП,
			|	ВсяТаблица.ЗачтеннаяИграГрупповой";
			Запрос.УстановитьПараметр("Участник",ТекСтрока.Участник);
			Запрос.УстановитьПараметр("НомерТура",НомерТура);
			Запрос.УстановитьПараметр("НомГруппы", ТекНомерГруппы);
			
			//@skip-warning
			Результат = Запрос.Выполнить().Выгрузить();
			Если Результат.Количество() > 0 Тогда //есть данные по участнику
				ВсегоОчков = 0;
				//сначала проставим выигравшие позиции
				СтрокиВыигрыша = Результат.НайтиСтроки(Новый Структура("Выигравший",ТекСтрока.Участник));
				Если СтрокиВыигрыша.Количество() > 0 Тогда //у кого то выиграл молодец
					Для Каждого ТекИгрок Из СтрокиВыигрыша Цикл
						//узнаем номер колонки что бы поставить значение
						СтрокаПоиска = ИсходныеСтроки.Найти(ТекИгрок.Проигравший);
						Если СтрокаПоиска <> Неопределено Тогда
							НомКолонки   = ИсходныеСтроки.Индекс(СтрокаПоиска)+1;
							НовСтрока["КолонкаИгры"+НомКолонки] = "2";
							ВсегоОчков = ВсегоОчков + 2;
							//детализация по очкам или мячикам
							ДанныеДляОтбора = Новый Структура;
							ДанныеДляОтбора.Вставить("Первый",ТекСтрока.Участник);
							ДанныеДляОтбора.Вставить("Второй",ТекИгрок.Проигравший);
							ДанныеДляОтбора.Вставить("НомерТура",НомерТура);
							ПараметрыДетализации = Документы.ПроведениеСоревнования.ПолучитьДетализациюПоИгре(ДанныеДляОтбора,мОбщаяТаблицаПоТуру);
							Если ПараметрыДетализации.Количество() > 0 Тогда
								СтрокаДетализации = ПараметрыДетализации[0].Мячики;
							Иначе
								СтрокаДетализации = "";
							КонецЕсли;
							НовСтрока["СписокОчков"+НомКолонки]= СтрокаДетализации;
							НовСтрока["ЗачтеннаяИграГрупповой"+НомКолонки] = ТекИгрок.ЗачтеннаяИграГрупповой;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
				
				СтрокиПроигрыша = Результат.НайтиСтроки(Новый Структура("Проигравший",ТекСтрока.Участник));
				Если СтрокиПроигрыша.Количество() > 0 Тогда
					Для Каждого ТекИгрок Из СтрокиПроигрыша Цикл
						//узнаем номер колонки что бы поставить значение
						СтрокаПоиска = ИсходныеСтроки.Найти(ТекИгрок.Выигравший);
						Если СтрокаПоиска <> Неопределено Тогда
							НомКолонки   = ИсходныеСтроки.Индекс(СтрокаПоиска)+1;
							Если ТекИгрок.ТехническоеП Тогда
								НовСтрока["КолонкаИгры"+НомКолонки] = "0";
								ВсегоОчков = ВсегоОчков + 0;
							Иначе
								НовСтрока["КолонкаИгры"+НомКолонки] = "1";
								ВсегоОчков = ВсегоОчков + 1;
							КонецЕсли;
							//детализация по очкам или мячикам
							ДанныеДляОтбора = Новый Структура;
							ДанныеДляОтбора.Вставить("Первый",ТекСтрока.Участник);
							ДанныеДляОтбора.Вставить("Второй",ТекИгрок.Выигравший);
							ДанныеДляОтбора.Вставить("НомерТура",НомерТура);
							ПараметрыДетализации = Документы.ПроведениеСоревнования.ПолучитьДетализациюПоИгре(ДанныеДляОтбора,мОбщаяТаблицаПоТуру);
							Если ПараметрыДетализации.Количество() > 0 Тогда
								СтрокаДетализации = ПараметрыДетализации[0];
								Если Найти(СтрокаДетализации.Мячики,"Техн.") > 0 Тогда
									мСписокОчков = СтрокаДетализации.Мячики;
								Иначе
									мСписокОчков = ""+ПараметрыДетализации[0].ОчкиПроигравшего+" : "+ПараметрыДетализации[0].ОчкиВыигравшего;
								КонецЕсли; 
							Иначе
								мСписокОчков = "";
							КонецЕсли;
							НовСтрока["СписокОчков"+НомКолонки] 	= мСписокОчков;
							НовСтрока["ЗачтеннаяИграГрупповой"+НомКолонки] = ТекИгрок.ЗачтеннаяИграГрупповой;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
				НовСтрока.Очки = ВсегоОчков;
			КонецЕсли;
			Ном = Ном + 1;
		КонецЦикла;
		
		//РАСЧЕТ МЕСТ
		КолКолонок = мИсходныеСтроки.Количество();
		Если КолКолонок > 0 Тогда
			КопияУчастников = мИсходныеСтроки.Скопировать(,"Участник");
			// рассчитываем приблизительны места 
			ТаблицаСМестами = Документы.ПроведениеСоревнования.РасчетМестНаСервере(КопияУчастников,мОбщаяТаблицаПоТуру,НомерТура);
			Для каждого ТекСтрРасчета Из ТаблицаСМестами Цикл
				ИскомаяСтрока = мИсходныеСтроки.Найти(ТекСтрРасчета.Участник,"Участник");
				Если ИскомаяСтрока <> Неопределено Тогда
					ИскомаяСтрока.Очки 	= ТекСтрРасчета.Очки;
					ИскомаяСтрока.Место	= ТекСтрРасчета.Место;
					ИскомаяСтрока.Соотношение	= ТекСтрРасчета.Соотношение;
				КонецЕсли; 
			КонецЦикла;  
		КонецЕсли; 
		
		мИсходныеСтроки.Сортировать("НомерУчастника ВОЗР");
		
		Если ИтоговаяИсходныеСтроки = Неопределено Тогда
			ИтоговаяИсходныеСтроки = мИсходныеСтроки.Скопировать();
		Иначе
			Для каждого ТекСтрИсх Из мИсходныеСтроки Цикл
				ЗаполнитьЗначенияСвойств(ИтоговаяИсходныеСтроки.Добавить(), ТекСтрИсх);
			КонецЦикла; 
		КонецЕсли; 
		
		// заголовок группы
		ОбластьЗаголовок = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
		ОбластьЗаголовок.Параметры.НазваниеГруппы = "Группа №" + ТекНомерГруппы;
		ОбластьЗаголовок.Параметры.НомерГруппы = "Группа_"+ ТекНомерГруппы;
		ОбластьЗаголовок.ТекущаяОбласть.Примечание.Текст = "Для удаления игр этой группы, щелкните левой кнопкой мыши на область Группа № " + ТекНомерГруппы;
		ТабДок.Вывести(ОбластьЗаголовок);
		
		// шапка таблицы
		ОбластьШапка = Макет.ПолучитьОбласть("ШапкаТаблицы | ВертикальШапка");
		ОбластьШапка.Параметры.ФИО = "ФИО участника";
		ТабДок.Вывести(ОбластьШапка);
		
		// рейтинг
		КоличествоУчастников = мИсходныеСтроки.Количество();
		
		ОбластьШапкиКолонки = Макет.ПолучитьОбласть("ШапкаТаблицы | ВертикальКолонка");
		Ном = 1;
		Для К = 0 По КоличествоУчастников-1 Цикл
			ОбластьШапкиКолонки.Параметры.НомерКолонки = Ном;
			ТабДок.Присоединить(ОбластьШапкиКолонки);
			Ном = Ном + 1;
		КонецЦикла;
		//и еще добавим 3 колонки очки,соотношение,место
		ОбластьШапкиКолонки.Параметры.НомерКолонки = "Очки";
		ТабДок.Присоединить(ОбластьШапкиКолонки);
		глВыводСоотношенийПартий = Константы.ВыводитьСоотношениеПартий.Получить();
		
		Если глВыводСоотношенийПартий Тогда
			ОбластьШапкиКолонки.Параметры.НомерКолонки = "Соотн.";
			ТабДок.Присоединить(ОбластьШапкиКолонки);
		КонецЕсли; 
		
		ОбластьШапкиКолонки.Параметры.НомерКолонки = "Место";
		ТабДок.Присоединить(ОбластьШапкиКолонки);
		
		//начинаем выводить строки таблицы
		ОбластьСтроки 	     	= Макет.ПолучитьОбласть("СтрокаТаблицы | ВертикальШапка");
		ОбластьКолонкиСтроки 	= Макет.ПолучитьОбласть("СтрокаТаблицы | ВертикальКолонка");
		ОбластьКолонкиСтрокиИтог	= Макет.ПолучитьОбласть("СтрокаТаблицы | ВертикальКолонкаИтоговые");
		ЗакрашеннаяОбласть 		= Макет.ПолучитьОбласть("СтрокаТаблицы|Закрашенная");
		ОбластьДляОчков 			= Макет.ПолучитьОбласть("СтрокаТаблицы|ПоОчкам");
		
		// ОбластьЗначенияКолонкиГородКлуб = Макет.ПолучитьОбласть("СтрокаТаблицы | ОбластьГородКлуб");
		
		Для каждого ТекСтрокаУчастника Из мИсходныеСтроки Цикл
			
			ОбластьСтроки.Параметры.НомерПоПорядку 	= ТекСтрокаУчастника.НомерУчастника;
			ОбластьСтроки.Параметры.Участник	   		= ОбщийКлиентСервер.СформироватьИмяИгрока(ТекСтрокаУчастника.Участник) + 
				" (" + Формат(ТекСтрокаУчастника.РейтингУчастника, "ЧГ=0;") + ")";
			ОбластьСтроки.Параметры.УчастникРасшифровка = ТекСтрокаУчастника.Участник; 
			ТабДок.Вывести(ОбластьСтроки);
			
			Для каждого УчастникДляЗаполнения Из мИсходныеСтроки Цикл
				
				Если ТекСтрокаУчастника.Участник = УчастникДляЗаполнения.Участник Тогда
					ТабДок.Присоединить(ЗакрашеннаяОбласть);
					Продолжить;
				КонецЕсли; 
				
				СтрокаРасшифровки = СтрШаблон("%1#%2#%3", Строка(ТекНомерГруппы), ТекСтрокаУчастника.НомерУчастника, УчастникДляЗаполнения.НомерУчастника);
				
				НомерКолонкиИгры = мИсходныеСтроки.Индекс(УчастникДляЗаполнения) + 1;
				
				Если ЗначениеЗаполнено(ТекСтрокаУчастника["КолонкаИгры"+НомерКолонкиИгры]) Тогда
					ОбластьДляОчков.Параметры.ЗначениеКолонки	= Формат(ТекСтрокаУчастника["КолонкаИгры"+НомерКолонкиИгры], "ЧН=0");
					ОбластьДляОчков.Параметры.СтрокаОчков		= ТекСтрокаУчастника["СписокОчков"+НомерКолонкиИгры];                                                                                                                                                                                          
					//НомерГруппы#НомерУч1#НомерУч2
					ОбластьДляОчков.Параметры.ЗначениеКолонкиРасшифровка = СтрокаРасшифровки;
					Если ТекСтрокаУчастника["ЗачтеннаяИграГрупповой"+НомерКолонкиИгры] Тогда
						ОбластьДляОчков.Области.ЗначениеКолонкиЯчейка.ЦветТекста = WebЦвета.НейтральноПурпурный;
					Иначе
						ОбластьДляОчков.Области.ЗначениеКолонкиЯчейка.ЦветТекста = Новый Цвет(0,0,0);
					КонецЕсли; 
					ТабДок.Присоединить(ОбластьДляОчков);
				Иначе
					ОбластьКолонкиСтроки.Параметры.ЗначениеКолонки = "";
					ОбластьКолонкиСтроки.Параметры.ЗначениеКолонкиРасшифровка = СтрокаРасшифровки; 
					ТабДок.Присоединить(ОбластьКолонкиСтроки);
				КонецЕсли; 
				
			КонецЦикла; 
			
			ОбластьКолонкиСтрокиИтог.Параметры.ЗначениеКолонки = ТекСтрокаУчастника.Очки;
			ТабДок.Присоединить(ОбластьКолонкиСтрокиИтог);
			Если глВыводСоотношенийПартий Тогда
				ОбластьКолонкиСтрокиИтог.Параметры.ЗначениеКолонки = ТекСтрокаУчастника.Соотношение;
				ТабДок.Присоединить(ОбластьКолонкиСтрокиИтог);
			КонецЕсли;
			
			ОбластьКолонкиСтрокиИтог.Параметры.ЗначениеКолонки = ТекСтрокаУчастника.Место;
			ТабДок.Присоединить(ОбластьКолонкиСтрокиИтог);
			
		КонецЦикла;
		
		ИтоговыеТабличныйДокумент.Вывести(ТабДок);
		ИтоговыеТабличныйДокумент.Вывести(Макет.ПолучитьОбласть("Разделитель"));
		
	КонецЦикла; 
	 
	 ПараметрыВозврата = Новый Структура;
	 ПараметрыВозврата.Вставить("ТабДок", ИтоговыеТабличныйДокумент);
	 ПараметрыВозврата.Вставить("РасчетнаяТаблица", СерверныеСервер.ТаблицаЗначенийВМассив(ИтоговаяИсходныеСтроки));
	 
	 Возврат ПараметрыВозврата;
	 	 
 КонецФункции
 
&НаКлиенте
Процедура ОбновитьАдресаТаблиц()
	
	ДанныеПоАдресам = ОбновитьАдресаТаблицНаСервере(ТаблицаОбщихДанных,ТаблицаГруппы,ЭтотОбъект.УникальныйИдентификатор);
	АдресОбщейТаблицыДанных		= ДанныеПоАдресам.АдресОбщейТаблицыДанных;
	АдресКопииТаблицыГрупп			= ДанныеПоАдресам.АдресКопииТаблицыГрупп;
	
КонецПроцедуры
 
&НаСервереБезКонтекста
Функция ОбновитьАдресаТаблицНаСервере(Знач ВсяТаблицаОбщихДанных,Знач ТаблицаГруппы,Уник)
	
	АдресОбщейТаблицыДанных	= ПоместитьВоВременноеХранилище(ВсяТаблицаОбщихДанных.Выгрузить(),Уник);
	АдресКопииТаблицыГрупп		= ПоместитьВоВременноеХранилище(ТаблицаГруппы.Выгрузить(),Уник);	
	Данные = Новый Структура;
	Данные.Вставить("АдресОбщейТаблицыДанных",АдресОбщейТаблицыДанных);
	Данные.Вставить("АдресКопииТаблицыГрупп",АдресКопииТаблицыГрупп);
	Возврат Данные;
	
КонецФункции

&НаСервереБезКонтекста
Процедура ОбновитьТабличныйДокументГрупп(ТабДокКуда, ТабДокЧто)
	
	ТабДокКуда.Очистить();
	ТабДокКуда.Вывести(ТабДокЧто);	
	
	ТабДокКуда.АвтоМасштаб = Истина;
	ТабДокКуда.ПолеСверху = 5;
	ТабДокКуда.ПолеСнизу = 5;
	ТабДокКуда.ПолеСлева = 5;
	ТабДокКуда.ПолеСправа = 5;
	
КонецПроцедуры

//МОНИТОРИНГ----------------------

&НаСервере
Процедура ЗаполнитьМониторинг()
		
	ТаблицаМониторинга.Очистить();
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = "ВЫБРАТЬ * ПОМЕСТИТЬ втУчастники ИЗ &Внеш КАК Внеш";
	Запрос.УстановитьПараметр("Внеш",СсылкаНаСоревнование.УчастникиПоЖеребьевке.Выгрузить());
	Запрос.Выполнить();
	Запрос.Текст = "ВЫБРАТЬ
	|	ПроведениеСоревнованияУчастникиПоЖеребьевке.НомерГруппы КАК НомерГруппы,
	|	ПроведениеСоревнованияУчастникиПоЖеребьевке.Участник КАК Участник,
	|	ПроведениеСоревнованияУчастникиПоЖеребьевке.ТекущийРейтинг КАК Рейтинг
	|ИЗ
	|	втУчастники КАК ПроведениеСоревнованияУчастникиПоЖеребьевке
	|ГДЕ
	|	ПроведениеСоревнованияУчастникиПоЖеребьевке.НомерТура = &НомерТура
	|	И ПроведениеСоревнованияУчастникиПоЖеребьевке.РежимТура = ЗНАЧЕНИЕ(Перечисление.РежимыТуровСоревнования.Групповой)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерГруппы,
	|	ПроведениеСоревнованияУчастникиПоЖеребьевке.НомерСтроки";
	Запрос.УстановитьПараметр("НомерТура",НомерТура);
	ТаблицаСНомерамиТуров = Запрос.Выполнить().Выгрузить();
	
	мНомераГрупп = ТаблицаСНомерамиТуров.Скопировать(,"НомерГруппы");
	мНомераГрупп.Свернуть("НомерГруппы");
	
	КопияУчастников = СсылкаНаСоревнование.УчастникиПоЖеребьевке.Выгрузить(Новый Структура("НомерТура,РежимТура",НомерТура,РежимТура),"НомерСтроки,Участник,НомерГруппы");
	СчУч = 1;
	СчГр = 1;
	Для Каждого ТекСтр Из КопияУчастников Цикл
		Если ТекСтр.НомерГруппы = СчГр Тогда
			ТекСтр.НомерСтроки = СчУч;
			СчУч = СчУч +1;
		Иначе
			СчГр = ТекСтр.НомерГруппы;
			СчУч = 1;
			ТекСтр.НомерСтроки = СчУч;
			СчУч = СчУч +1;
		КонецЕсли; 
	КонецЦикла; 
		
	Для каждого СтрТекНомерГруппы Из мНомераГрупп Цикл
		УчастникиГруппыПоНомеру = ТаблицаСНомерамиТуров.Скопировать(Новый Структура("НомерГруппы",СтрТекНомерГруппы.НомерГруппы));
		ТаблицаСПорядковымиИграми = Документы.ПроведениеСоревнования.ПолучитьТаблицуИгрТура(УчастникиГруппыПоНомеру.Количество());
		Для каждого ТекИгра Из ТаблицаСПорядковымиИграми Цикл
			Попытка
				ПервыйУчастник	= УчастникиГруппыПоНомеру.Получить(ТекИгра.Первый-1);
			Исключение
			    ПервыйУчастник 	= Неопределено;
			КонецПопытки; 
			Попытка
				ВторойУчастник		= УчастникиГруппыПоНомеру.Получить(ТекИгра.Второй-1);
			Исключение
			    ВторойУчастник 		= Неопределено;
			КонецПопытки; 
			
			Если ПервыйУчастник <> Неопределено И ВторойУчастник <> Неопределено Тогда
				мНомерВГруппе1 	= КопияУчастников.Найти(ПервыйУчастник.Участник).НомерСтроки;
				мНомерВГруппе2	 = КопияУчастников.Найти(ВторойУчастник.Участник).НомерСтроки;
			
				НовСтрока = ТаблицаМониторинга.Добавить();
				НовСтрока.НомерГруппы	= СтрТекНомерГруппы.НомерГруппы;
				//порядок вызова
				НовСтрока.НомерИгры		=	ТекИгра.НомерТура;
				//НовСтрока.ПриоритетВызова	=
				Если ПервыйУчастник.Рейтинг > ВторойУчастник.Рейтинг Тогда
					НовСтрока.Участник1			= ПервыйУчастник.Участник;
					НовСтрока.Рейтинг1				= ПервыйУчастник.Рейтинг;
					НовСтрока.НомерВГруппе1	= мНомерВГруппе1;
					НовСтрока.Участник2			= ВторойУчастник.Участник;
					НовСтрока.Рейтинг2				= ВторойУчастник.Рейтинг;
					НовСтрока.НомерВГруппе2	= мНомерВГруппе2;
				Иначе
					НовСтрока.Участник2			= ПервыйУчастник.Участник;
					НовСтрока.Рейтинг2				= ПервыйУчастник.Рейтинг;
					НовСтрока.НомерВГруппе2	= мНомерВГруппе1;
					НовСтрока.Участник1			= ВторойУчастник.Участник;
					НовСтрока.Рейтинг1				= ВторойУчастник.Рейтинг;
					НовСтрока.НомерВГруппе1	= мНомерВГруппе2;
				КонецЕсли; 
			КонецЕсли; 
		КонецЦикла; 
	КонецЦикла; 
	
	ЗаполнитьТаблицуМониторингаИграми();
	
	ВывестиАктивностьСтолов();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуМониторингаИграми()
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = "ВЫБРАТЬ * ПОМЕСТИТЬ втТаблицаОбщихДанных ИЗ &Внеш КАК Внеш";
	Запрос.УстановитьПараметр("Внеш",ТаблицаОбщихДанных.Выгрузить());
	Запрос.Выполнить();
	
	Запрос.Текст = "ВЫБРАТЬ
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.НомерТура КАК НомерТура,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.РежимТура КАК РежимТура,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.НомерГруппы КАК НомерГруппы,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Выигравший,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Проигравший,
	|	СУММА(ПроведениеСоревнованияОбщаяТаблицаДанных.ОчкиВыигравшего) КАК ОчкиВыигравшего,
	|	СУММА(ПроведениеСоревнованияОбщаяТаблицаДанных.ОчкиПроигравшего) КАК ОчкиПроигравшего,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.ТехническоеВ,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.ТехническоеП
	|ИЗ
	|	втТаблицаОбщихДанных КАК ПроведениеСоревнованияОбщаяТаблицаДанных
	|ГДЕ
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.НомерТура = &НомерТура
	|	И ПроведениеСоревнованияОбщаяТаблицаДанных.РежимТура = &РежимТура
	|
	|СГРУППИРОВАТЬ ПО
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.НомерТура,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.РежимТура,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.НомерГруппы,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Выигравший,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.Проигравший,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.ТехническоеВ,
	|	ПроведениеСоревнованияОбщаяТаблицаДанных.ТехническоеП
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерТура,
	|	РежимТура,
	|	НомерГруппы";
	Запрос.УстановитьПараметр("НомерТура",НомерТура);
	Запрос.УстановитьПараметр("РежимТура",Перечисления.РежимыТуровСоревнования.Групповой);
	Результат = Запрос.Выполнить().Выгрузить();
	Для каждого ТекСтр Из Результат Цикл
		ПроставитьЗначенияПоМониторингу(ТаблицаМониторинга,
			ТекСтр.Выигравший,
			ТекСтр.Проигравший,
		    ТекСтр.ОчкиВыигравшего,
			ТекСтр.ОчкиПроигравшего,
			ТекСтр.ТехническоеВ,
			ТекСтр.ТехническоеП);
	КонецЦикла;
	ВывестиАктивностьСтолов();
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ПроставитьЗначенияПоМониторингу(ТаблицаМониторинга,мУчастник1,мУчастник2,мОчки1,мОчки2,ТехВ,ТехП)
	
	Отбор = Новый Структура;
	Отбор.Вставить("Участник1",мУчастник1);
	Отбор.Вставить("Участник2",мУчастник2);
	ИскомаяСтрока = ТаблицаМониторинга.НайтиСтроки(Отбор);
	Если ИскомаяСтрока.Количество() > 0 Тогда
		СтрокаМониторинга = ИскомаяСтрока[0];
		СтрокаМониторинга.Очки1					= мОчки1;
		СтрокаМониторинга.Очки2					= мОчки2;
		СтрокаМониторинга.ТехническоеВ	= ТехВ;
		СтрокаМониторинга.ТехническоеП	= ТехП;
		СтрокаМониторинга.НомерСтола = 0;
		СтрокаМониторинга.ВремяВызова = Дата('00010101');
		СтрокаМониторинга.ПрошлоСекунд = 0;
		СтрокаМониторинга.СколькоВремениПрошло = "";
	Иначе
		Отбор = Новый Структура;
		Отбор.Вставить("Участник2",мУчастник1);
		Отбор.Вставить("Участник1",мУчастник2);
		ИскомаяСтрока = ТаблицаМониторинга.НайтиСтроки(Отбор);
		Если ИскомаяСтрока.Количество() > 0 Тогда
			СтрокаМониторинга = ИскомаяСтрока[0];
			СтрокаМониторинга.Очки1					= мОчки1;
			СтрокаМониторинга.Очки2					= мОчки2;
			СтрокаМониторинга.ТехническоеВ	= ТехП;
			СтрокаМониторинга.ТехническоеП	= ТехВ;
			СтрокаМониторинга.НомерСтола = 0;
			СтрокаМониторинга.ВремяВызова = Дата('00010101');
			СтрокаМониторинга.ПрошлоСекунд = 0;
			СтрокаМониторинга.СколькоВремениПрошло = "";
		КонецЕсли;
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаМониторингаПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаМониторингаПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ПосчитатьВремяВызоваПоСтрокам()
	
	Для каждого ТекСтол Из ТаблицаМониторинга Цикл РассчитатьСтрокуСоВременем(ТекСтол); КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСтрокуСоВременем(ТекСтрокаСтола)
	
	Если ТекСтрокаСтола.ВремяВызова <> Дата('00010101') Тогда
		ТекСтрокаСтола.ПрошлоСекунд = ТекСтрокаСтола.ПрошлоСекунд + 1;
		ТекСтрокаСтола.СколькоВремениПрошло = ОбщийКлиентСервер.ОбработатьСекундыНаВремя(ТекСтрокаСтола.ПрошлоСекунд);
	КонецЕсли; 

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	мЗакрытиеФормы = Истина;
	ПодключитьОбработчикОжидания("ПосчитатьВремяВызоваПоСтрокам",1);
	
	ЗаполнитьТаблицуПоНомеруГруппы(СписокГруппПереключатели);

КонецПроцедуры

&НаКлиенте
Процедура ТаблицаМониторингаНомерСтолаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекСтрокаМониторинга = Элементы.ТаблицаМониторинга.ТекущиеДанные;
	Если ТекСтрокаМониторинга = Неопределено Тогда
		Возврат;	
	КонецЕсли;
	Если ТекСтрокаМониторинга.Очки1 > 0 Или ТекСтрокаМониторинга.Очки2 > 0 Тогда
		Возврат;
	КонецЕсли; 
	
	//проверим по каждому участнику не вызван ли он уже
	Проверка1_1 = ПроверитьУчастникаНаВызовПоМониторингу(ТаблицаМониторинга.НайтиСтроки(Новый Структура("Участник1",ТекСтрокаМониторинга.Участник1)));
	Проверка1_2 = ПроверитьУчастникаНаВызовПоМониторингу(ТаблицаМониторинга.НайтиСтроки(Новый Структура("Участник2",ТекСтрокаМониторинга.Участник1)));
	
	Проверка2_1 = ПроверитьУчастникаНаВызовПоМониторингу(ТаблицаМониторинга.НайтиСтроки(Новый Структура("Участник2",ТекСтрокаМониторинга.Участник2)));
	Проверка2_2 = ПроверитьУчастникаНаВызовПоМониторингу(ТаблицаМониторинга.НайтиСтроки(Новый Структура("Участник2",ТекСтрокаМониторинга.Участник2)));
	
	Если Проверка1_1 Или Проверка1_2 Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.ИдентификаторНазначения = ЭтотОбъект.УникальныйИдентификатор;
		Сообщение.Текст = "Участник "+ТекСтрокаМониторинга.Участник1 + " уже вызыван за стол !";
		Сообщение.Сообщить(); 
	КонецЕсли; 
	Если Проверка2_1 Или Проверка2_2 Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.ИдентификаторНазначения = ЭтотОбъект.УникальныйИдентификатор;
		Сообщение.Текст = "Участник "+ТекСтрокаМониторинга.Участник2 + " уже вызыван за стол !";
		Сообщение.Сообщить(); 
	КонецЕсли; 
	
	//только когда все проверки в ЛОЖЬ, тогда можно взывать за стол
	Если Проверка1_1 = Ложь И Проверка1_2 = Ложь 
		И Проверка2_1 = Ложь И Проверка2_2 = Ложь Тогда
		СписокСвободныхСтолов = Новый СписокЗначений;
		Для М = 1 По КолСтолов Цикл
			СписокСвободныхСтолов.Добавить(М,"Стол № "+М);
		КонецЦикла;
		//посмотрим какие столы заняты
		Для каждого ТекСтр Из ТаблицаМониторинга Цикл 
			Если ТекСтр.НомерСтола = 0 Тогда
				Продолжить;
			КонецЕсли; 
			Искомый = СписокСвободныхСтолов.НайтиПоЗначению(ТекСтр.НомерСтола);
			Если Искомый <> Неопределено Тогда
				СписокСвободныхСтолов.Удалить(Искомый);	
			КонецЕсли; 
		КонецЦикла; 
		Если СписокСвободныхСтолов.Количество() = 0 Тогда
			ПоказатьПредупреждение(Неопределено, "Нет свободных столов!");
			Возврат;
		КонецЕсли;

		ПоказатьВыборИзСписка(Новый ОписаниеОповещения("ТаблицаМониторингаНомерСтолаНачалоВыбораИзСпискаЗавершение",
			ЭтотОбъект, Новый Структура("ТекСтрокаМониторинга", ТекСтрокаМониторинга)), СписокСвободныхСтолов, Элемент);
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Функция ПроверитьУчастникаНаВызовПоМониторингу(СтрокиМониторинга)
	
	УчастникВИгре = Ложь;
	
	Для Каждого ТекСтр Из СтрокиМониторинга Цикл
		Если ТекСтр.Очки1 = 0 И ТекСтр.Очки2 = 0 И ТекСтр.НомерСтола > 0 Тогда //вызван за стол и играет
			УчастникВИгре = Истина;
			Прервать;
		КонецЕсли; 
	КонецЦикла; 
	
	Возврат УчастникВИгре;
	
КонецФункции
 
&НаКлиенте
Процедура ТаблицаМониторингаНомерСтолаНачалоВыбораИзСпискаЗавершение(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
	
	ТекСтрокаМониторинга = ДополнительныеПараметры.ТекСтрокаМониторинга;
	
	ВыбранныйСтол = ВыбранныйЭлемент;
	Если ВыбранныйСтол <> Неопределено Тогда
		ТекСтрокаМониторинга.НомерСтола = ВыбранныйСтол.Значение;
		ТекСтрокаМониторинга.ВремяВызова = СерверныеСервер.ДатаСеанса();
		ДанныеДляВстреч = Новый Структура;
		ДанныеДляВстреч.Вставить("ИДФормы",Строка(ЭтотОбъект.УникальныйИдентификатор));
		ДанныеДляВстреч.Вставить("НомерСтола", ВыбранныйСтол.Значение);
		ДанныеДляВстреч.Вставить("Участник1",ТекСтрокаМониторинга.Участник1);
		ДанныеДляВстреч.Вставить("Участник2",ТекСтрокаМониторинга.Участник2);
		КлиентскиеКлиент.ОбработатьВызовЗаСтолТекущиеИгры(ДанныеДляВстреч);
		ВывестиАктивностьСтолов();
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ОчиститьТаблицуМониторинга(мНомерГруппы,НомерПорядковойИгры)
	
	//теперь очистим игру в таблице столов если она там есть
	МассивСтрокВТаблицеСтолов = ТаблицаМониторинга.НайтиСтроки(Новый Структура("НомерИгры,НомерГруппы",НомерПорядковойИгры,мНомерГруппы));
	Если МассивСтрокВТаблицеСтолов.Количество() > 0 Тогда
		//освобождаем стол
		СтрокаТаблицы = МассивСтрокВТаблицеСтолов[0];
		//СтрокаТаблицы.Участник1 = Неопределено;
		//СтрокаТаблицы.Участник2 = Неопределено;
		//СтрокаТаблицы.НомерИгры = 0;
		СтрокаТаблицы.НомерСтола = 0;
		СтрокаТаблицы.ВремяВызова = Дата('00010101');
		СтрокаТаблицы.ПрошлоСекунд = 0;
		СтрокаТаблицы.СколькоВремениПрошло = "";
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаСкрытьСписокИгр(Команда)
	Если Элементы.ТаблицаМониторинга.Видимость Тогда
		Элементы.ТаблицаМониторинга.Видимость = Ложь;
		Элементы.АктивностьСтолов.Видимость = Ложь;
	Иначе
		Элементы.ТаблицаМониторинга.Видимость = Истина;
		Элементы.АктивностьСтолов.Видимость = Истина;
		//ЗаполнитьМониторинг();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаМониторингаУчастник1НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ТекСтрока = Элементы.ТаблицаМониторинга.ТекущиеДанные;
	Если ТекСтрока <> Неопределено Тогда
		Если ЗначениеЗаполнено(ТекСтрока.Участник1) И ЗначениеЗаполнено(ТекСтрока.Участник2) Тогда
			СписокКоманд = ОбновитьКМБыстрогоВвода(ТекСтрока.Участник1,ТекСтрока.Участник2);
			ДанныеВыбора = СписокКоманд;
		КонецЕсли;			
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаМониторингаУчастник1ОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ТекСтрока = Элементы.ТаблицаМониторинга.ТекущиеДанные;
	Если ТекСтрока <> Неопределено Тогда
		Данные = Новый Структура;
		Данные.Вставить("ЗначениеСписка",ВыбранноеЗначение);
		Данные.Вставить("СсылкаИгрок1",ТекСтрока.Участник1);
		Данные.Вставить("СсылкаИгрок2",ТекСтрока.Участник2);
		Данные.Вставить("НомерИгры",ТекСтрока.НомерИгры);
		ОбработкаВыбораЗначенияИзКонтекстногоМеню(Данные);
		Если ТекСтрока.НомерСтола <> 0 Тогда
			ДанныеДляВстреч = Новый Структура;
			ДанныеДляВстреч.Вставить("ИДФормы",Строка(ЭтотОбъект.УникальныйИдентификатор));
			ДанныеДляВстреч.Вставить("НомерСтола", ТекСтрока.НомерСтола);
			КлиентскиеКлиент.ОбработатьВызовЗаСтолТекущиеИгры(ДанныеДляВстреч,Истина);
		КонецЕсли; 
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаМониторингаУчастник2НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ТекСтрока = Элементы.ТаблицаМониторинга.ТекущиеДанные;
	Если ТекСтрока <> Неопределено Тогда
		Если ЗначениеЗаполнено(ТекСтрока.Участник1) И ЗначениеЗаполнено(ТекСтрока.Участник2) Тогда
			ДанныеВыбора = ОбновитьКМБыстрогоВвода(ТекСтрока.Участник2,ТекСтрока.Участник1);
		КонецЕсли;			
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаМониторингаУчастник2ОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ТекСтрока = Элементы.ТаблицаМониторинга.ТекущиеДанные;
	Если ТекСтрока <> Неопределено Тогда
		Данные = Новый Структура;
		Данные.Вставить("ЗначениеСписка",ВыбранноеЗначение);
		Данные.Вставить("СсылкаИгрок1",ТекСтрока.Участник2);
		Данные.Вставить("СсылкаИгрок2",ТекСтрока.Участник1);
		Данные.Вставить("НомерИгры",ТекСтрока.НомерИгры);
		ОбработкаВыбораЗначенияИзКонтекстногоМеню(Данные);
		Если ТекСтрока.НомерСтола <> 0 Тогда
			ДанныеДляВстреч = Новый Структура;
			ДанныеДляВстреч.Вставить("ИДФормы",Строка(ЭтотОбъект.УникальныйИдентификатор));
			ДанныеДляВстреч.Вставить("НомерСтола", ТекСтрока.НомерСтола);
			КлиентскиеКлиент.ОбработатьВызовЗаСтолТекущиеИгры(ДанныеДляВстреч,Истина);
		КонецЕсли; 
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Функция ОбновитьКМБыстрогоВвода(парУчастник1,парУчастник2)
	
	мСписок = Новый СписокЗначений;
	Пробел10 = "          ";
	МаксимумПартий = ОпределитьКолПартий();
	//1 вариант
	Для М = 0 По МаксимумПартий-1 Цикл		
		мСписок.Добавить("1_"+М,Строка(парУчастник1)+" "+МаксимумПартий+":"+М+" "+Строка(парУчастник2)+Пробел10);
	КонецЦикла;
	мСписок.Добавить("1_W",Строка(парУчастник1)+" W/L "+Строка(парУчастник2)+Пробел10);
	мСписок.Добавить("9"," ");
	//2 вариант
	Для М = 0 По МаксимумПартий-1 Цикл
		мСписок.Добавить("2_"+М,Строка(парУчастник2)+" "+МаксимумПартий+":"+М+" "+Строка(парУчастник1)+Пробел10);
	КонецЦикла; 
	мСписок.Добавить("2_W",Строка(парУчастник2)+" W/L "+Строка(парУчастник1)+Пробел10);
	
	Возврат мСписок;
	
КонецФункции

&НаКлиенте
Процедура ОбработкаВыбораЗначенияИзКонтекстногоМеню(Данные)
	
	//разберем значение из списка
	//Y_X, где Y - номер участника, первый или второй по переданному параметру
	//X - количество партий выигранных
	//например: передаем в функция (Иванов, Петров)
	//1_2 Иванов 3:2 Петров
	//Иванов это 1 параметр
	//петров это 2 параметр
	//на выходе получаем, что Петров выиграл у Иванова 2 партии
	ВариантИзСписка	= Данные.ЗначениеСписка;//значение списка значений из контекстного меню
	СсылкаИгрок1			= Данные.СсылкаИгрок1;
	СсылкаИгрок2			= Данные.СсылкаИгрок2;
	
	ЗначениеВыбора 			= ВариантИзСписка;
	НомерПараметра 			= Число(Лев(ЗначениеВыбора,1));
	Если НомерПараметра = 9 Тогда
		Возврат;
	КонецЕсли; 
	КолВыигранныхПартий	= Прав(ЗначениеВыбора,1);
	Если НомерПараметра = 1 Тогда
		перемВыигравший 		= СсылкаИгрок1;
		перемПроигравший	= СсылкаИгрок2;
	Иначе
		перемВыигравший 		= СсылкаИгрок2;
		перемПроигравший	= СсылкаИгрок1;
	КонецЕсли;
	Если КолВыигранныхПартий = "W" Тогда
		ВИтог = ОпределитьКолПартий();
		ПИтог = 0;
		ВТехническое = Ложь;				
		ПТехническое = Истина;
	Иначе
		ВИтог = ОпределитьКолПартий();
		ПИтог = КолВыигранныхПартий;
		ВТехническое = Ложь;				
		ПТехническое = Ложь;
	КонецЕсли; 
	
	ЭтотОбъект.Модифицированность = Истина;
	ТЧДока = ТаблицаОбщихДанных;
	//попробуем найти эту пару
	Отбор = Новый Структура;                               
	Отбор.Вставить("Выигравший",перемВыигравший);
	Отбор.Вставить("Проигравший",перемПроигравший);
	Отбор.Вставить("НомерТура",НомерТура);
	Отбор.Вставить("НомерГруппы",глТекГруппа);
	ИскомыеСтроки = ТЧДока.НайтиСтроки(Отбор);
	Если ИскомыеСтроки.Количество() > 0 Тогда //строки уже есть перезаполняем
		Для Каждого ТекСтрока Из ИскомыеСтроки Цикл
			ТЧДока.Удалить(ТЧДока.Индекс(ТекСтрока));
		КонецЦикла;
	ИначеЕсли ИскомыеСтроки.Количество() = 0 Тогда
		///попробуем другой вариант вдруг выигравший изменился
		Отбор = Новый Структура;                               
		Отбор.Вставить("Выигравший",перемПроигравший);
		Отбор.Вставить("Проигравший",перемВыигравший);
		Отбор.Вставить("НомерТура",НомерТура);
		Отбор.Вставить("НомерГруппы",глТекГруппа);
		ИскомыеСтроки = ТЧДока.НайтиСтроки(Отбор);
		Если ИскомыеСтроки.Количество() > 0 Тогда //строки уже есть перезаполняем
			Для Каждого ТекСтрока Из ИскомыеСтроки Цикл
				ТЧДока.Удалить(ТЧДока.Индекс(ТекСтрока));
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	НовСтрока = ТЧДока.Добавить();
	НовСтрока.РежимТура = РежимТура;
	НовСтрока.НомерТура = НомерТура;
	НовСтрока.НомерГруппы = глТекГруппа;
	НовСтрока.НомерСета = 1;
	НовСтрока.Выигравший  = перемВыигравший;
	НовСтрока.Проигравший = перемПроигравший;
	НовСтрока.КолШаров	   = 0;
	НовСтрока.ОчкиВыигравшего = ВИтог;
	НовСтрока.ОчкиПроигравшего= ПИтог;
	НовСтрока.ТехническоеВ = ВТехническое;
	НовСтрока.ТехническоеП = ПТехническое; 
	
	ТекСтрокаМониторинга = Элементы.ТаблицаМониторинга.ТекущиеДанные;
	Если ТекСтрокаМониторинга <> Неопределено Тогда
		Если ТекСтрокаМониторинга.Участник1 = перемВыигравший Тогда
			ТекСтрокаМониторинга.Очки1 = ВИтог;
			ТекСтрокаМониторинга.Очки2 = ПИтог;
		Иначе
			ТекСтрокаМониторинга.Очки2 = ВИтог;
			ТекСтрокаМониторинга.Очки1 = ПИтог;
		КонецЕсли; 
		ТекСтрокаМониторинга.ТехническоеВ						= Ложь;
		ТекСтрокаМониторинга.ТехническоеП						= Ложь;
		ТекСтрокаМониторинга.НомерСтола							= 0;
		ТекСтрокаМониторинга.ВремяВызова						= Дата('00010101');
		ТекСтрокаМониторинга.ПрошлоСекунд						= 0;
		ТекСтрокаМониторинга.СколькоВремениПрошло	= "";
	КонецЕсли; 
	
	ВыполнитьПроцедурыПослеЗаписи(Данные.НомерИгры);
	
	СписокГруппПереключателиПриИзменении(Элементы.СписокГруппПереключатели);
	
	ВывестиАктивностьСтолов();
	
КонецПроцедуры

&НаСервере
Процедура ВыполнитьПроцедурыПослеЗаписи(мНомерИгры)
		
	ДанныеПоАдресам = ОбновитьАдресаТаблицНаСервере(ТаблицаОбщихДанных,ТаблицаГруппы,ЭтотОбъект.УникальныйИдентификатор);
	АдресОбщейТаблицыДанных		= ДанныеПоАдресам.АдресОбщейТаблицыДанных;
	АдресКопииТаблицыГрупп			= ДанныеПоАдресам.АдресКопииТаблицыГрупп;
	
	ОчиститьТаблицуМониторинга(глТекГруппа,мНомерИгры);
		
КонецПроцедуры

#Область Активность_Столов

&НаСервере
Процедура ВывестиАктивностьСтолов()
	
	Если СсылкаНаСоревнование.КолСтолов > 0 Тогда
		
		КолПоГоризонтали = Константы.КоличествоСтоловПоГоризонтали.Получить();
		Если КолПоГоризонтали = 0 Тогда
			КолПоГоризонтали = 5;
		КонецЕсли; 
		
		АктивностьСтолов.Очистить();
		
		Макет = Документы.ПроведениеСоревнования.ПолучитьМакет("МониторСтолов");
		
		КопияУчастников = СсылкаНаСоревнование.УчастникиПоЖеребьевке.Выгрузить(Новый Структура("НомерТура,РежимТура",НомерТура,РежимТура),"НомерСтроки,Участник,НомерГруппы");
		СчУч = 1;
		СчГр = 1;
		Для Каждого ТекСтр Из КопияУчастников Цикл
			Если ТекСтр.НомерГруппы = СчГр Тогда
				ТекСтр.НомерСтроки = СчУч;
				СчУч = СчУч +1;
			Иначе
				СчГр = ТекСтр.НомерГруппы;
				СчУч = 1;
				ТекСтр.НомерСтроки = СчУч;
				СчУч = СчУч +1;
			КонецЕсли; 
		КонецЦикла; 
		
		пСчСтолов = 0;
		Для мСтол = 1 По КолСтолов Цикл
			
			пСчСтолов = пСчСтолов + 1;
			ИскомаяИграВМониторинге = ТаблицаМониторинга.НайтиСтроки(Новый Структура("НомерСтола",мСтол));
			
			ОбластьСтола = Макет.ПолучитьОбласть("ГоризонтальСтол | ВертикальСтол");
			ОбластьСтола.Параметры.НомерСтола		= мСтол;
			
			Если ИскомаяИграВМониторинге.Количество() > 0 Тогда// игра есть
				ОбластьСтола.Параметры.НомерГруппы	= "Гр. № "+ИскомаяИграВМониторинге[0].НомерГруппы;
				
				мПар1 	= КопияУчастников.Найти(ИскомаяИграВМониторинге[0].Участник1).НомерСтроки;
				мПар2	= КопияУчастников.Найти(ИскомаяИграВМониторинге[0].Участник2).НомерСтроки;
				
				Если мПар2 > мПар1 Тогда
					ОбластьСтола.Параметры.НомерУч1			= мПар1;
					ОбластьСтола.Параметры.Участник1			= ОбщийКлиентСервер.СформироватьИмяИгрока(ИскомаяИграВМониторинге[0].Участник1.Наименование);
					ОбластьСтола.Параметры.НомерУч2			= мПар2;
					ОбластьСтола.Параметры.Участник2			= ОбщийКлиентСервер.СформироватьИмяИгрока(ИскомаяИграВМониторинге[0].Участник2.Наименование);
				Иначе
					ОбластьСтола.Параметры.НомерУч1			= мПар2;
					ОбластьСтола.Параметры.Участник1			= ОбщийКлиентСервер.СформироватьИмяИгрока(ИскомаяИграВМониторинге[0].Участник2.Наименование);
					ОбластьСтола.Параметры.НомерУч2			= мПар1;
					ОбластьСтола.Параметры.Участник2			= ОбщийКлиентСервер.СформироватьИмяИгрока(ИскомаяИграВМониторинге[0].Участник1.Наименование);
				КонецЕсли; 
			КонецЕсли; 
			
			Если пСчСтолов = КолПоГоризонтали Тогда
				АктивностьСтолов.Присоединить(ОбластьСтола);
				пСчСтолов = 0;
			Иначе
				Если пСчСтолов = 1 Тогда
					АктивностьСтолов.Вывести(ОбластьСтола);
				Иначе
					АктивностьСтолов.Присоединить(ОбластьСтола);
				КонецЕсли; 
			КонецЕсли; 
			
		КонецЦикла; 
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура АктивностьСтоловОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка, ДополнительныеПараметры)
	
	//Расшифровка - это номер стола
	СтандартнаяОбработка = Ложь;
	Если Расшифровка > 0 Тогда
		ИскомыеДанныеВМониторинге = ТаблицаМониторинга.НайтиСтроки(Новый Структура("НомерСтола",Расшифровка));
		Если ИскомыеДанныеВМониторинге.Количество() > 0 Тогда
			
			Элементы.ТаблицаМониторинга.ТекущаяСтрока = ИскомыеДанныеВМониторинге[0].ПолучитьИдентификатор();
						
		КонецЕсли; 
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти 

&НаКлиенте
Процедура ТабличныйДокументГруппОбработкаДополнительнойРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка, ДополнительныеПараметры)
	
	 //НомерГруппы#НомерУч1#НомерУч2
	 Если СтрНайти(Расшифровка, "#") > 0 Тогда
		 
		 СтандартнаяОбработка = Ложь;
		 
		 ДанныеРасшифровки = РазобратьРасшифровку(Расшифровка, РасчетнаяТаблица);
		 
		 ГруппаРасшифровки 		= ДанныеРасшифровки.НомерГруппы;
		 НомерУч1Расшифровки 	= ДанныеРасшифровки.НомерУч1;
		 НомерУч2Расшифровки 	= ДанныеРасшифровки.НомерУч2;
		 
		 ИскомыйУчастник1 = ДанныеРасшифровки.Участник1;
		 ИскомыйУчастник2 = ДанныеРасшифровки.Участник2;
		 
		 ТекЗначение = Элемент.ТекущаяОбласть.Текст;
		 
		 Если ТекЗначение = "2" Или ТекЗначение = "" Тогда //по этой строке выигравший
			 ВыигравшийИгрок	= ИскомыйУчастник1;
			 НомерВ						= НомерУч1Расшифровки;
			 ПроигравшийИгрок = ИскомыйУчастник2;
			 НомерП						= НомерУч2Расшифровки;
		 ИначеЕсли ТекЗначение = "1" Или ТекЗначение = "0" Тогда //тогда эта строка проигравший
			 ПроигравшийИгрок = ИскомыйУчастник1;
			 НомерП						= НомерУч1Расшифровки;
			 ВыигравшийИгрок  = ИскомыйУчастник2;
			 НомерВ						= НомерУч2Расшифровки;
		 КонецЕсли;
		 
		 ДляЗаполненияРезультата = ОбщийКлиентСервер.ШаблонСтруктураДляВыбораРезультата();
		 ДляЗаполненияРезультата.НомерТура 			= НомерТура;
		 ДляЗаполненияРезультата.НомерГруппы 		= ГруппаРасшифровки;
		 ДляЗаполненияРезультата.Выигравший			= ВыигравшийИгрок;
		 ДляЗаполненияРезультата.Проигравший		= ПроигравшийИгрок;
		 ДляЗаполненияРезультата.НомерВ					= НомерВ;
		 ДляЗаполненияРезультата.НомерП					= НомерП;
		 ДляЗаполненияРезультата.АдресОбщейТаблицы = АдресОбщейТаблицыДанных;
		 ДляЗаполненияРезультата.КолПартий			= КолПартий;
		 
		 ОткрытьФорму("Документ.ПроведениеСоревнования.Форма.ВыборРезультата",ДляЗаполненияРезультата,ЭтотОбъект,УникальныйИдентификатор,,,
		 	Новый ОписаниеОповещения("ПослеЗакрытияФормыВыбораРезультата",ЭтотОбъект));
	 КонецЕсли; 
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция РазобратьРасшифровку(парРасшифровка, РасчетнаяТаблица)
	
	ДанныеВМассиве = СтрРазделить(парРасшифровка,"#");
	ГруппаРасшифровки 	= Число(ДанныеВМассиве[0]);
	НомерУч1Расшифровки 	= Число(ДанныеВМассиве[1]);
	НомерУч2Расшифровки 	= Число(ДанныеВМассиве[2]);
	
	ВозвратДанных = Новый Структура;
	ВозвратДанных.Вставить("НомерГруппы", ГруппаРасшифровки);
	ВозвратДанных.Вставить("НомерУч1", НомерУч1Расшифровки);
	ВозвратДанных.Вставить("НомерУч2", НомерУч2Расшифровки);
	
	ИскомыйУчастник1 = РасчетнаяТаблица.НайтиСтроки(Новый Структура("НомерУчастника,НомерГруппы", НомерУч1Расшифровки, ГруппаРасшифровки));
	Если ИскомыйУчастник1.Количество() > 0 Тогда
		ИскомыйУчастник1 = ИскомыйУчастник1[0].Участник;
	Иначе
		ИскомыйУчастник1 = ПредопределенноеЗначение("Справочник.Участники.ПустаяСсылка");
	КонецЕсли; 
	
	ИскомыйУчастник2 = РасчетнаяТаблица.НайтиСтроки(Новый Структура("НомерУчастника,НомерГруппы", НомерУч2Расшифровки, ГруппаРасшифровки));
	Если ИскомыйУчастник2.Количество() > 0 Тогда
		ИскомыйУчастник2 = ИскомыйУчастник2[0].Участник;
	Иначе
		ИскомыйУчастник2 = ПредопределенноеЗначение("Справочник.Участники.ПустаяСсылка");
	КонецЕсли; 
	
	ВозвратДанных.Вставить("Участник1", ИскомыйУчастник1);
	ВозвратДанных.Вставить("Участник2", ИскомыйУчастник2);
	
	Возврат ВозвратДанных;
	
КонецФункции 

&НаКлиенте
Процедура ТабличныйДокументГруппПриИзмененииСодержимогоОбласти(Элемент, Область)
	
	ВведенноеЗначение 	= Область.Значение;
	ДанныеРасшифровки 	= РазобратьРасшифровку(Область.Расшифровка, РасчетнаяТаблица);
	
	//варианты ввода
	//мы вводим это количество всегда выигравшему
	//0,1,2,3 - это кол. партий которые участник проиграл (т.е. в итоге он выиграл)
	//Т - русская, техническое поражение
	//-0,-1,-2,-3 - это кол. партий которые участник выиграл (т.е. в итоге он проиграл)
	
	СколькоДолжноБытьПартий = ОбщийКлиентСервер.ОпределитьКолПартий(КолПартий);
	//участники
	ВыигравшийУчастник 	= ДанныеРасшифровки.Участник1;
	ПроигравшийУчастник 	= ДанныеРасшифровки.Участник2;
	
	Если ВРег(ВведенноеЗначение) = "Т"  Тогда
		ИтогВ = СколькоДолжноБытьПартий;
		ИтогП = 0;
		ТехВ = Ложь;
		ТехП = Истина;
	Иначе
		ПервыйСимвол = Лев(ВведенноеЗначение, 1);
		Если ПервыйСимвол = "-" Тогда 
			ОтрицательноеЧисло = Истина;
		Иначе
			ОтрицательноеЧисло = Ложь;
		КонецЕсли; 
		ВведенноеЗначение = Число(ВведенноеЗначение);
		Если ВведенноеЗначение >= СколькоДолжноБытьПартий 
			Или -ВведенноеЗначение >= СколькоДолжноБытьПартий Тогда
			ДопКол = "";
			Если КолПартий = 3 Тогда
				ДопКол = "0 или 1";
			ИначеЕсли КолПартий = 5 Тогда
				ДопКол = "0,1 или 2";
			ИначеЕсли КолПартий = 7 Тогда
				ДопКол = "0,1,2 или 3";
			КонецЕсли;
			ПоказатьПредупреждение(Новый ОписаниеОповещения("ПослеВводаЗначенияВТабДок", ЭтотОбъект, Область), "Количество проигранных партий может быть равно "+ДопКол);
			Возврат;
		КонецЕсли;
		//определим какое кол. партий будем ставить
		ИтогВ = СколькоДолжноБытьПартий;
		ИтогП = ВведенноеЗначение;
		Если ОтрицательноеЧисло Тогда
			//нужно поменять участников
			втВыигравший = ВыигравшийУчастник;
			втПроигравший = ПроигравшийУчастник;
			втИтогВ = ИтогВ;
			втИтогП = -ВведенноеЗначение;
			//меняем все
			ВыигравшийУчастник = втПроигравший;
			ПроигравшийУчастник = втВыигравший;
			ИтогВ = втИтогВ;
			ИтогП = втИтогП;
		КонецЕсли; 
		ТехВ = Ложь;
		ТехП = Ложь;
	КонецЕсли;
	
	ЭтотОбъект.Модифицированность = Истина;
	ТЧДока = ТаблицаОбщихДанных;
	//попробуем найти эту пару
	Отбор = Новый Структура;                               
	Отбор.Вставить("Выигравший",ВыигравшийУчастник);
	Отбор.Вставить("Проигравший",ПроигравшийУчастник);
	Отбор.Вставить("НомерТура",НомерТура);
	Отбор.Вставить("НомерГруппы",ДанныеРасшифровки.НомерГруппы);
	ИскомыеСтроки = ТЧДока.НайтиСтроки(Отбор);
	Если ИскомыеСтроки.Количество() > 0 Тогда //строки уже есть перезаполняем
		Для Каждого ТекСтрокаИскомая Из ИскомыеСтроки Цикл
			ТЧДока.Удалить(ТЧДока.Индекс(ТекСтрокаИскомая));
		КонецЦикла;
	ИначеЕсли ИскомыеСтроки.Количество() = 0 Тогда
		///попробуем другой вариант вдруг выигравший изменился
		Отбор = Новый Структура;                               
		Отбор.Вставить("Выигравший",ПроигравшийУчастник);
		Отбор.Вставить("Проигравший",ВыигравшийУчастник);
		Отбор.Вставить("НомерТура",НомерТура);
		Отбор.Вставить("НомерГруппы",ДанныеРасшифровки.НомерГруппы);
		ИскомыеСтроки = ТЧДока.НайтиСтроки(Отбор);
		Если ИскомыеСтроки.Количество() > 0 Тогда //строки уже есть перезаполняем
			Для Каждого ТекСтрокаИскомая Из ИскомыеСтроки Цикл
				ТЧДока.Удалить(ТЧДока.Индекс(ТекСтрокаИскомая));
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	НовСтрока = ТЧДока.Добавить();
	НовСтрока.РежимТура = РежимТура;
	НовСтрока.НомерТура = НомерТура;
	НовСтрока.НомерГруппы = ДанныеРасшифровки.НомерГруппы;
	НовСтрока.НомерСета = 0;
	НовСтрока.Выигравший  = ВыигравшийУчастник;
	НовСтрока.Проигравший = ПроигравшийУчастник;
	НовСтрока.КолШаров	   = 0;
	НовСтрока.ОчкиВыигравшего = ИтогВ;
	НовСтрока.ОчкиПроигравшего= ИтогП;
	НовСтрока.ТехническоеВ = ТехВ;
	НовСтрока.ТехническоеП = ТехП; 
	
	ПроставитьЗначенияПоМониторингу(ТаблицаМониторинга,ВыигравшийУчастник,ПроигравшийУчастник,ИтогВ,ИтогП,ТехВ,ТехП);
	ВывестиАктивностьСтолов();
	ОбновитьАдресаТаблиц();
	ЗаполнитьТаблицуПоНомеруГруппы(СписокГруппПереключатели);
	
	//КолУчастников = ТаблицаПартийПоГруппе.Количество();
	//СледНомКолонки = Число(НомКолонкиЭл)+1;
	//Если СледНомКолонки <= КолУчастников Тогда
	//	Элементы.ТаблицаГруппы.ТекущаяСтрока = ТаблицаГруппы.Получить(ИндексТекСтроки).ПолучитьИдентификатор();
	//	ЭтотОбъект.ТекущийЭлемент = Элементы["ТаблицаГруппыКолонкаИгры"+СледНомКолонки];
	//Иначе
	//	//переходим на след. строчку
	//	//ИндексТекСтроки = ТаблицаПартийПоГруппе.Индекс(ТекСтрока);
	//	Если КолУчастников > (ИндексТекСтроки+1) Тогда //переходим
	//		СледСтрока = ТаблицаПартийПоГруппе.Получить(ИндексТекСтроки+1); 
	//		Элементы.ТаблицаГруппы.ТекущаяСтрока = СледСтрока.ПолучитьИдентификатор();
	//		//и переходим на не занятую колонку
	//		ДелатьПереход = Истина;
	//		Если СледНомКолонки <= КолУчастников Тогда
	//			ДелатьПереход = Ложь;
	//		КонецЕсли;
	//		Пока ДелатьПереход Цикл
	//			//получаем значение первой колонки
	//			Для Кол = 1 По КолУчастников Цикл
	//				Если Не ЗначениеЗаполнено(СледСтрока["КолонкаИгры"+Кол]) Тогда
	//					ДелатьПереход = Ложь;
	//					ЭтотОбъект.ТекущийЭлемент  = Элементы["ТаблицаГруппыКолонкаИгры"+Кол];
	//					Прервать;
	//				ИначеЕсли Кол = КолУчастников Тогда
	//					ДелатьПереход = Ложь;
	//					Прервать;//все значения заполнены
	//				КонецЕсли;
	//			КонецЦикла;
	//		КонецЦикла;
	//	КонецЕсли;
	//КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВводаЗначенияВТабДок(ДопПараметры) Экспорт
	
	ДопПараметры.Значение = "";	
	
КонецПроцедуры

&НаКлиенте
Процедура СписокГруппПереключателиПриИзменении(Элемент)
	
	ЗаполнитьТаблицуПоНомеруГруппы(СписокГруппПереключатели);
	
	Если СписокГруппПереключатели = 99 И Элементы.ТаблицаМониторингаНомерГруппы.Видимость = Ложь Тогда
		Элементы.ТаблицаМониторингаНомерГруппы.Видимость = Истина;
	Иначе
		Если Элементы.ТаблицаМониторингаНомерГруппы.Видимость Тогда
			Элементы.ТаблицаМониторингаНомерГруппы.Видимость = Ложь	
		КонецЕсли; 
	КонецЕсли; 
	
	Если Элементы.СписокГруппПереключатели.СписокВыбора.Количество()  > 1 Тогда
		ПодключитьОбработчикОжидания("ФильтроватьТаблицуМониторинга",0.1,Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТабличныйДокументГруппОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка, ДополнительныеПараметры)
	Если СтрНайти(Расшифровка,"#") > 0 Или СтрНайти(Расшифровка,"Группа_") > 0 Тогда
		СтандартнаяОбработка = Ложь;
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ТабличныйДокументГруппПриАктивизации(Элемент)
	
	Попытка
		ЗначениеРасшф = Элемент.ТекущаяОбласть.Расшифровка;
		Если ЗначениеЗаполнено(ЗначениеРасшф) Тогда
			Если СтрНачинаетсяС(ЗначениеРасшф,"Группа_") Тогда
				НомерГруппыДляУдаления = Число(СтрЗаменить(ЗначениеРасшф,"Группа_",""));
			Иначе
				НомерГруппыДляУдаления = 0;
			КонецЕсли; 
		КонецЕсли; 
	Исключение
		ОбщийКлиентСервер.СообщитьПользователю(ОписаниеОшибки(), "", Неопределено);
	КонецПопытки; 
	
КонецПроцедуры
