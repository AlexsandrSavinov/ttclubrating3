
Процедура ПроверкаНаНовуюВерсиюПрограммы() Экспорт
	
	мТекВерсияИБ = Константы.ТекущаяВерсияПрограммы.Получить();
	Если мТекВерсияИБ = "" Тогда //первый запуск
		мНомерОбновленияПрограммы = 14;
	Иначе
		мНомерВерсииПрограммы = ОбщийКлиентСервер.ВыделитьСлово(мТекВерсияИБ,".");
		мНомерОбновленияПрограммы = Число(ОбщийКлиентСервер.ВыделитьСлово(мТекВерсияИБ,"."));
	КонецЕсли;
	
	ВерсияКонфигурации = Метаданные.Версия;
	мНомерВерсииКонф = ОбщийКлиентСервер.ВыделитьСлово(ВерсияКонфигурации,".");
	мНомерОбновленияКонф = Число(ОбщийКлиентСервер.ВыделитьСлово(ВерсияКонфигурации,"."));
	Если мНомерВерсииКонф = "1." Тогда
		Если мНомерОбновленияПрограммы < мНомерОбновленияКонф Тогда
			Для НомОбнов = мНомерОбновленияПрограммы По мНомерОбновленияКонф Цикл
				НазваниеПроцедуры = "ВыполнитьОбновлениеПрограммыНа"+НомОбнов+"Версию()";
				Попытка
					Выполнить(НазваниеПроцедуры);
				Исключение
				КонецПопытки; 
			КонецЦикла;
			Константы.ТекущаяВерсияПрограммы.Установить(Метаданные.Версия);
		КонецЕсли; 
	ИначеЕсли мНомерВерсииКонф = "2." Тогда
		Если мНомерОбновленияКонф = 1 И мНомерОбновленияКонф <> мНомерОбновленияПрограммы Тогда //первая версия
			Константы.ТекущаяВерсияПрограммы.Установить(Метаданные.Версия);
		Иначе
			Если мНомерОбновленияПрограммы < мНомерОбновленияКонф Тогда
				Для НомОбнов = мНомерОбновленияПрограммы По мНомерОбновленияКонф Цикл
					НазваниеПроцедуры = "ВыполнитьОбновлениеПрограммыВерсия2На"+НомОбнов+"Версию()";
					Попытка
						Выполнить(НазваниеПроцедуры);
					Исключение
						//Процедура или функция с указанным именем не определена (ВыполнитьОбновлениеПрограммыВерсия2На5Версию)
						ТекстОшибки = ОписаниеОшибки();
						Если СтрНайти(ТекстОшибки,"Процедура или функция с указанным именем не определена") = 0 Тогда
							Сообщение = Новый СообщениеПользователю;
							Сообщение.Текст = ТекстОшибки;
							Сообщение.Сообщить(); 
						КонецЕсли; 
					КонецПопытки; 
				КонецЦикла;
				Константы.ТекущаяВерсияПрограммы.Установить(Метаданные.Версия);
			КонецЕсли; 
		КонецЕсли; 
	КонецЕсли; 
	
КонецПроцедуры

#Область ОбновленияПервойВерсии

Процедура ВыполнитьОбновлениеПрограммыНа14Версию()
	
	//нужно перебрать все документы и перезаписать их установив
	//Общий режим соревнований
	Выборка = Документы.ПроведениеСоревнования.Выбрать();
	Пока Выборка.Следующий() Цикл
		ТекОбъект = Выборка.Ссылка.ПолучитьОбъект();
		Если ТекОбъект.РежимБыстрогоРасчета Тогда
			ТекОбъект.ОбщийРежимСоревнования = 1;
		Иначе
			ТекОбъект.ОбщийРежимСоревнования = 0;
		КонецЕсли;
		//больше пока никаких варантов расчет не было
		Если ТекОбъект.Проведен Тогда
			ТекОбъект.Записать(РежимЗаписиДокумента.Проведение);
		Иначе
			ТекОбъект.Записать(РежимЗаписиДокумента.Запись);//проводить не будем
		КонецЕсли; 
	КонецЦикла; 
	
	//перезаполним
	Набор = РегистрыСведений.ПорядокИгр.ЗагрузитьПорядокИгрВМодуле();
	Набор.Записать();
	
КонецПроцедуры

Процедура ВыполнитьОбновлениеПрограммыНа15Версию()
	
	//перезаписать все документы с быстрым расчетом
	//перерасчет детальных таблиц для аналитики
	Выборка = Документы.ПроведениеСоревнования.Выбрать();
	Пока Выборка.Следующий() Цикл
		Если Выборка.Ссылка.ОбщийРежимСоревнования = 1 Тогда
			ТекОбъект = Выборка.Ссылка.ПолучитьОбъект();
			//больше пока никаких варантов расчет не было
			Если ТекОбъект.Проведен Тогда
				ТекОбъект.Записать(РежимЗаписиДокумента.Проведение);
			Иначе
				ТекОбъект.Записать(РежимЗаписиДокумента.Запись);//проводить не будем
			КонецЕсли; 
		КонецЕсли;
	КонецЦикла; 
	
КонецПроцедуры

Процедура ВыполнитьОбновлениеПрограммыНа16Версию()
	//перезаполним дополнился для прогрессивки
	Набор = РегистрыСведений.ПорядокИгр.ЗагрузитьПорядокИгрВМодуле();
	Набор.Записать();
КонецПроцедуры

Процедура ВыполнитьОбновлениеПрограммыНа17Версию()
	
	Справочники.ЖеребьевкаКоманд.ЗаполнитьШаблоныЖеребьевок();
	
КонецПроцедуры

Процедура ВыполнитьОбновлениеПрограммыНа18Версию()
	
	Справочники.ЖеребьевкаКоманд.ЗаполнитьШаблоныЖеребьевок();
	ВыборкаСоревнований = Документы.ПроведениеСоревнования.Выбрать();
	Пока ВыборкаСоревнований.Следующий() Цикл
		Если ВыборкаСоревнований.ОбщийРежимСоревнования = 2 Тогда
			мОбъект = ВыборкаСоревнований.Ссылка.ПолучитьОбъект();
			мОбъект.Записать(РежимЗаписиДокумента.Запись);				
		КонецЕсли; 
	КонецЦикла; 
	Константы.КоличествоУчастниковДляПодсчетаСреднегоРейтинга.Установить(3);
	
КонецПроцедуры

Процедура ВыполнитьОбновлениеПрограммыНа20Версию()
	
	ВыборкаСоревнований = Документы.ПроведениеСоревнования.Выбрать();
	Пока ВыборкаСоревнований.Следующий() Цикл
		Если ВыборкаСоревнований.ОбщийРежимСоревнования = 2 И ВыборкаСоревнований.Ссылка.Проведен Тогда
			мОбъект = ВыборкаСоревнований.Ссылка.ПолучитьОбъект();
			мОбъект.Записать(РежимЗаписиДокумента.Проведение);				
		КонецЕсли; 
	КонецЦикла; 
	Справочники.ЖеребьевкаКоманд.ЗаполнитьШаблоныЖеребьевок();
	
КонецПроцедуры

Процедура ВыполнитьОбновлениеПрограммыНа22Версию()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Участники.Ссылка
	|ИЗ
	|	Справочник.Участники КАК Участники
	|ГДЕ
	|	Участники.ЭтоГруппа = ЛОЖЬ
	|	И Участники.ПометкаУдаления = ЛОЖЬ";
	Результат = Запрос.Выполнить().Выгрузить();
	Для каждого ТекСтр Из Результат Цикл
		мОБъект = ТекСтр.Ссылка.ПолучитьОбъект();
		мОБъект.ТренерыСписком = СерверныеСервер.ПолучитьТренеровУчастникаСписком(ТекСтр.Ссылка);
		мОБъект.Записать();
	КонецЦикла; 
	
	Константы.НеРассчитыватьРейтингПриВстречеМужчиныИЖенщины.Установить(Истина);
	
	
КонецПроцедуры

Процедура ВыполнитьОбновлениеПрограммыНа23Версию()
	
	Выборка = Документы.ПроведениеСоревнования.Выбрать();
	Пока Выборка.Следующий() Цикл
		Если Выборка.ПометкаУдаления Тогда
			Продолжить;
		КонецЕсли; 
		Попытка
			втОбъект = Выборка.ПолучитьОбъект();
			втОбъект.Записать(РежимЗаписиДокумента.Проведение);
		Исключение
			//ОписаниеОшибки()
		КонецПопытки; 
	КонецЦикла; 
	Набор = РегистрыСведений.ПорядокИгр.ЗагрузитьПорядокИгрВМодуле();
	Набор.Записать();
	
КонецПроцедуры

Процедура ВыполнитьОбновлениеПрограммыНа27Версию()
	
	Выборка = Документы.ПроведениеСоревнования.Выбрать();
	Пока Выборка.Следующий() Цикл
		Если Выборка.ПометкаУдаления Тогда
			Продолжить;
		КонецЕсли; 
		Если Выборка.ОбщийРежимСоревнования = 0 Тогда
			Попытка
				втОбъект = Выборка.ПолучитьОбъект();
				втОбъект.Записать(РежимЗаписиДокумента.Проведение);
			Исключение
				//ОписаниеОшибки()
			КонецПопытки; 
		КонецЕсли; 
	КонецЦикла; 
	
КонецПроцедуры

Процедура ВыполнитьОбновлениеПрограммыНа28Версию()  
	
	Сообщение = Новый СообщениеПользователю;
	Сообщение.Текст = "Пожалуйста подождите, производится перезапись мест участников "+ТекущаяДата();
	Сообщение.Сообщить(); 
	
	Выборка = Документы.ПроведениеСоревнования.Выбрать();
	Пока Выборка.Следующий() Цикл
		Если Выборка.ПометкаУдаления Тогда
			Продолжить;
		КонецЕсли; 
		Если Выборка.ОбщийРежимСоревнования = 0 Тогда
			Попытка
				втОбъект = Выборка.ПолучитьОбъект();
				втОбъект.Записать(РежимЗаписиДокумента.Проведение);
			Исключение
				//ОписаниеОшибки()
			КонецПопытки; 
		КонецЕсли; 
	КонецЦикла; 
	Сообщение = Новый СообщениеПользователю;
	Сообщение.Текст = "Расчет закончен "+ТекущаяДата();
	Сообщение.Сообщить(); 
	
КонецПроцедуры

#КонецОбласти 

#Область ОбновлениеВторойВерсии

Процедура ВыполнитьОбновлениеПрограммыВерсия2На2Версию()  
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ПрисвоитьРазряд.Ссылка
	|ИЗ
	|	Документ.ПрисвоитьРазряд КАК ПрисвоитьРазряд
	|ГДЕ
	|	ПрисвоитьРазряд.ПометкаУдаления = ЛОЖЬ";
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		Попытка
			втОбъект = Выборка.Ссылка.ПолучитьОбъект();
			втОбъект.Записать(РежимЗаписиДокумента.Проведение);
		Исключение
			//ОписаниеОшибки()
		КонецПопытки; 
	КонецЦикла; 
	
КонецПроцедуры

Процедура ВыполнитьОбновлениеПрограммыВерсия2На6Версию()  
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПроведениеСоревнованияТаблицаКоманд.Ссылка КАК Ссылка,
	|	ПроведениеСоревнованияТаблицаКоманд.НазваниеКоманды КАК НазваниеКоманды
	|ИЗ
	|	Документ.ПроведениеСоревнования.ТаблицаКоманд КАК ПроведениеСоревнованияТаблицаКоманд
	|ГДЕ
	|	ПроведениеСоревнованияТаблицаКоманд.Ссылка.ПометкаУдаления = ЛОЖЬ
	|	И ПроведениеСоревнованияТаблицаКоманд.Ссылка.ОбщийРежимСоревнования = 2
	|ИТОГИ ПО
	|	Ссылка";
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока Выборка.Следующий() Цикл
		Объект = Выборка.Ссылка.ПолучитьОбъект();
		Объект.НазванияКоманд.Очистить();
		ВыборкаКоманд = Выборка.Выбрать();
		Пока ВыборкаКоманд.Следующий() Цикл
			ЗаполнитьЗначенияСвойств(Объект.НазванияКоманд.Добавить(),ВыборкаКоманд);
		КонецЦикла; 
		Объект.Записать(РежимЗаписиДокумента.Проведение) ;
	КонецЦикла; 
	
КонецПроцедуры

#КонецОбласти 
