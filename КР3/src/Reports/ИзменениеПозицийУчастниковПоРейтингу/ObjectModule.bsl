
Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	//параметр 
	парДатаДляТекущегоМеста			= НайтиЗначениеПараметрыКомпоновки(КомпоновщикНастроек, "ДатаДляТекущегоМеста").Значение;
	парДатаДляПредыдущегоМеста	= НайтиЗначениеПараметрыКомпоновки(КомпоновщикНастроек, "ДатаДляПредыдущегоМеста").Значение;
	парВидРейтинга									= НайтиЗначениеПараметрыКомпоновки(КомпоновщикНастроек, "ВидРейтинга").Значение;
	парКлуб													= НайтиЗначениеПараметрыКомпоновки(КомпоновщикНастроек, "Клуб").Значение;
	парГород												= НайтиЗначениеПараметрыКомпоновки(КомпоновщикНастроек, "Город").Значение;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаДляТекущегоМеста", КонецДня(парДатаДляТекущегоМеста));
	Запрос.УстановитьПараметр("ДатаДляПредыдущегоМеста", КонецДня(парДатаДляПредыдущегоМеста));
	Запрос.УстановитьПараметр("ВидРейтинга", парВидРейтинга);
	Запрос.УстановитьПараметр("парКлуб", парКлуб);
	Запрос.УстановитьПараметр("парГород", парГород);
	Запрос.Текст = "ВЫБРАТЬ
	|	РейтингУчастниковСрезПоследних.Участник КАК Участник,
	|	РейтингУчастниковСрезПоследних.Рейтинг КАК Рейтинг,
	|	0 КАК ТекущийНомер
	|ИЗ
	|	РегистрСведений.РейтингУчастников.СрезПоследних(
	|			&ДатаДляТекущегоМеста,
	|			ВидРейтинга = &ВидРейтинга
	|				И ВЫБОР
	|					КОГДА &парКлуб = НЕОПРЕДЕЛЕНО
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ Участник.Клуб = &парКлуб
	|				КОНЕЦ
	|				И ВЫБОР
	|					КОГДА &парГород = НЕОПРЕДЕЛЕНО
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ Участник.Город = &парГород
	|				КОНЕЦ) КАК РейтингУчастниковСрезПоследних
	|
	|УПОРЯДОЧИТЬ ПО
	|	Рейтинг УБЫВ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РейтингУчастниковСрезПоследних.Участник КАК Участник,
	|	РейтингУчастниковСрезПоследних.Рейтинг КАК РейтингПредыдущий,
	|	0 КАК ПредыдущийНомер
	|ИЗ
	|	РегистрСведений.РейтингУчастников.СрезПоследних(
	|			&ДатаДляПредыдущегоМеста,
	|			ВидРейтинга = &ВидРейтинга
	|				И ВЫБОР
	|					КОГДА &парКлуб = НЕОПРЕДЕЛЕНО
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ Участник.Клуб = &парКлуб
	|				КОНЕЦ
	|				И ВЫБОР
	|					КОГДА &парГород = НЕОПРЕДЕЛЕНО
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ Участник.Город = &парГород
	|				КОНЕЦ) КАК РейтингУчастниковСрезПоследних
	|
	|УПОРЯДОЧИТЬ ПО
	|	РейтингПредыдущий УБЫВ";
	
	РезультатПакета = Запрос.ВыполнитьПакет();
	
	ТаблицаПоТекущемуМесту 			= РезультатПакета[0].Выгрузить();
	ТаблицаПоПредыдущемуМесту 	= РезультатПакета[1].Выгрузить();
	
	Сч = 0;
	Для каждого ТекСтр Из ТаблицаПоТекущемуМесту Цикл
		Сч = Сч + 1;
		ТекСтр.ТекущийНомер = Сч;
	КонецЦикла; 
	
	Сч = 0;
	Для каждого ТекСтр Из ТаблицаПоПредыдущемуМесту Цикл
		Сч = Сч + 1;
		ТекСтр.ПредыдущийНомер = Сч;
	КонецЦикла; 
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = "ВЫБРАТЬ * ПОМЕСТИТЬ втТЗ1 ИЗ &Внеш КАК Внеш; 
	|ВЫБРАТЬ * ПОМЕСТИТЬ втТЗ2 ИЗ &Внеш1 КАК Внеш1";
	Запрос.УстановитьПараметр("Внеш", ТаблицаПоТекущемуМесту);
	Запрос.УстановитьПараметр("Внеш1", ТаблицаПоПредыдущемуМесту);
	Запрос.Выполнить();
	
	Запрос.Текст = "ВЫБРАТЬ
	|	втТЗ1.Участник КАК Участник,
	|	втТЗ1.ТекущийНомер КАК ТекущийНомер,
	|	втТЗ1.Рейтинг КАК Рейтинг
	|ПОМЕСТИТЬ втТаблицаТекущая
	|ИЗ
	|	втТЗ1 КАК втТЗ1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втТЗ2.Участник КАК Участник,
	|	втТЗ2.ПредыдущийНомер КАК ПредыдущийНомер,
	|	втТЗ2.РейтингПредыдущий КАК РейтингПредыдущий
	|ПОМЕСТИТЬ втТаблицаПредыдущая
	|ИЗ
	|	втТЗ2 КАК втТЗ2
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втТаблицаТекущая.Участник КАК Участник
	|ПОМЕСТИТЬ втВсеУчастники
	|ИЗ
	|	втТаблицаТекущая КАК втТаблицаТекущая
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	втТаблицаПредыдущая.Участник
	|ИЗ
	|	втТаблицаПредыдущая КАК втТаблицаПредыдущая
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	втВсеУчастники.Участник КАК Участник
	|ПОМЕСТИТЬ втСвернутыеУчастники
	|ИЗ
	|	втВсеУчастники КАК втВсеУчастники
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Участник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ПроведениеСоревнованияСписокУчастников.Ссылка.Дата) КАК Дата,
	|	ПроведениеСоревнованияСписокУчастников.Участник КАК Участник
	|ПОМЕСТИТЬ втПоследнееСоревнование
	|ИЗ
	|	Документ.ПроведениеСоревнования.СписокУчастников КАК ПроведениеСоревнованияСписокУчастников
	|ГДЕ
	|	ПроведениеСоревнованияСписокУчастников.Участник В
	|			(ВЫБРАТЬ
	|				втСвернутыеУчастники.Участник
	|			ИЗ
	|				втСвернутыеУчастники)
	|	И ПроведениеСоревнованияСписокУчастников.Ссылка.Дата <= &ДатаДляТекущегоМеста
	|
	|СГРУППИРОВАТЬ ПО
	|	ПроведениеСоревнованияСписокУчастников.Участник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втСвернутыеУчастники.Участник КАК Участник,
	|	втТаблицаТекущая.ТекущийНомер КАК ТекущийНомер,
	|	втТаблицаТекущая.Рейтинг КАК Рейтинг,
	|	втТаблицаПредыдущая.ПредыдущийНомер КАК ПредыдущийНомер,
	|	втТаблицаПредыдущая.РейтингПредыдущий КАК РейтингПредыдущий,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(втТаблицаПредыдущая.ПредыдущийНомер, 0) = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(втТаблицаПредыдущая.ПредыдущийНомер, 0) - ЕСТЬNULL(втТаблицаТекущая.ТекущийНомер, 0)
	|	КОНЕЦ КАК ДельтаПоНомеру,
	|	ЕСТЬNULL(втТаблицаТекущая.Рейтинг, 0) - ЕСТЬNULL(втТаблицаПредыдущая.РейтингПредыдущий, 0) КАК ДельтаПоРейтингу,
	|	втПоследнееСоревнование.Дата КАК ДатаПоследнегоСоревнования
	|ИЗ
	|	втСвернутыеУчастники КАК втСвернутыеУчастники
	|		ЛЕВОЕ СОЕДИНЕНИЕ втТаблицаТекущая КАК втТаблицаТекущая
	|		ПО втСвернутыеУчастники.Участник = втТаблицаТекущая.Участник
	|		ЛЕВОЕ СОЕДИНЕНИЕ втТаблицаПредыдущая КАК втТаблицаПредыдущая
	|		ПО втСвернутыеУчастники.Участник = втТаблицаПредыдущая.Участник
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПоследнееСоревнование КАК втПоследнееСоревнование
	|		ПО втСвернутыеУчастники.Участник = втПоследнееСоревнование.Участник
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТекущийНомер,
	|	Участник";
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	
	ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных;
	
	Настройки =  КомпоновщикНастроек.ПолучитьНастройки();
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных,Настройки,ДанныеРасшифровки);
	
	ВнешниеНаборыДанных = Новый Структура;
	ВнешниеНаборыДанных.Вставить("Таблица", РезультатЗапроса);
	
	ПроцессорКД = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКД.Инициализировать(МакетКомпоновки, ВнешниеНаборыДанных, ДанныеРасшифровки);
	
	ДокументРезультат.Очистить();
		
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	ПроцессорВывода.Вывести(ПроцессорКД);
		
КонецПроцедуры

Функция НайтиЗначениеПараметрыКомпоновки(Компоновщик,ИмяПоля)
	
	ПараметрыПоИмени 								= Компоновщик.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных(ИмяПоля));
	НастройкаПараметра					 			= Компоновщик.ПользовательскиеНастройки.Элементы.Найти(ПараметрыПоИмени.ИдентификаторПользовательскойНастройки);
	
	ВозвратСтруктура = Новый Структура;
	Если НастройкаПараметра = Неопределено Тогда
		ВозвратСтруктура.Вставить("Использование",ПараметрыПоИмени.Использование);
		Если ВозвратСтруктура.Использование Тогда
			ВозвратСтруктура.Вставить("Значение",ПараметрыПоИмени.Значение);
		Иначе
			ВозвратСтруктура.Вставить("Значение", Неопределено);
		КонецЕсли; 
	Иначе
		ВозвратСтруктура.Вставить("Использование",НастройкаПараметра.Использование);
		Если ВозвратСтруктура.Использование Тогда
			ВозвратСтруктура.Вставить("Значение",НастройкаПараметра.Значение);
		Иначе
			ВозвратСтруктура.Вставить("Значение", Неопределено);
		КонецЕсли;
	КонецЕсли; 
	
	Возврат ВозвратСтруктура;
	
КонецФункции
